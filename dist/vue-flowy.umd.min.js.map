{"version":3,"sources":["webpack://vue-flowy/webpack/universalModuleDefinition","webpack://vue-flowy/webpack/bootstrap","webpack://vue-flowy/./src/VueFlowy.vue?33d2","webpack://vue-flowy/./src/graph/Node.js","webpack://vue-flowy/./src/graph/Layout.js","webpack://vue-flowy/./src/graph/Edge.js","webpack://vue-flowy/./src/Graph.js","webpack://vue-flowy/./src/graph/Svg.js","webpack://vue-flowy/./src/graph/Shape.js","webpack://vue-flowy/./src/graph/Label.js","webpack://vue-flowy/./src/Renderer.js","webpack://vue-flowy/./src/FlowElement.js","webpack://vue-flowy/./src/FlowChart.js","webpack://vue-flowy/src/VueFlowy.vue","webpack://vue-flowy/./src/VueFlowy.vue?d097","webpack://vue-flowy/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://vue-flowy/./src/VueFlowy.vue","webpack://vue-flowy/./src/main.js","webpack://vue-flowy/./src/VueFlowy.vue?f414","webpack://vue-flowy/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","_uid","staticRenderFns","defaults","paddingLeft","paddingRight","paddingTop","paddingBottom","rx","ry","shape","width","height","GraphNode","[object Object]","options","setOptions","label","assign","Layout","graph","runLayout","console","log","makeSpaceForEdgeLabels","createNestingGraph","rank","cleanupNestingGraph","position","rankSep","edges","forEach","edge","minLen","labelPos","toLowerCase","rankDir","labelOffset","setNode","dummy","depths","treeDepths","Math","max","values","nodeSep","weight","reduce","prevVal","getChildren","child","dfs","nodeRankFactor","removeNode","nestingEdge","removeEdge","layout","node","depth","children","length","setEdge","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","positionY","buildLayerMatrix","layering","prevY","layer","maxHeight","map","y","nodes","order","longestPath","visited","_longestPath","min","outEdges","outEdge","to","sources","DEFAULT_EDGE_NAME","EDGE_KEY_DELIM","Edge_defaults","Edge","from","directed","tmp","GRAPH_NODE","Graph_Graph","multiGraph","compound","edgeSep","marginX","marginY","_nodes","_edges","parent","in","preds","out","sucs","edgeObjs","edgeId","generateId","fromNode","toNode","childArray","keys","filter","outTo","nodeIds","GraphSvg","tag","document","createElementNS","el","appendChild","attribute","setAttribute","selector","res","querySelector","querySelectorAll","Array","createTextNode","classList","add","Shape_Shape","shapeType","bbox","getBBox","attr","Label_GraphLabel","labelData","group","textLabel","append","text","Renderer_Renderer","svg","createOrSelectGroup","createEdgeLabels","createNodes","positionNodes","selection","isSubgraph","graphNode","nodeGroup","addClass","labelGroup","labelBBox","shapeBBox","svgGroup","g","svgEdgeLabels","selectAll","groupElement","SvgGenerator","create","x","select","FlowElement","destinationElement","push","otherId","FlowChart_FlowChart","elements","element","k","renderer","VueFlowyvue_type_script_lang_js","props","chart","type","required","chartElement","watch","chart.elements","newVal","oldVal","getElementById","src_VueFlowyvue_type_script_lang_js","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","component","VueFlowy","main_plugin","install","Vue","main","FlowChart","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_8_oneOf_2_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_2_2_node_modules_vue_loader_lib_index_js_vue_loader_options_VueFlowy_vue_vue_type_style_index_0_lang_scss__WEBPACK_IMPORTED_MODULE_0___default","currentScript","src","match"],"mappings":"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","file":"vue-flowy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-flowy\"] = factory();\n\telse\n\t\troot[\"vue-flowy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"+xUi\");\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flowyChart\",attrs:{\"id\":_vm._uid}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const defaults = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n  width: 0,\n  height: 0\n}\n\nexport default class GraphNode {\n  constructor(id, options) {\n    /** @type {string} */\n    this.id = id\n    this.setOptions(options)\n  }\n\n  setOptions(options = {}) {\n    if (!options.label) {\n      options.label = this.id\n    }\n\n    Object.assign(this, defaults, options)\n  }\n\n  setDefaults() {\n\n  }\n}\n","import Graph from '../Graph';\nimport GraphNode from './Node';\n\nexport default class Layout {\n  /**\n   * \n   * @param {Graph} graph \n   */\n  constructor(graph) {\n    /** @type {Graph} */\n    this.graph = graph\n    this.runLayout()\n    console.log('new layout for graph', graph)\n  }\n\n  runLayout() {\n    this.makeSpaceForEdgeLabels()\n    this.createNestingGraph()\n    this.rank()\n    this.cleanupNestingGraph()\n    this.position()\n  }\n\n  makeSpaceForEdgeLabels() {\n    this.graph.rankSep /= 2\n    console.log(this.graph)\n    this.graph.edges.forEach(edge => {\n      console.log('making space for edge', edge)\n      edge.minLen *= 2\n\n      if (edge.labelPos.toLowerCase() === 'c') {\n        return\n      }\n\n      if (this.graph.rankDir === 'TB' || this.graph.rankDir === 'BT') {\n        edge.width += edge.labelOffset\n      } else {\n        edge.height += edge.labelOffset\n      }\n    })\n  }\n\n  createNestingGraph() {\n    console.log('creating nesting graph')\n    this.graph.root = this.graph.setNode('_root', {dummy: 'root'})\n    const depths = this.treeDepths()\n    console.log('depths', depths)\n    const height = Math.max(...Object.values(depths)) - 1\n    const nodeSep = 2 * height + 1\n\n    // multiply minLen by nodeSep to align nodes on non-border ranks\n    this.graph.edges.forEach(edge => {\n      edge.minLen *= nodeSep\n    })\n\n    // calculate a weight that is sufficient to keep subgraphs vertically compact\n    const weight = this.graph.edges.reduce((prevVal, edge) => prevVal + edge.weight, 0)\n\n    // create border nodes and link them up\n    this.graph.getChildren().forEach(child => {\n      this.dfs(this.graph.root, nodeSep, weight, height, depths, child)\n    })\n\n    this.graph.nodeRankFactor = nodeSep\n  }\n\n  cleanupNestingGraph() {\n    this.graph.removeNode(this.graph.root.id)\n    this.graph.root = null\n    this.graph.edges.forEach(edge => {\n      if (edge.nestingEdge) {\n        this.graph.removeEdge(edge.id)\n      }\n    })\n  }\n\n  treeDepths() {\n    const depths = {}\n    const layout = this\n\n    function dfs(node, depth = 1) {\n      const children = layout.graph.getChildren(node.id)\n      if (children && children.length) {\n        children.forEach(child => {\n          dfs(child, depth + 1)\n        })\n      }\n      depths[node.id] = depth\n    }\n    this.graph.getChildren().forEach(dfs)\n    return depths\n  }\n\n  /**\n   * \n   * @param {GraphNode} root \n   * @param {*} nodeSep \n   * @param {*} weight \n   * @param {*} height \n   * @param {*} depths \n   * @param {GraphNode} node \n   */\n  dfs(root, nodeSep, weight, height, depths, node) {\n    const children = this.graph.getChildren(node.id)\n    console.log('children of', node, children)\n    if (!children.length) {\n      if (node.id !== root.id) {\n        this.graph.setEdge(root.id, node.id, {weight: 0, minLen: nodeSep})\n      }\n      return\n    }\n\n    console.log('not returning, patcher: code further!')\n  }\n\n  rank() {\n    switch (this.graph.ranker) {\n      case 'network-simplex':\n        this.networkSimplexRanker()\n        break\n      case 'tight-tree':\n        this.tightTreeRanker()\n        break\n      case 'longest-path':\n        this.longestPathRanker()\n        break\n      default:\n        this.networkSimplexRanker()\n        break\n    }\n  }\n\n  position() {\n    this.positionY()\n\n  }\n\n  positionX() {\n    const layering = this.buildLayerMatrix()\n  }\n\n  positionY() {\n    const layering = this.buildLayerMatrix()\n    console.log('layering', layering)\n    const rankSep = this.graph.rankSep\n    let prevY = 0\n    layering.forEach(layer => {\n      const maxHeight = Math.max(layer.map(node => {\n        return node.height\n      }))\n      console.log('maxHeight of nodes layer', maxHeight)\n      layer.forEach(node => {\n        node.y = prevY + maxHeight / 2\n      })\n      prevY += maxHeight + rankSep\n    })\n  }\n\n  buildLayerMatrix() {\n    const layering = []\n    this.graph.nodes.forEach(node => {\n      if (node.rank) {\n        if (!layering[node.rank]) {\n          layering[node.rank] = []\n        }\n        layering[node.rank][node.order] = node\n      }\n    })\n\n    return layering\n  }\n\n  networkSimplexRanker() {\n    this.longestPath()\n  }\n\n  longestPath() {\n    const layout = this\n    const visited = {}\n\n    function _longestPath(node) {\n      console.log('visting node', node)\n      if (visited[node.id]) {\n        return node.rank\n      }\n      visited[node.id] = true\n  \n      const rank = Math.min(layout.graph.outEdges(node).map(outEdge => {\n        return _longestPath(outEdge.to) - outEdge.minLen\n      })) || 0\n  \n      return (node.rank = rank)\n    }\n\n    console.log('sources', this.graph.sources)\n    this.graph.sources.forEach(_longestPath)\n  }\n}","const DEFAULT_EDGE_NAME = '\\x00'\nconst EDGE_KEY_DELIM = '\\x01'\n\nconst defaults = {\n  minLen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labelOffset: 10,\n  labelPos: 'r'\n}\n\nexport default class Edge {\n  constructor(id, from, to, options) {\n    this.id = id\n    this.from = from\n    this.to = to\n    this.setOptions(options)\n  }\n\n  static generateId(from, to, directed = false) {\n    if (!directed && from > to) {\n      const tmp = from\n      from = to\n      to = tmp\n    }\n    return from + EDGE_KEY_DELIM + to + EDGE_KEY_DELIM + DEFAULT_EDGE_NAME\n  }\n\n  setOptions(options) {\n    Object.assign(this, defaults, options)\n  }\n}","import GraphNode from \"./graph/Node\";\nimport Layout from \"./graph/Layout\";\nimport Edge from \"./graph/Edge\";\n\nconst GRAPH_NODE = '\\x00'\n\nexport default class Graph {\n  constructor({\n      directed: directed = true,\n      multiGraph: multiGraph = false,\n      compound: compound = false,\n      rankDir: rankDir = 'TB',\n      rankSep: rankSep = 50,\n      edgeSep: edgeSep = 20,\n      nodeSep: nodeSep = 50,\n      marginX: marginX = 20,\n      marginY: marginY = 20\n    }) {\n    /** @type {{id: GraphNode}} */\n    this._nodes = {}\n    /** @type {{id: Edge}} */\n    this._edges = {}\n\n    if (this.compound === true) {\n      this.parent = {}\n      this.children = {}\n      this.children[GRAPH_NODE] = {}\n    }\n\n    /** @type {GraphNode} */\n    this.root = null\n\n    // v -> edgeObj\n    this.in = {}\n\n    // u -> v -> Number\n    this.preds = {}\n\n    // v -> edgeObj\n    this.out = {}\n\n    // v -> w -> Number\n    this.sucs = {}\n\n    // e -> edgeObj\n    this.edgeObjs = {}\n  }\n\n  /**\n   * \n   * @param {string} id \n   * @param {{}} options \n   * @returns {GraphNode} node\n   */\n  setNode(id, options) {\n    if (this._nodes[id]) {\n      if (options) {\n        this._nodes[id].setOptions(options)\n      }\n      return this._nodes[id]\n    }\n\n    console.log('creating node', id, options)\n\n    this._nodes[id] = new GraphNode(id, options)\n\n    if (this.compound === true) {\n      this.parent[id] = GRAPH_NODE\n      this.children[id] = {}\n      this.children[GRAPH_NODE][id] = true\n    }\n\n    this.in[id] = {}\n    this.preds[id] = {}\n    this.out[id] = {}\n    this.sucs[id] = {}\n    return this._nodes[id]\n  }\n\n  /**\n   * \n   * @param {string} id \n   */\n  removeNode(id) {\n    console.log('TODO: removing not finished')\n    if (!this._nodes[id]) {\n      return\n    }\n\n    delete this._nodes[id]\n\n    if (this.compound) {\n      delete this.parent[id]\n      delete this.children[id]\n    }\n\n    delete this.in[id]\n    delete this.preds[id]\n    delete this.out[id]\n    delete this.sucs[id]\n  }\n\n  /**\n   * \n   * @param {string} from \n   * @param {string} to \n   * @param {{}} options \n   */\n  setEdge(from, to, options) {\n    console.log('setting edge', from, to, options)\n\n    const edgeId = Edge.generateId(from, to, this.directed)\n\n    if (this._edges[edgeId]) {\n      if (options) {\n        this._edges[edgeId].setOptions(options)\n      }\n      return this\n    }\n\n    // first ensure the nodes exist\n    const fromNode = this.setNode(from)\n    const toNode = this.setNode(to)\n\n    const edge = new Edge(edgeId, fromNode, toNode, options)\n\n    this._edges[edgeId] = edge\n\n    this.out[from][edgeId] = edge\n    this.in[to][edgeId] = edge\n    return this\n  }\n\n  /**\n   * \n   * @param {string} id \n   */\n  removeEdge(id) {\n    console.log('TODO: removing not finished')\n    if (!this.edges[id]) {\n      return\n    }\n    /** @type {Edge} */\n    const edge = this._edges[id]\n    delete this.in[edge.from]\n    delete this.out[edge.to]\n    delete this._edges[id]\n  }\n\n  getNode(id) {\n    return this._nodes[id]\n  }\n\n  getChildren(id) {\n    if (!id) {\n      id = GRAPH_NODE\n    }\n\n    if (this.compound) {\n      const childArray = this.children[id]\n      if (childArray) {\n        return Object.keys(childArray)\n      }\n    } else if (id === GRAPH_NODE) {\n      return this.nodes\n    } else {\n      return []\n    }\n  }\n\n  isSubgraph(id) {\n    return this.getChildren(id).length !== 0\n  }\n\n  layout() {\n    console.log('layouting graph')\n    const layoutGraph = new Layout(this)\n  }\n\n  /**\n   * @returns {Array<{label: string}>} all nodes of the graph\n   */\n  get nodes() {\n    return Object.values(this._nodes)\n  }\n\n  /**\n   * @returns {Array<{label: string}>} all edges of the graph\n   */\n  get edges() {\n    return Object.values(this._edges)\n  }\n\n  get sources() {\n    return this.nodes.filter(node => {\n      return Object.keys(this.in[node.id]).length === 0\n    })\n  }\n  \n  /**\n   * \n   * @param {GraphNode} from \n   * @param {GraphNode} to \n   */\n  outEdges(from, to) {\n    console.log('outs', this.out)\n    let outTo = this.out[from.id]\n    console.log('out from', from, 'to', to, outTo)\n    if (!outTo) {\n      return\n    }\n\n    const edges = Object.values(outTo)\n    if (!to) {\n      return edges\n    }\n    return edges.filter(edge => edge.to.id === to.id)\n  }\n\n  /**\n   * @returns {Array<string>} array of all node IDs\n   */\n  get nodeIds() {\n    return Object.keys(this._nodes)\n  }\n}\n","export default class GraphSvg {\n\n  constructor(tag) {\n    /**\n     * @type {HTMLElement}\n     */\n    this.node = document.createElementNS('http://www.w3.org/2000/svg', tag)\n  }\n\n  /**\n   * \n   * @param {string|GraphSvg} tag \n   * @returns {GraphSvg}\n   */\n  append(el) {\n    if (!(el instanceof GraphSvg)) {\n      el = new GraphSvg(el)\n    }\n    this.node.appendChild(el.node)\n    return el\n  }\n\n  attr(attribute, value) {\n    this.node.setAttribute(attribute, value)\n    return this\n  }\n\n  select(selector) {\n    const res = this.node.querySelector(selector)\n    if (res) {\n      return new GraphSvg(res)\n    }\n\n    return null\n  }\n\n  selectAll(selector) {\n    const res = this.node.querySelectorAll(selector)\n    if (res) {\n      return Array.from(res).map((node) => new GraphSvg(node))\n    }\n\n    return null\n  }\n\n  text(s) {\n    const el = document.createTextNode(s)\n    this.node.appendChild(el)\n    return this\n  }\n\n  /**\n   * \n   * @param {string} c \n   */\n  addClass(c) {\n    this.node.classList.add(c)\n    return this\n  }\n}","import GraphSvg from \"../graph/Svg\";\n\nexport default class Shape {\n\n  /**\n   * \n   * @param {string} shapeType \n   * @param {Object} bbox \n   * @param {Object} options \n   */\n  constructor(shapeType, bbox, options) {\n    /** @type {GraphSvg} */\n    this.shape = this[shapeType](bbox, options)\n    console.log('inside bbox', this.shape.node.getBBox())\n  }\n  /**\n   * \n   * @param {Object} bbox \n   * @param {Object} options \n   */\n  rect(bbox, options) {\n    console.log('bbox', bbox)\n    return new GraphSvg('rect')\n      .attr('rx', options.rx)\n      .attr('ry', options.ry)\n      .attr('x', -bbox.width / 2)\n      .attr('y', -bbox.height / 2)\n      .attr('width', bbox.width)\n      .attr('height', bbox.height)\n      .attr('rx', options.rx)\n  }\n}","import GraphSvg from \"./Svg\";\n\nexport default class GraphLabel {\n  constructor(labelData) {\n    this.group = new GraphSvg('g')\n    this.labelData = labelData\n\n    this.textLabel()\n  }\n\n  textLabel() {\n    const text = this.group.append('text').text(this.labelData.label)\n  }\n}","import Graph from './Graph'\nimport Shape from './graph/Shape'\nimport GraphSvg from './graph/Svg'\nimport GraphLabel from './graph/Label'\n\nexport default class Renderer {\n  /**\n   * \n   * @param {Graph} graph \n   */\n  constructor(graph) {\n    this.graph = graph\n  }\n\n  render(svg) {\n    // TODO: remove all children of svg\n\n    const edgePathsGroup = this.createOrSelectGroup(svg, 'edgePaths')\n    const edgeLabels = this.createEdgeLabels(\n      this.createOrSelectGroup(svg, 'edgeLabels'),\n      this.graph\n    )\n    this.createNodes(\n      this.createOrSelectGroup(svg, 'nodes')\n    )\n\n    this.graph.layout()\n\n    this.positionNodes()\n  }\n\n  /**\n   *\n   * @param {GraphSvg} selection\n   * @param {Graph} graph\n   */\n  createNodes(selection) {\n    console.log('createNodes selection is', selection, 'graph is', this.graph)\n    const simpleNodes = this.graph.nodeIds.filter(id => {\n      return !this.graph.isSubgraph(id)\n    })\n\n    // we have to append all simpleNodes to the graph now\n    this.graph.nodes.forEach(graphNode => {\n      const nodeGroup = selection.append('g').addClass('node')\n\n      console.log('adding node', graphNode)\n      const labelGroup = nodeGroup.append('g').addClass('label')\n      const label = labelGroup.append(\n        new GraphLabel({ label: graphNode.label }).group\n      )\n      const labelBBox = label.node.getBBox()\n      console.log('label', label, 'labelGroup', labelGroup)\n\n      labelBBox.width += graphNode.paddingLeft + graphNode.paddingRight\n      labelBBox.height += graphNode.paddingTop + graphNode.paddingBottom\n\n      labelGroup.attr('transform', 'translate(' +\n        ((graphNode.paddingLeft - graphNode.paddingRight) / 2) + ',' +\n        ((graphNode.paddingTop - graphNode.paddingBottom) / 2) + ')'\n      )\n      \n      // nodeGroup.node.style.opacity = 0\n\n      const shape = nodeGroup.append(\n        new Shape(graphNode.shape, labelBBox, graphNode).shape\n      )\n      const shapeBBox = shape.node.getBBox()\n      graphNode.width = shapeBBox.width\n      graphNode.height = shapeBBox.height\n      nodeGroup.append(labelGroup)\n      graphNode.svgGroup = nodeGroup\n    })\n    // let svgNodes = selection.querySelectorAll('g.node')\n    // svgNodes.forEach((svgNode) => {\n\n    //   svgNode.classList.add('update')\n    // })\n\n    // for (const node of nodes) {\n    //   const shape = shapes[node.shape]\n    // }\n  }\n\n  createLabel(selection) {}\n\n  /**\n   *\n   * @param {GraphSvg} selection\n   * @param {Graph} g\n   */\n  createEdgeLabels(selection, g) {\n    let svgEdgeLabels = selection.selectAll('g.edgeLabel')\n    console.log(svgEdgeLabels)\n    svgEdgeLabels.forEach(n => {\n      const groupElement = SvgGenerator.create('g')\n      groupElement.classList.add('edgeLabel')\n      // groupElement.style.opacity = 0\n      n.classList.add('update')\n      n.appendChild(groupElement)\n    })\n  }\n\n  positionNodes() {\n    console.log('position nodes', this.graph.nodes, 'with edges', this.graph.edges)\n    this.graph.nodes.forEach(graphNode => {\n      graphNode.svgGroup.attr('transform', 'translate(' + graphNode.x + ',' + graphNode.y + ')')\n    })\n  }\n\n  /**\n   *\n   * @param {GraphSvg} root\n   * @param {string} name\n   */\n  createOrSelectGroup(root, name) {\n    return root.select('g.' + name) || root.append('g').addClass(name)\n  }\n}\n","export default class FlowElement {\n  constructor(id, options) {\n    this.id = id\n    this.options = options\n    this.edges = []\n  }\n\n  leadsTo(destinationElement, options) {\n    this.edges.push({ otherId: destinationElement.id, options })\n    return destinationElement\n  }\n}\n","// import {} from \"d3\"\n// import {Graph} from \"graphlibrary\"\n// import dagreD3 from \"dagre-d3-renderer\"\nimport Graph from './Graph'\nimport Renderer from './Renderer'\nimport FlowElement from './FlowElement'\nimport GraphSvg from './graph/Svg';\n\nexport default class FlowChart {\n  constructor(options) {\n    this.elements = []\n  }\n\n  addElement(id, options) {\n    const el = new FlowElement(id, options)\n    this.elements.push(el)\n    return el\n  }\n\n  render(element) {\n    const svg = new GraphSvg('svg')\n    svg.node.id = 'f' + element.id\n    element.appendChild(svg.node)\n    const group = svg.append('g')\n\n    // Create the input graph\n    const graph = new Graph({\n      multiGraph: true,\n      compound: true,\n      rankDir: 'LR',\n      marginX: 20,\n      marginY: 20\n    })\n\n    // first create all nodes\n    for (const i in this.elements) {\n      const el = this.elements[i]\n      graph.setNode(el.id, el.options)\n    }\n\n    // now apply some styles to all nodes\n    for (const node of graph.nodes) {\n      node.rx = node.ry = 5\n    }\n\n    // now create all edges\n    for (const i in this.elements) {\n      const el = this.elements[i]\n      for (const k in el.edges) {\n        const edge = el.edges[k]\n\n        graph.setEdge(el.id, edge.otherId, edge.options)\n      }\n    }\n\n    const renderer = new Renderer(graph)\n\n    renderer.render(group)\n\n    // const svgElement = document.getElementById('f' + element.id)\n    // const groupElement = svgElement.querySelector('g')\n    // svgElement.style.width = groupElement.getBoundingClientRect().width + 40\n    // svgElement.style.height = groupElement.getBoundingClientRect().height + 40\n  }\n}\n","<template>\n  <div \n    :id=\"_uid\" \n    class=\"flowyChart\"/>\n</template>\n\n<script>\nimport FlowChart from './FlowChart'\n\nexport default {\n  name: 'VueFlowy',\n  props: {\n    chart: {\n      type: FlowChart,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chartElement: null\n    }\n  },\n  watch: {\n    'chart.elements': function(newVal, oldVal) {\n      this.chart.render(this.chartElement)\n    }\n  },\n  mounted() {\n    this.chartElement = document.getElementById(this._uid)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.flowyChart {\n  svg {\n    display: block;\n    margin: 0 auto;\n  }\n\n  .node rect {\n    stroke: #999;\n    fill: #fff;\n    stroke-width: 1.5px;\n  }\n\n  .edgePath path {\n    stroke: #333;\n    stroke-width: 1.5px;\n  }\n}\n</style>\n","import mod from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=script&lang=js\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./VueFlowy.vue?vue&type=template&id=6244c0f8\"\nimport script from \"./VueFlowy.vue?vue&type=script&lang=js\"\nexport * from \"./VueFlowy.vue?vue&type=script&lang=js\"\nimport style0 from \"./VueFlowy.vue?vue&type=style&index=0&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import VueFlowy from './VueFlowy.vue'\nimport FlowChart from './FlowChart.js'\n\nconst plugin = {\n  install: Vue => {\n    Vue.component(VueFlowy.name, VueFlowy)\n  }\n}\n\nVueFlowy.install = plugin.install\n\nexport default { VueFlowy, FlowChart }\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\"","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  let i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n"],"sourceRoot":""}