{"version":3,"sources":["webpack://vue-flowy/webpack/universalModuleDefinition","webpack://vue-flowy/webpack/bootstrap","webpack://vue-flowy/./src/VueFlowy.vue?33d2","webpack://vue-flowy/./src/graph/Node.js","webpack://vue-flowy/./src/graph/Edge.js","webpack://vue-flowy/./src/graph/Layout.js","webpack://vue-flowy/./src/Graph.js","webpack://vue-flowy/./src/graph/Svg.js","webpack://vue-flowy/./src/graph/Shape.js","webpack://vue-flowy/./src/graph/Label.js","webpack://vue-flowy/./src/Renderer.js","webpack://vue-flowy/./src/FlowElement.js","webpack://vue-flowy/./src/FlowChart.js","webpack://vue-flowy/src/VueFlowy.vue","webpack://vue-flowy/./src/VueFlowy.vue?d097","webpack://vue-flowy/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://vue-flowy/./src/VueFlowy.vue","webpack://vue-flowy/./src/main.js","webpack://vue-flowy/./src/VueFlowy.vue?f414","webpack://vue-flowy/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","_uid","staticRenderFns","defaults","paddingLeft","paddingRight","paddingTop","paddingBottom","rx","ry","shape","width","height","GraphNode","[object Object]","options","setOptions","label","assign","DEFAULT_EDGE_NAME","EDGE_KEY_DELIM","Edge_defaults","minLen","weight","labelOffset","labelPos","Edge","from","to","directed","tmp","Layout_Layout","graph","runLayout","console","log","makeSpaceForEdgeLabels","createNestingGraph","rank","cleanupNestingGraph","position","rankSep","edges","forEach","edge","toLowerCase","rankDir","setNode","dummy","depths","treeDepths","Math","max","values","nodeSep","reduce","prevVal","getChildren","child","dfs","nodeRankFactor","removeNode","nestingEdge","removeEdge","layout","nodeId","depth","children","length","childId","node","setEdge","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","positionY","buildLayerMatrix","layering","prevY","layer","maxHeight","map","y","nodes","order","longestPath","feasibleTree","visited","_longestPath","min","outEdges","outEdge","sources","treeGraph","Graph_Graph","start","nodeIds","size","delta","doneTimes","tightTree","findMinSlackEdge","hasNode","slack","shiftRanks","Error","nodeEdges","minSlackEdge","minSlack","Infinity","GRAPH_NODE","multiGraph","compound","edgeSep","marginX","marginY","_nodes","_edges","parent","in","preds","out","sucs","edgeId","generateId","fromNode","toNode","childArray","keys","inEdges","concat","filter","inFrom","outFrom","GraphSvg","tag","document","createElementNS","el","appendChild","attribute","setAttribute","selector","res","querySelector","querySelectorAll","Array","createTextNode","classList","add","Shape_Shape","shapeType","bbox","getBBox","attr","Label_GraphLabel","labelData","group","textLabel","append","text","Renderer_Renderer","svg","createOrSelectGroup","createEdgeLabels","createNodes","positionNodes","selection","isSubgraph","graphNode","nodeGroup","addClass","labelGroup","labelBBox","shapeBBox","svgGroup","g","svgEdgeLabels","selectAll","groupElement","SvgGenerator","create","x","select","FlowElement","destinationElement","push","otherId","FlowChart_FlowChart","elements","element","k","renderer","VueFlowyvue_type_script_lang_js","props","chart","type","required","chartElement","watch","chart.elements","newVal","oldVal","getElementById","src_VueFlowyvue_type_script_lang_js","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","VueFlowy","main_plugin","install","Vue","main","FlowChart","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_8_oneOf_2_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_2_2_node_modules_vue_loader_lib_index_js_vue_loader_options_VueFlowy_vue_vue_type_style_index_0_lang_scss__WEBPACK_IMPORTED_MODULE_0___default","currentScript","src","match"],"mappings":"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","file":"vue-flowy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-flowy\"] = factory();\n\telse\n\t\troot[\"vue-flowy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"+xUi\");\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flowyChart\",attrs:{\"id\":_vm._uid}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const defaults = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n  width: 0,\n  height: 0\n}\n\nexport default class GraphNode {\n  constructor(id, options) {\n    /** @type {string} */\n    this.id = id\n    this.setOptions(options)\n  }\n\n  setOptions(options = {}) {\n    if (!options.label) {\n      options.label = this.id\n    }\n\n    Object.assign(this, defaults, options)\n  }\n\n  setDefaults() {}\n}\n","const DEFAULT_EDGE_NAME = '\\x00'\nconst EDGE_KEY_DELIM = '\\x01'\n\nconst defaults = {\n  minLen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labelOffset: 10,\n  labelPos: 'r'\n}\n\nexport default class Edge {\n  constructor(id, from, to, options) {\n    this.id = id\n    this.from = from\n    this.to = to\n    this.setOptions(options)\n  }\n\n  static generateId(from, to, directed = false) {\n    if (!directed && from > to) {\n      const tmp = from\n      from = to\n      to = tmp\n    }\n    return from + EDGE_KEY_DELIM + to + EDGE_KEY_DELIM + DEFAULT_EDGE_NAME\n  }\n\n  setOptions(options) {\n    Object.assign(this, defaults, options)\n  }\n}","import Graph from '../Graph'\nimport GraphNode from './Node'\nimport Edge from './Edge'\n\nexport default class Layout {\n  /**\n   *\n   * @param {Graph} graph\n   */\n  constructor(graph) {\n    /** @type {Graph} */\n    this.graph = graph\n    this.runLayout()\n    console.log('new layout for graph', graph)\n  }\n\n  runLayout() {\n    this.makeSpaceForEdgeLabels()\n    this.createNestingGraph()\n    this.rank()\n    this.cleanupNestingGraph()\n    this.position()\n  }\n\n  makeSpaceForEdgeLabels() {\n    this.graph.rankSep /= 2\n    console.log(this.graph)\n    this.graph.edges.forEach(edge => {\n      console.log('making space for edge', edge)\n      edge.minLen *= 2\n\n      if (edge.labelPos.toLowerCase() === 'c') {\n        return\n      }\n\n      if (this.graph.rankDir === 'TB' || this.graph.rankDir === 'BT') {\n        edge.width += edge.labelOffset\n      } else {\n        edge.height += edge.labelOffset\n      }\n    })\n  }\n\n  createNestingGraph() {\n    console.log('creating nesting graph')\n    this.graph.root = this.graph.setNode('_root', { dummy: 'root' })\n    const depths = this.treeDepths()\n    console.log('depths', depths)\n    const height = Math.max(...Object.values(depths)) - 1\n    const nodeSep = 2 * height + 1\n\n    // multiply minLen by nodeSep to align nodes on non-border ranks\n    this.graph.edges.forEach(edge => {\n      edge.minLen *= nodeSep\n    })\n\n    // calculate a weight that is sufficient to keep subgraphs vertically compact\n    const weight = this.graph.edges.reduce(\n      (prevVal, edge) => prevVal + edge.weight,\n      0\n    )\n\n    // create border nodes and link them up\n    this.graph.getChildren().forEach(child => {\n      this.dfs(this.graph.root, nodeSep, weight, height, depths, child)\n    })\n\n    this.graph.nodeRankFactor = nodeSep\n  }\n\n  cleanupNestingGraph() {\n    this.graph.removeNode(this.graph.root.id)\n    this.graph.root = null\n    this.graph.edges.forEach(edge => {\n      if (edge.nestingEdge) {\n        this.graph.removeEdge(edge.id)\n      }\n    })\n  }\n\n  treeDepths() {\n    const depths = {}\n    const layout = this\n\n    function dfs(nodeId, depth = 1) {\n      const children = layout.graph.getChildren(nodeId)\n      console.log('children of', nodeId, 'are', children, '. depth:', depth)\n      if (children && children.length) {\n        children.forEach(childId => {\n          console.log('child', childId)\n          dfs(childId, depth + 1)\n        })\n      }\n      depths[nodeId] = depth\n    }\n    this.graph.getChildren().forEach(dfs)\n    return depths\n  }\n\n  /**\n   *\n   * @param {GraphNode} root\n   * @param {*} nodeSep\n   * @param {*} weight\n   * @param {*} height\n   * @param {*} depths\n   * @param {GraphNode} node\n   */\n  dfs(root, nodeSep, weight, height, depths, node) {\n    const children = this.graph.getChildren(node.id)\n    console.log('children of', node, children)\n    if (!children.length) {\n      if (node.id !== root.id) {\n        this.graph.setEdge(root.id, node.id, { weight: 0, minLen: nodeSep })\n      }\n      return\n    }\n\n    console.log('not returning, patcher: code further!')\n  }\n\n  rank() {\n    switch (this.graph.ranker) {\n      case 'network-simplex':\n        this.networkSimplexRanker()\n        break\n      case 'tight-tree':\n        this.tightTreeRanker()\n        break\n      case 'longest-path':\n        this.longestPathRanker()\n        break\n      default:\n        this.networkSimplexRanker()\n        break\n    }\n  }\n\n  position() {\n    this.positionY()\n  }\n\n  positionX() {\n    const layering = this.buildLayerMatrix()\n  }\n\n  positionY() {\n    const layering = this.buildLayerMatrix()\n    console.log('layering', layering)\n    const rankSep = this.graph.rankSep\n    let prevY = 0\n    layering.forEach(layer => {\n      const maxHeight = Math.max(\n        layer.map(node => {\n          return node.height\n        })\n      )\n      console.log('maxHeight of nodes layer', maxHeight)\n      layer.forEach(node => {\n        node.y = prevY + maxHeight / 2\n      })\n      prevY += maxHeight + rankSep\n    })\n  }\n\n  buildLayerMatrix() {\n    const layering = []\n    this.graph.nodes.forEach(node => {\n      if (node.rank) {\n        if (!layering[node.rank]) {\n          layering[node.rank] = []\n        }\n        layering[node.rank][node.order] = node\n      }\n    })\n\n    return layering\n  }\n\n  networkSimplexRanker() {\n    this.longestPath()\n    this.feasibleTree()\n  }\n\n  longestPath() {\n    const layout = this\n    const visited = {}\n\n    function _longestPath(node) {\n      console.log('visting node', node)\n      if (visited[node.id]) {\n        return node.rank\n      }\n      visited[node.id] = true\n\n      const rank =\n        Math.min(\n          layout.graph.outEdges(node).map(outEdge => {\n            return _longestPath(outEdge.to) - outEdge.minLen\n          })\n        ) || 0\n\n      return (node.rank = rank)\n    }\n\n    console.log('sources', this.graph.sources)\n    this.graph.sources.forEach(_longestPath)\n  }\n\n  feasibleTree() {\n    this.treeGraph = new Graph({ directed: false })\n\n    const start = this.graph.nodeIds[0]\n    const size = this.graph.nodeIds.length\n    this.treeGraph.setNode(start)\n    console.log('size is', size)\n\n    let edge\n    let delta\n    let doneTimes = 0\n    while (this.tightTree() < size) {\n      console.log('LOOP STARTS')\n      edge = this.findMinSlackEdge()\n      console.log('minslackedge is', edge)\n      delta = this.treeGraph.hasNode(edge.from.id)\n        ? this.slack(edge)\n        : -this.slack(edge)\n      this.shiftRanks(delta)\n      doneTimes++\n      if (doneTimes > 200) {\n        throw new Error('too many loops, breaking now!')\n      }\n    }\n  }\n\n  /**\n   * Finds a maximal tree of tight edges and returns the number of nodes in the tree\n   */\n  tightTree() {\n    const layout = this\n    function dfs(node) {\n      layout.graph.nodeEdges(node).forEach(edge => {\n        console.log('CHECKING EDGE', edge)\n        const to = node.id === edge.from.id ? edge.to : edge.from\n        if (!layout.treeGraph.hasNode(to.id) && !layout.slack(edge)) {\n          console.log('ADDING NODE TO TIGHTTREE')\n          layout.treeGraph.setNode(to.id)\n          layout.treeGraph.setEdge(node.id, to.id)\n          dfs(to)\n        }\n      })\n    }\n\n    this.treeGraph.nodes.forEach(dfs)\n    console.log('tightTree size is', this.treeGraph.nodeIds.length)\n    return this.treeGraph.nodeIds.length\n  }\n\n  findMinSlackEdge() {\n    let minSlackEdge\n    let minSlack = Infinity\n\n    console.log('finding min slack edge')\n\n    this.graph.edges.forEach(edge => {\n      if (\n        this.treeGraph.hasNode(edge.from.id) !==\n        this.treeGraph.hasNode(edge.to.id)\n      ) {\n        const slack = this.slack(edge)\n        if (slack < minSlack) {\n          minSlackEdge = edge\n          minSlack = slack\n        }\n      }\n    })\n\n    return minSlackEdge\n  }\n\n  /**\n   * Returns the amount of slack for the given edge. The slack is defined as the difference\n   * between the length of the edge and its minimum length\n   * @param {Edge} edge\n   */\n  slack(edge) {\n    console.log(\n      'calculating slack of',\n      edge.to.rank,\n      edge.from.rank,\n      edge.minLen,\n      edge.to.rank - edge.from.rank\n    )\n    return edge.to.rank - edge.from.rank - edge.minLen\n  }\n\n  shiftRanks(delta) {\n    this.treeGraph.nodes.forEach(node => {\n      node.rank += delta\n    })\n  }\n}\n","import GraphNode from './graph/Node'\nimport Layout from './graph/Layout'\nimport Edge from './graph/Edge'\n\nconst GRAPH_NODE = '\\x00'\n\nexport default class Graph {\n  constructor({\n    directed = true,\n    multiGraph = false,\n    compound = false,\n    rankDir = 'TB',\n    rankSep = 50,\n    edgeSep = 20,\n    nodeSep = 50,\n    marginX = 20,\n    marginY = 20\n  }) {\n    Object.assign(this, {\n      directed,\n      multiGraph,\n      compound,\n      rankDir,\n      rankSep,\n      edgeSep,\n      nodeSep,\n      marginX,\n      marginY\n    })\n    /** @type {{id: GraphNode}} */\n    this._nodes = {}\n    /** @type {{id: Edge}} */\n    this._edges = {}\n\n    if (this.compound === true) {\n      this.parent = {}\n      this.children = {}\n      this.children[GRAPH_NODE] = {}\n    }\n\n    /** @type {GraphNode} */\n    this.root = null\n\n    // v -> edgeObj\n    this.in = {}\n\n    // u -> v -> Number\n    this.preds = {}\n\n    // v -> edgeObj\n    this.out = {}\n\n    // v -> w -> Number\n    this.sucs = {}\n  }\n\n  /**\n   *\n   * @param {string} id\n   * @param {{}} options\n   * @returns {GraphNode} node\n   */\n  setNode(id, options) {\n    if (this._nodes[id]) {\n      if (options) {\n        this._nodes[id].setOptions(options)\n      }\n      return this._nodes[id]\n    }\n\n    console.log('creating node', id, options)\n\n    this._nodes[id] = new GraphNode(id, options)\n\n    if (this.compound === true) {\n      this.parent[id] = GRAPH_NODE\n      this.children[id] = {}\n      this.children[GRAPH_NODE][id] = true\n    }\n\n    this.in[id] = {}\n    this.preds[id] = {}\n    this.out[id] = {}\n    this.sucs[id] = {}\n    return this._nodes[id]\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  removeNode(id) {\n    console.log('TODO: removing not finished')\n    if (!this._nodes[id]) {\n      return\n    }\n\n    delete this._nodes[id]\n\n    if (this.compound) {\n      delete this.parent[id]\n      delete this.children[id]\n    }\n\n    delete this.in[id]\n    delete this.preds[id]\n    delete this.out[id]\n    delete this.sucs[id]\n  }\n\n  /**\n   *\n   * @param {string} from\n   * @param {string} to\n   * @param {{}} options\n   */\n  setEdge(from, to, options) {\n    console.log('setting edge', from, to, options)\n\n    const edgeId = Edge.generateId(from, to, this.directed)\n\n    if (this._edges[edgeId]) {\n      if (options) {\n        this._edges[edgeId].setOptions(options)\n      }\n      return this\n    }\n\n    // first ensure the nodes exist\n    const fromNode = this.setNode(from)\n    const toNode = this.setNode(to)\n\n    const edge = new Edge(edgeId, fromNode, toNode, options)\n\n    this._edges[edgeId] = edge\n\n    this.out[from][edgeId] = edge\n    this.in[to][edgeId] = edge\n    return this\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  removeEdge(id) {\n    console.log('TODO: removing not finished')\n    if (!this.edges[id]) {\n      return\n    }\n    /** @type {Edge} */\n    const edge = this._edges[id]\n    delete this.in[edge.from]\n    delete this.out[edge.to]\n    delete this._edges[id]\n  }\n\n  getNode(id) {\n    return this._nodes[id]\n  }\n\n  getChildren(id) {\n    if (!id) {\n      id = GRAPH_NODE\n    }\n\n    if (this.compound) {\n      const childArray = this.children[id]\n      if (childArray) {\n        return Object.keys(childArray)\n      }\n    } else if (id === GRAPH_NODE) {\n      return this.nodes\n    } else {\n      return []\n    }\n  }\n\n  /**\n   *\n   * @param {GraphNode} fromId\n   * @param {GraphNode} toId\n   */\n  nodeEdges(from, to) {\n    const inEdges = this.inEdges(from, to)\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(from, to))\n    }\n  }\n\n  isSubgraph(id) {\n    return this.getChildren(id).length !== 0\n  }\n\n  layout() {\n    console.log('layouting graph')\n    const layoutGraph = new Layout(this)\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  hasNode(id) {\n    return this._nodes[id]\n  }\n\n  /**\n   * @returns {Array<{label: string}>} all nodes of the graph\n   */\n  get nodes() {\n    return Object.values(this._nodes)\n  }\n\n  /**\n   * @returns {Array<{label: string}>} all edges of the graph\n   */\n  get edges() {\n    return Object.values(this._edges)\n  }\n\n  get sources() {\n    return this.nodes.filter(node => {\n      return Object.keys(this.in[node.id]).length === 0\n    })\n  }\n\n  /**\n   *\n   * @param {GraphNode} from\n   * @param {GraphNode} to\n   */\n  inEdges(from, to) {\n    // console.log('ins', this.in)\n    let inFrom = this.in[from.id]\n    // console.log('in from', from, 'to', to, inFrom)\n    if (!inFrom) {\n      return\n    }\n\n    const edges = Object.values(inFrom)\n    if (!to) {\n      return edges\n    }\n    return edges.filter(edge => edge.from.id === to.id)\n  }\n\n  /**\n   *\n   * @param {GraphNode} from\n   * @param {GraphNode} to\n   */\n  outEdges(from, to) {\n    // console.log('outs', this.out)\n    let outFrom = this.out[from.id]\n    // console.log('out from', from, 'to', to, outFrom)\n    if (!outFrom) {\n      return\n    }\n\n    const edges = Object.values(outFrom)\n    if (!to) {\n      return edges\n    }\n    return edges.filter(edge => edge.to.id === to.id)\n  }\n\n  /**\n   * @returns {Array<string>} array of all node IDs\n   */\n  get nodeIds() {\n    return Object.keys(this._nodes)\n  }\n}\n","export default class GraphSvg {\n  constructor(tag) {\n    /**\n     * @type {HTMLElement}\n     */\n    this.node = document.createElementNS('http://www.w3.org/2000/svg', tag)\n  }\n\n  /**\n   *\n   * @param {string|GraphSvg} tag\n   * @returns {GraphSvg}\n   */\n  append(el) {\n    if (!(el instanceof GraphSvg)) {\n      el = new GraphSvg(el)\n    }\n    this.node.appendChild(el.node)\n    return el\n  }\n\n  attr(attribute, value) {\n    this.node.setAttribute(attribute, value)\n    return this\n  }\n\n  select(selector) {\n    const res = this.node.querySelector(selector)\n    if (res) {\n      return new GraphSvg(res)\n    }\n\n    return null\n  }\n\n  selectAll(selector) {\n    const res = this.node.querySelectorAll(selector)\n    if (res) {\n      return Array.from(res).map(node => new GraphSvg(node))\n    }\n\n    return null\n  }\n\n  text(s) {\n    const el = document.createTextNode(s)\n    this.node.appendChild(el)\n    return this\n  }\n\n  /**\n   *\n   * @param {string} c\n   */\n  addClass(c) {\n    this.node.classList.add(c)\n    return this\n  }\n}\n","import GraphSvg from \"../graph/Svg\";\n\nexport default class Shape {\n\n  /**\n   * \n   * @param {string} shapeType \n   * @param {Object} bbox \n   * @param {Object} options \n   */\n  constructor(shapeType, bbox, options) {\n    /** @type {GraphSvg} */\n    this.shape = this[shapeType](bbox, options)\n    console.log('inside bbox', this.shape.node.getBBox())\n  }\n  /**\n   * \n   * @param {Object} bbox \n   * @param {Object} options \n   */\n  rect(bbox, options) {\n    console.log('bbox', bbox)\n    return new GraphSvg('rect')\n      .attr('rx', options.rx)\n      .attr('ry', options.ry)\n      .attr('x', -bbox.width / 2)\n      .attr('y', -bbox.height / 2)\n      .attr('width', bbox.width)\n      .attr('height', bbox.height)\n      .attr('rx', options.rx)\n  }\n}","import GraphSvg from \"./Svg\";\n\nexport default class GraphLabel {\n  constructor(labelData) {\n    this.group = new GraphSvg('g')\n    this.labelData = labelData\n\n    this.textLabel()\n  }\n\n  textLabel() {\n    const text = this.group.append('text').text(this.labelData.label)\n  }\n}","import Graph from './Graph'\nimport Shape from './graph/Shape'\nimport GraphSvg from './graph/Svg'\nimport GraphLabel from './graph/Label'\n\nexport default class Renderer {\n  /**\n   *\n   * @param {Graph} graph\n   */\n  constructor(graph) {\n    this.graph = graph\n  }\n\n  render(svg) {\n    console.log('rendering', svg, this.graph)\n    // TODO: remove all children of svg\n\n    const edgePathsGroup = this.createOrSelectGroup(svg, 'edgePaths')\n    const edgeLabels = this.createEdgeLabels(\n      this.createOrSelectGroup(svg, 'edgeLabels'),\n      this.graph\n    )\n    this.createNodes(this.createOrSelectGroup(svg, 'nodes'))\n\n    this.graph.layout()\n\n    this.positionNodes()\n  }\n\n  /**\n   *\n   * @param {GraphSvg} selection\n   * @param {Graph} graph\n   */\n  createNodes(selection) {\n    console.log('createNodes selection is', selection, 'graph is', this.graph)\n    const simpleNodes = this.graph.nodeIds.filter(id => {\n      return !this.graph.isSubgraph(id)\n    })\n\n    // we have to append all simpleNodes to the graph now\n    this.graph.nodes.forEach(graphNode => {\n      const nodeGroup = selection.append('g').addClass('node')\n\n      console.log('adding node', graphNode)\n      const labelGroup = nodeGroup.append('g').addClass('label')\n      const label = labelGroup.append(\n        new GraphLabel({ label: graphNode.label }).group\n      )\n      const labelBBox = label.node.getBBox()\n      console.log('label', label, 'labelGroup', labelGroup)\n\n      labelBBox.width += graphNode.paddingLeft + graphNode.paddingRight\n      labelBBox.height += graphNode.paddingTop + graphNode.paddingBottom\n\n      labelGroup.attr(\n        'transform',\n        'translate(' +\n          (graphNode.paddingLeft - graphNode.paddingRight) / 2 +\n          ',' +\n          (graphNode.paddingTop - graphNode.paddingBottom) / 2 +\n          ')'\n      )\n\n      // nodeGroup.node.style.opacity = 0\n\n      const shape = nodeGroup.append(\n        new Shape(graphNode.shape, labelBBox, graphNode).shape\n      )\n      const shapeBBox = shape.node.getBBox()\n      graphNode.width = shapeBBox.width\n      graphNode.height = shapeBBox.height\n      nodeGroup.append(labelGroup)\n      graphNode.svgGroup = nodeGroup\n    })\n    // let svgNodes = selection.querySelectorAll('g.node')\n    // svgNodes.forEach((svgNode) => {\n\n    //   svgNode.classList.add('update')\n    // })\n\n    // for (const node of nodes) {\n    //   const shape = shapes[node.shape]\n    // }\n  }\n\n  createLabel(selection) {}\n\n  /**\n   *\n   * @param {GraphSvg} selection\n   * @param {Graph} g\n   */\n  createEdgeLabels(selection, g) {\n    let svgEdgeLabels = selection.selectAll('g.edgeLabel')\n    console.log(svgEdgeLabels)\n    svgEdgeLabels.forEach(n => {\n      const groupElement = SvgGenerator.create('g')\n      groupElement.classList.add('edgeLabel')\n      // groupElement.style.opacity = 0\n      n.classList.add('update')\n      n.appendChild(groupElement)\n    })\n  }\n\n  positionNodes() {\n    console.log(\n      'position nodes',\n      this.graph.nodes,\n      'with edges',\n      this.graph.edges\n    )\n    this.graph.nodes.forEach(graphNode => {\n      graphNode.svgGroup.attr(\n        'transform',\n        'translate(' + graphNode.x + ',' + graphNode.y + ')'\n      )\n    })\n  }\n\n  /**\n   *\n   * @param {GraphSvg} root\n   * @param {string} name\n   */\n  createOrSelectGroup(root, name) {\n    return root.select('g.' + name) || root.append('g').addClass(name)\n  }\n}\n","export default class FlowElement {\n  constructor(id, options) {\n    this.id = id\n    this.options = options\n    this.edges = []\n  }\n\n  leadsTo(destinationElement, options) {\n    this.edges.push({ otherId: destinationElement.id, options })\n    return destinationElement\n  }\n}\n","// import {} from \"d3\"\n// import {Graph} from \"graphlibrary\"\n// import dagreD3 from \"dagre-d3-renderer\"\nimport Graph from './Graph'\nimport Renderer from './Renderer'\nimport FlowElement from './FlowElement'\nimport GraphSvg from './graph/Svg';\n\nexport default class FlowChart {\n  constructor(options) {\n    this.elements = []\n  }\n\n  addElement(id, options) {\n    const el = new FlowElement(id, options)\n    this.elements.push(el)\n    return el\n  }\n\n  render(element) {\n    const svg = new GraphSvg('svg')\n    svg.node.id = 'f' + element.id\n    element.appendChild(svg.node)\n    const group = svg.append('g')\n\n    // Create the input graph\n    const graph = new Graph({\n      multiGraph: true,\n      compound: true,\n      rankDir: 'LR',\n      marginX: 20,\n      marginY: 20\n    })\n\n    // first create all nodes\n    for (const i in this.elements) {\n      const el = this.elements[i]\n      graph.setNode(el.id, el.options)\n    }\n\n    // now apply some styles to all nodes\n    for (const node of graph.nodes) {\n      node.rx = node.ry = 5\n    }\n\n    // now create all edges\n    for (const i in this.elements) {\n      const el = this.elements[i]\n      for (const k in el.edges) {\n        const edge = el.edges[k]\n\n        graph.setEdge(el.id, edge.otherId, edge.options)\n      }\n    }\n\n    const renderer = new Renderer(graph)\n\n    renderer.render(group)\n\n    // const svgElement = document.getElementById('f' + element.id)\n    // const groupElement = svgElement.querySelector('g')\n    // svgElement.style.width = groupElement.getBoundingClientRect().width + 40\n    // svgElement.style.height = groupElement.getBoundingClientRect().height + 40\n  }\n}\n","<template>\n  <div \n    :id=\"_uid\" \n    class=\"flowyChart\"/>\n</template>\n\n<script>\nimport FlowChart from './FlowChart'\n\nexport default {\n  name: 'VueFlowy',\n  props: {\n    chart: {\n      type: FlowChart,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chartElement: null\n    }\n  },\n  watch: {\n    'chart.elements': function(newVal, oldVal) {\n      this.chart.render(this.chartElement)\n    }\n  },\n  mounted() {\n    this.chartElement = document.getElementById(this._uid)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.flowyChart {\n  svg {\n    display: block;\n    margin: 0 auto;\n  }\n\n  .node rect {\n    stroke: #999;\n    fill: #fff;\n    stroke-width: 1.5px;\n  }\n\n  .edgePath path {\n    stroke: #333;\n    stroke-width: 1.5px;\n  }\n}\n</style>\n","import mod from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=script&lang=js\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./VueFlowy.vue?vue&type=template&id=6244c0f8\"\nimport script from \"./VueFlowy.vue?vue&type=script&lang=js\"\nexport * from \"./VueFlowy.vue?vue&type=script&lang=js\"\nimport style0 from \"./VueFlowy.vue?vue&type=style&index=0&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import VueFlowy from './VueFlowy.vue'\nimport FlowChart from './FlowChart.js'\n\nconst plugin = {\n  install: Vue => {\n    Vue.component(VueFlowy.name, VueFlowy)\n  }\n}\n\nVueFlowy.install = plugin.install\n\nexport default { VueFlowy, FlowChart }\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\"","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  let i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n"],"sourceRoot":""}