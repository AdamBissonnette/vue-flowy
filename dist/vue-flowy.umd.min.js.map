{"version":3,"sources":["webpack://vue-flowy/webpack/universalModuleDefinition","webpack://vue-flowy/webpack/bootstrap","webpack://vue-flowy/./src/VueFlowy.vue?33d2","webpack://vue-flowy/./src/graph/layout/Size.js","webpack://vue-flowy/./src/graph/Edge.js","webpack://vue-flowy/./src/graph/layout/Layering.js","webpack://vue-flowy/./src/graph/layout/Normalizer.js","webpack://vue-flowy/./src/graph/Layout.js","webpack://vue-flowy/./src/graph/layout/Position.js","webpack://vue-flowy/./src/graph/Node.js","webpack://vue-flowy/./src/Graph.js","webpack://vue-flowy/./src/graph/Svg.js","webpack://vue-flowy/./src/graph/Shape.js","webpack://vue-flowy/./src/graph/Label.js","webpack://vue-flowy/./src/Renderer.js","webpack://vue-flowy/./src/FlowElement.js","webpack://vue-flowy/./src/FlowChart.js","webpack://vue-flowy/src/VueFlowy.vue","webpack://vue-flowy/./src/VueFlowy.vue?d097","webpack://vue-flowy/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://vue-flowy/./src/VueFlowy.vue","webpack://vue-flowy/./src/main.js","webpack://vue-flowy/./node_modules/path-browserify/index.js","webpack://vue-flowy/./src/VueFlowy.vue?c40b","webpack://vue-flowy/./src/VueFlowy.vue?9fc2","webpack://vue-flowy/./src/VueFlowy.vue?1007","webpack://vue-flowy/./node_modules/ms/index.js","webpack://vue-flowy/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://vue-flowy/./node_modules/css-loader/lib/css-base.js","webpack://vue-flowy/./node_modules/debug/src/browser.js","webpack://vue-flowy/./node_modules/node-libs-browser/mock/process.js","webpack://vue-flowy/./node_modules/vue-style-loader/lib/listToStyles.js","webpack://vue-flowy/./node_modules/vue-style-loader/lib/addStylesClient.js","webpack://vue-flowy/./node_modules/debug/src/debug.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","_uid","staticRenderFns","Size","[object Object]","width","height","DEFAULT_EDGE_NAME","EDGE_KEY_DELIM","defaults","minLen","weight","labelOffset","labelPos","Edge_Edge","from","to","options","order","points","data","position","Position","size","assign","setOptions","directed","tmp","log","browser_default","Layering_Layering","graph","matrix","_buildLayerMatrix","layering","nodes","forEach","node","rank","_calculateYPositions","_calculateXPositions","prevY","layer","maxHeight","Math","max","map","y","rankSep","xPositions","adjustedLayering","verticals","horizontals","vert","console","values","reverse","horiz","inner","align","_verticalAlignment","xs","_horizontalCompaction","key","smallestWidthAlignment","_findSmallestWidthAlignment","_alignCoordinates","alignToVals","alignToMin","min","alignToMax","math","alignment","xsVals","delta","x","reverseSep","blockGraph","Graph_Graph","buildBlockGraph","visited","pass1","inEdges","reduce","edge","unknown","keys","nodeId","pos","prevIdx","ws","getPredecessors","getSuccessors","length","layout","sortByFunction","w","mp","floor","il","ceil","Normalizer_log","Normalizer","dummyChains","edges","_normalizeEdge","dummy","addDummyNode","setEdge","ldb","Layout_Layout","runLayout","makeSpaceForEdgeLabels","createNestingGraph","cleanupNestingGraph","normalizeRanks","normalizer","normalize","adjustCoordinateSystem","calculatePositions","undoCoordinateSystem","translateGraph","toLowerCase","rankDir","setNode","depths","treeDepths","nodeSep","prevVal","getChildren","child","dfs","nodeRankFactor","removeNode","nestingEdge","removeEdge","minRank","depth","children","childId","top","addBorderNode","bottom","setParent","borderTop","borderBottom","childTop","childBottom","thisWeight","parent","prefix","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","positionY","buildLayerMatrix","xss","longestPath","feasibleTree","_longestPath","outEdges","outEdge","Infinity","sources","treeGraph","start","nodeIds","doneTimes","tightTree","findMinSlackEdge","hasNode","slack","shiftRanks","Error","nodeEdges","minSlackEdge","minSlack","maxRank","initOrder","assignOrder","ranks","relationship","buildLayerGraph","simpleNodes","filter","layers","push","compare","a","b","orderedNodeIds","sort","index","swapWidthHeight","reverseY","swapXY","_swapWidthHeightOne","_swapXYOne","prevV","minX","maxX","minY","maxY","marginX","marginY","getExtremes","h","point","arr","fn","Node_defaults","paddingLeft","paddingRight","paddingTop","paddingBottom","rx","ry","shape","Node_GraphNode","label","gdb","GRAPH_NODE","multiGraph","compound","edgeSep","_nodes","_edges","randomId","in","preds","out","sucs","edgeId","generateId","fromNode","toNode","type","fromId","toId","childArray","parentId","ancestor","concat","inFrom","outFrom","prevMax","getEdge","sep","sum","GraphSvg","tag","document","createElementNS","el","appendChild","attribute","setAttribute","selector","res","querySelector","querySelectorAll","Array","createTextNode","classList","add","Shape_Shape","shapeType","bbox","attr","Label_GraphLabel","labelData","group","textLabel","append","text","Renderer_Renderer","svg","createOrSelectGroup","createEdgeLabels","createNodes","doLayout","slice","positionNodes","selection","isSubgraph","graphNode","nodeGroup","addClass","labelGroup","labelBBox","getBBox","shapeBBox","svgGroup","g","selectAll","edgeLabelGroup","select","FlowElement","destinationElement","otherId","FlowChart_FlowChart","localStorage","debug","elements","element","k","renderer","VueFlowyvue_type_script_lang_js","props","chart","required","chartElement","watch","chart.elements","newVal","oldVal","getElementById","src_VueFlowyvue_type_script_lang_js","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","component","VueFlowy","main_plugin","install","Vue","main","FlowChart","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","splitPathRe","splitPath","filename","exec","f","resolve","resolvedPath","resolvedAbsolute","arguments","path","cwd","TypeError","charAt","split","join","isAbsolute","trailingSlash","substr","paths","relative","trim","end","fromParts","toParts","samePartsLength","outputParts","delimiter","dirname","result","dir","basename","ext","extname","str","len","content","locals","default","sourceMap","_node_modules_vue_style_loader_index_js_ref_8_oneOf_2_0_node_modules_css_loader_index_js_ref_8_oneOf_2_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_2_2_node_modules_vue_loader_lib_index_js_vue_loader_options_VueFlowy_vue_vue_type_style_index_0_lang_scss__WEBPACK_IMPORTED_MODULE_0___default","parse","String","match","parseFloat","fmtShort","ms","round","fmtLong","plural","val","isNaN","long","JSON","stringify","currentScript","src","cssWithMappingToString","item","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sourceURLs","source","sourceRoot","base64","unescape","encodeURIComponent","list","toString","mediaQuery","alreadyImportedModules","useColors","navigator","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","formatArgs","args","namespace","humanize","diff","color","lastC","replace","Function","apply","save","namespaces","storage","removeItem","e","load","NODE_ENV","BASE_URL","DEBUG","localstorage","chrome","local","colors","formatters","j","v","err","message","enable","nextTick","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","chdir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","listToStyles","styles","newStyles","css","media","part","__webpack_exports__","addStylesClient","hasDocument","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","ssrIdKey","isOldIE","test","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","addStyle","createStyleElement","styleElement","createElement","obj","update","remove","parentNode","removeChild","styleIndex","applyToSingletonTag","bind","applyToTag","newObj","replaceText","textStore","replacement","Boolean","styleSheet","cssText","cssNode","childNodes","insertBefore","ssrId","firstChild","selectColor","hash","charCodeAt","abs","createDebug","prevTime","enabled","self","curr","Date","prev","coerce","format","formatter","logFn","destroy","init","instances","indexOf","names","skips","instance","disable","stack"],"mappings":"CAAA,SAAAA,EAAAC,GACA,kBAAAC,SAAA,kBAAAC,OACAA,OAAAD,QAAAD,IACA,oBAAAG,eAAAC,IACAD,UAAAH,GACA,kBAAAC,QACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,KARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,mECnEAC,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,aAAAC,OAAgCC,GAAAR,EAAAS,SAC1IC,WCDAC,EACAC,cACAX,KAAAY,MAAA,EACAZ,KAAAa,OAAA,GCAA,MAAAC,EAAA,KACAC,EAAA,IAEAC,GACAC,OAAA,EACAC,OAAA,EACAN,MAAA,EACAC,OAAA,EACAM,YAAA,GACAC,SAAA,WAGAC,EACAV,YAAAJ,EAAAe,EAAAC,EAAAC,GACAxB,KAAAO,KACAP,KAAAsB,OACAtB,KAAAuB,KACAvB,KAAAyB,MAAA,EACAzB,KAAA0B,UACA1B,KAAA2B,QACA3B,KAAA4B,SAAA,IAAAC,EACA7B,KAAA8B,KAAA,IAAApB,EACA3B,OAAAgD,OAAA/B,KAAAgB,GACAhB,KAAAgC,WAAAR,GAGAb,kBAAAW,EAAAC,EAAAU,GAAA,GACA,IAAAA,GAAAX,EAAAC,EAAA,CACA,MAAAW,EAAAZ,EACAA,EAAAC,EACAA,EAAAW,EAEA,OAAAZ,EAAAP,EAAAQ,EAAAR,EAAAD,EAGAH,WAAAa,GACAzC,OAAAgD,OAAA/B,KAAAwB,6BCpCA,MAAAW,EAAAC,IAAA,kBAEAC,EAKA1B,YAAA2B,GACAtC,KAAAsC,QACAtC,KAAAuC,OAAAvC,KAAAwC,oBAGA7B,oBACA,MAAA8B,KAQA,OAPAzC,KAAAsC,MAAAI,MAAAC,QAAAC,IACAH,EAAAG,EAAAC,QACAJ,EAAAG,EAAAC,UAEAJ,EAAAG,EAAAC,MAAAD,EAAAnB,OAAAmB,IAGAH,EAGA9B,qBACAX,KAAA8C,uBACA9C,KAAA+C,uBAGApC,uBACA,IAAAqC,EAAA,EACAhD,KAAAuC,OAAAI,QAAAM,IACA,MAAAC,EAAAC,KAAAC,OACAH,EAAAI,IAAAT,IACA,OAAAA,EAAA/B,UAGAoC,EAAAN,QAAAC,IACAT,EAAA,cAAAS,EAAArC,GAAAyC,EAAAE,EAAA,EAAAF,EAAAE,EAAA,GACAN,EAAAhB,SAAA0B,EAAAN,EAAAE,EAAA,IAEAF,GAAAE,EAAAlD,KAAAsC,MAAAiB,UAIA5C,uBACA,MAAA6C,KACA,IAAAC,EACA,MAAAC,GAAA,SACAC,GAAA,SACAD,EAAAf,QAAAiB,IACAC,QAAA1B,IAAA,mBAAAyB,GACAH,EAAA,MAAAG,EAAA5D,KAAAuC,OAAAxD,OAAA+E,OAAA9D,KAAAuC,QAAAwB,UAEAJ,EAAAhB,QAAAqB,IACA,MAAAA,IACAP,IAAAJ,IAAAY,GAAAlF,OAAA+E,OAAAG,GAAAF,YAGA,MAAAG,EAAAlE,KAAAmE,mBAAAV,EAAAG,EAAAI,GACA,IAAAI,EAAApE,KAAAqE,sBAAAZ,EAAAS,EAAAF,GAEA,GADA7B,EAAAyB,EAAAI,EAAAI,GACA,MAAAJ,EACA,UAAAM,KAAAF,EACAA,EAAAE,IAAAF,EAAAE,GAGAd,EAAAI,EAAAI,GAAAI,MAIAjC,EAAA,oBAAAqB,GAEA,MAAAe,EAAAvE,KAAAwE,4BAAAhB,GACAxD,KAAAyE,kBAAAjB,EAAAe,GAIA5D,kBAAA6C,EAAAe,GAEA,MAAAG,EAAA3F,OAAA+E,OAAAS,GACAI,EAAAxB,KAAAyB,OAAAF,GACAG,EAAAC,KAAA1B,OAAAsB,GAEAhB,GAAA,SACAC,GAAA,SACAD,EAAAf,QAAAiB,IACAD,EAAAhB,QAAAqB,IACA,MAAAe,EAAAnB,EAAAI,EACAI,EAAAZ,EAAAuB,GACA,GAAAX,IAAAG,EACA,OAEA,MAAAS,EAAAjG,OAAA+E,OAAAM,GACAa,EAAA,MAAAjB,EAAAW,EAAAxB,KAAAyB,OAAAI,GAAAH,EAAA1B,KAAAC,OAAA4B,GAEA,GAAAC,EACA,UAAA5G,KAAA+F,EACAZ,EAAAuB,GAAAX,EAAA/F,GAAA4G,MAOAtE,4BAAA6C,GAEAzE,OAAA+E,OAAAN,GAAAb,QAAAuC,IACA,MAAAN,EAAA,EACAxB,EAAA,EACA,OAAAA,EAAAwB,IAIAjE,sBAAA8B,EAAAyB,EAAAiB,GACAhD,EAAA,uBAAAM,EAAAyB,EAAAiB,GACA,MAAAf,KACAgB,EAAAC,EAAAC,gBAAA7C,EAAAyB,EAAAvG,KAAAwH,GAEAI,KACA,SAAAC,EAAA5C,GACA2C,EAAA3C,EAAArC,MAGAgF,EAAA3C,EAAArC,KAAA,EACA6D,EAAAxB,EAAArC,IAAA6E,EAAAK,QAAA7C,GAAA8C,OAAA,CAAAtC,EAAAuC,KAGA,OAFAH,EAAAG,EAAArE,MACAa,EAAA,QAAAiD,EAAAO,GACAxC,KAAAC,MAAAgB,EAAAuB,EAAArE,MAAAqE,EAAAhE,KAAAiE,UACO,IAQP,OANAR,EAAA1C,MAAAC,QAAA6C,GAEAzG,OAAA8G,KAAA3B,SAAAvB,QAAAmD,IACA1B,EAAA0B,GAAA1B,EAAAF,EAAAvG,KAAAmI,MAGA1B,EAGAzD,mBAAA8B,EAAAmB,EAAAI,GACA,MAAArG,KACAuG,KACA6B,KA+BA,OA7BAtD,EAAAE,QAAAM,IACAA,EAAAN,QAAA,CAAAC,EAAAnB,KACAoC,QAAA1B,IAAA,UAAAS,GACAjF,EAAAiF,EAAArC,IAAAqC,EACAsB,EAAAtB,EAAArC,IAAAqC,EACAmD,EAAAnD,EAAArC,IAAAkB,MAIAgB,EAAAE,QAAAM,IACA,IAAA+C,GAAA,EACA/C,EAAAN,QAAAC,IACA,IAAAqD,EAAA,MAAArC,EAAA5D,KAAAsC,MAAA4D,gBAAAtD,GAAA5C,KAAAsC,MAAA6D,cAAAvD,GACA,IAAAqD,EAAAG,OACA,OAEAH,EAAAjG,KAAAsC,MAAA+D,OAAAC,eAAAL,EAAAM,GAAAR,EAAAQ,IACA,MAAAC,GAAAP,EAAAG,OAAA,KACA,QAAA/H,EAAA8E,KAAAsD,MAAAD,GAAAE,EAAAvD,KAAAwD,KAAAH,GAAwDnI,GAAAqI,EAASrI,IAAA,CACjE,MAAAkI,EAAAN,EAAA5H,GACA6F,EAAAtB,EAAArC,SAAAqC,EAAArC,IAAAyF,EAAAD,EAAAQ,KACArC,EAAAqC,GAAA3D,EACAsB,EAAAtB,EAAArC,IAAA5C,EAAAiF,EAAArC,IAAA5C,EAAA4I,GACAP,EAAAD,EAAAQ,UAMY5I,OAAAuG,UC7KZ,MAAA0C,EAAAxE,IAAA,oBAEAyE,EAKAlG,YAAA2B,GACAtC,KAAAsC,QAGA3B,YACAX,KAAAsC,MAAAwE,eACA9G,KAAAsC,MAAAyE,MAAApE,QAAA3C,KAAAgH,eAAAhH,MAOAW,eAAAgF,GACA,GAAAA,EAAApE,GAAAsB,OAAA8C,EAAArE,KAAAuB,KAAA,GAIA+D,EAAA,oBAAAjB,GAEA,QAAAtH,EAAAsH,EAAArE,KAAAuB,KAAgCxE,EAAAsH,EAAApE,GAAAsB,KAAkBxE,IAAA,CAClDsH,EAAAjE,UACA,IAAAuF,EAAAjH,KAAAsC,MAAA4E,aAAA,QAAmDrE,KAAA8C,EAAArE,KAAAuB,MAAqB,MACxE7C,KAAAsC,MAAA6E,QAAAxB,EAAArE,KAAAf,GAAA0G,GAA+C/F,OAAAyE,EAAAzE,QAAoBtC,SC1BnE,MAAAwI,EAAAhF,IAAA,gBAEAiF,EAKA1G,YAAA2B,GAEAtC,KAAAsC,QACAtC,KAAAsH,YACAF,EAAA,uBAAA9E,GAGA3B,YACAX,KAAAuH,yBACAvH,KAAAwH,qBACAxH,KAAA6C,OACA7C,KAAAyH,sBACAzH,KAAA0H,iBAEA1H,KAAA2H,WAAA,IAAAd,EAAA7G,KAAAsC,OACAtC,KAAA2H,WAAAC,YAEA5H,KAAAyB,QACAzB,KAAA6H,yBAEA7H,KAAAyC,SAAA,IAAAJ,EAAArC,KAAAsC,OACAtC,KAAAyC,SAAAqF,qBACA9H,KAAA+H,uBACA/H,KAAAgI,iBAGArH,yBACAX,KAAAsC,MAAAiB,SAAA,EACA6D,EAAApH,KAAAsC,OACAtC,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACAyB,EAAA,wBAAAzB,GACAA,EAAA1E,QAAA,EAEA,MAAA0E,EAAAvE,SAAA6G,gBAIA,OAAAjI,KAAAsC,MAAA4F,SAAA,OAAAlI,KAAAsC,MAAA4F,QACAvC,EAAA7D,KAAAlB,OAAA+E,EAAAxE,YAEAwE,EAAA7D,KAAAjB,QAAA8E,EAAAxE,eAKAR,qBACAyG,EAAA,0BACApH,KAAAsC,MAAA3E,KAAAqC,KAAAsC,MAAA6F,QAAA,SAAmDlB,MAAA,SACnD,MAAAmB,EAAApI,KAAAqI,aACAjB,EAAA,SAAAgB,GACA,MAAAvH,EAAAsC,KAAAC,OAAArE,OAAA+E,OAAAsE,IAAA,EACAE,EAAA,EAAAzH,EAAA,EAGAb,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACAA,EAAA1E,QAAAqH,IAIA,MAAApH,EAAAlB,KAAAsC,MAAAyE,MAAArB,OACA,CAAA6C,EAAA5C,IAAA4C,EAAA5C,EAAAzE,OACA,GAIAlB,KAAAsC,MAAAkG,cAAA7F,QAAA8F,IACArB,EAAA,mBAAApH,KAAAsC,MAAA3E,KAAA2K,EAAApH,EAAAL,EAAAuH,EAAAK,GACAzI,KAAA0I,IAAA1I,KAAAsC,MAAA3E,KAAA2K,EAAApH,EAAAL,EAAAuH,EAAAK,KAGAzI,KAAAsC,MAAAqG,eAAAL,EAGA3H,sBACAX,KAAAsC,MAAAsG,WAAA5I,KAAAsC,MAAA3E,KAAA4C,IACAP,KAAAsC,MAAA3E,KAAA,KACAqC,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACAA,EAAAkD,aACA7I,KAAAsC,MAAAwG,WAAAnD,EAAApF,MAKAI,iBACA,MAAAoI,EAAA/I,KAAA+I,UACA/I,KAAAsC,MAAAI,MAAAC,QAAAC,KAAAC,MAAAkG,GAGApI,aACA,MAAAyH,KACA/B,EAAArG,KAEA,SAAA0I,EAAA5C,EAAAkD,EAAA,GACA,MAAAC,EAAA5C,EAAA/D,MAAAkG,YAAA1C,GACAsB,EAAA,cAAAtB,EAAA,MAAAmD,EAAA,WAAAD,GACAC,KAAA7C,QACA6C,EAAAtG,QAAAuG,IACA9B,EAAA,QAAA8B,GACAR,EAAAQ,EAAAF,EAAA,KAGAZ,EAAAtC,GAAAkD,EAKA,OAHAhJ,KAAAsC,MAAAkG,cAAA7F,QAAAuG,IACAR,EAAAQ,KAEAd,EAYAzH,IAAAhD,EAAA2K,EAAApH,EAAAL,EAAAuH,EAAAtC,GACA,MAAAmD,EAAAjJ,KAAAsC,MAAAkG,YAAA1C,GAEA,GADAsB,EAAA,mBAAAtB,EAAAmD,IACAA,EAAA7C,OAIA,YAHAN,IAAAnI,EAAA4C,IACAP,KAAAsC,MAAA6E,QAAAxJ,EAAA4C,GAAAuF,GAA6C5E,OAAA,EAAAD,OAAAqH,KAK7C,MAAAa,EAAAnJ,KAAAoJ,cAAA,OACAC,EAAArJ,KAAAoJ,cAAA,OAEApJ,KAAAsC,MAAAgH,UAAAH,EAAArD,GACA9F,KAAAsC,MAAAiH,UAAAJ,EACAnJ,KAAAsC,MAAAgH,UAAAD,EAAAvD,GACA9F,KAAAsC,MAAAkH,aAAAH,EAEArJ,KAAA0I,IAEAO,EAAAtG,QAAA8F,IACAzI,KAAA0I,IAAA/K,EAAA2K,EAAApH,EAAAL,EAAAuH,EAAAK,GAEA,MAAAgB,EAAAhB,EAAAc,UAAAd,EAAAc,UAAAd,EACAiB,EAAAjB,EAAAe,aAAAf,EAAAe,aAAAf,EACAkB,EAAAlB,EAAAc,UAAArI,EAAA,EAAAA,EACAD,EAAAwI,IAAAC,EAAA,EAAA7I,EAAAuH,EAAAtC,GAAA,EAEA9F,KAAAsC,MAAA6E,QAAAgC,EAAAM,GACAvI,OAAAyI,EACA1I,SACA4H,aAAA,IAGA7I,KAAAsC,MAAA6E,QAAAuC,EAAAL,GACAnI,OAAAyI,EACA1I,SACA4H,aAAA,MAIA7I,KAAAsC,MAAAsH,OAAA9D,IACA9F,KAAAsC,MAAA6E,QAAAxJ,EAAAwL,GACAjI,OAAA,EACAD,OAAAJ,EAAAuH,EAAAtC,KAKAnF,cAAAkJ,EAAAhH,EAAApB,GACA,MAAAmB,GACAhC,MAAA,EACAC,OAAA,GAMA,OAJAgC,GAAApB,IACAmB,EAAAC,OACAD,EAAAnB,SAEAzB,KAAAkH,aAAA,SAAAtE,EAAAiH,GAGAlJ,OACA,OAAAX,KAAAsC,MAAAwH,QACA,sBACA9J,KAAA+J,uBACA,MACA,iBACA/J,KAAAgK,kBACA,MACA,mBACAhK,KAAAiK,oBACA,MACA,QACAjK,KAAA+J,uBACA,OAIApJ,WACA,IAAAkB,EAAAS,OACAtC,KAAAkK,YAIAvJ,YACAX,KAAAmK,mBAkBAxJ,YACA,IAAAqC,EAAA,EACAhD,KAAAyC,SAAAE,QAAAM,IACA,MAAAC,EAAAC,KAAAC,IACAH,EAAAI,IAAAT,IACA,OAAAA,EAAA/B,UAGAoC,EAAAN,QAAAC,IACAwE,EAAA,cAAAxE,EAAArC,GAAAyC,EAAAE,EAAA,EAAAF,EAAAE,EAAA,GACAN,EAAAU,EAAAN,EAAAE,EAAA,IAEAF,GAAAE,EAAAK,UAIA5C,QAAAyJ,EAAAlG,IAIAvD,uBACAX,KAAAqK,cACArK,KAAAsK,eAGA3J,cACA,MAAA0F,EAAArG,KACAuF,KAEA,SAAAgF,EAAA3H,GACA,GAAA2C,EAAA3C,EAAArC,IACA,OAAAqC,EAAAC,KAEA0C,EAAA3C,EAAArC,KAAA,EAEA,MAAAqE,EAAAzB,KAAAyB,OAAAyB,EAAA/D,MAAAkI,SAAA5H,GAAAS,IAAAoH,IACA,OAAAF,EAAAE,EAAAlJ,IAAAkJ,EAAAxJ,UAEA4B,EAAA+B,IAAA8F,IAAA,EAAA9F,EAEA,OAAAhC,EAAAC,OAGA7C,KAAAsC,MAAAqI,QAAAhI,QAAA4H,GAGA5J,eACAX,KAAA4K,UAAA,IAAAvF,GAAgCpD,UAAA,IAEhC,MAAA4I,EAAA7K,KAAAsC,MAAAwI,QAAA,GACAhJ,EAAA9B,KAAAsC,MAAAwI,QAAA1E,OAIA,IAAAT,EACAV,EAJAjF,KAAA4K,UAAAzC,QAAA0C,GACAzD,EAAA,WAAAyD,EAAA,UAAA/I,GAIA,IAAAiJ,EAAA,EACA,MAAA/K,KAAAgL,YAAAlJ,EAOA,GANA6D,EAAA3F,KAAAiL,mBACAhG,EAAAjF,KAAA4K,UAAAM,QAAAvF,EAAArE,KAAAf,IACAP,KAAAmL,MAAAxF,IACA3F,KAAAmL,MAAAxF,GACA3F,KAAAoL,WAAAnG,GACA8F,IACAA,EAAA,IACA,UAAAM,MAAA,iCAQA1K,YACA,MAAA0F,EAAArG,KACA,SAAA0I,EAAA9F,GACAwE,EAAA,YAAAf,EAAA/D,MAAAgJ,UAAA1I,IACAyD,EAAA/D,MAAAgJ,UAAA1I,GAAAD,QAAAgD,IACAyB,EAAA,eAAAxE,EAAArC,GAAAoF,GACA,MAAApE,EAAAqB,EAAArC,KAAAoF,EAAArE,KAAAf,GAAAoF,EAAApE,GAAAoE,EAAArE,KACA8F,EAAA,eAAAf,EAAAuE,UAAAM,QAAA3J,EAAAhB,IAAA,aAAA8F,EAAA8E,MAAAxF,IACAU,EAAAuE,UAAAM,QAAA3J,EAAAhB,KAAA8F,EAAA8E,MAAAxF,KACAyB,EAAA,2BAAA7F,GACA8E,EAAAuE,UAAAzC,QAAA5G,EAAAhB,IACA8F,EAAAuE,UAAAzD,QAAAvE,EAAArC,GAAAgB,EAAAhB,IACAmI,EAAAnH,MAOA,OAFAvB,KAAA4K,UAAAlI,MAAAC,QAAA+F,GACAtB,EAAA,oBAAApH,KAAA4K,UAAAE,QAAA1E,QACApG,KAAA4K,UAAAE,QAAA1E,OAGAzF,mBACA,IAAA4K,EACAC,EAAAd,IAiBA,OAfAtD,EAAA,0BAEApH,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACA,GACA3F,KAAA4K,UAAAM,QAAAvF,EAAArE,KAAAf,MACAP,KAAA4K,UAAAM,QAAAvF,EAAApE,GAAAhB,IACA,CACA,MAAA4K,EAAAnL,KAAAmL,MAAAxF,GACAwF,EAAAK,IACAD,EAAA5F,EACA6F,EAAAL,MAKAI,EAQA5K,MAAAgF,GAQA,OAPAyB,EACA,uBACAzB,EACAA,EAAApE,GAAAsB,KACA8C,EAAArE,KAAAuB,KACA8C,EAAA1E,QAEA0E,EAAApE,GAAAsB,KAAA8C,EAAArE,KAAAuB,KAAA8C,EAAA1E,OAGAN,QACAX,KAAAyL,UAAA,MACAhJ,EAAAzC,KAAA0L,YACAtE,EAAA,WAAA3E,GAEAzC,KAAA2L,YAAAlJ,GA2BA9B,iBAAAiL,EAAAC,GACA,OAAAD,EAAAvI,IAAAR,GAAA7C,KAAA8L,gBAAAjJ,EAAAgJ,IAGAlL,YACA,MAAA4E,KACAwG,EAAA/L,KAAAsC,MAAAI,MAAAsJ,OAAApJ,IAAA5C,KAAAsC,MAAAkG,YAAA5F,EAAArC,IAAA6F,QAEA6F,GADAjM,KAAAyL,QAAAM,OAGA,SAAArD,EAAA9F,GACA2C,EAAA3C,EAAArC,MAGAgF,EAAA3C,EAAArC,KAAA,EACA0L,EAAArJ,EAAAC,QACAoJ,EAAArJ,EAAAC,UAEAoJ,EAAArJ,EAAAC,MAAAqJ,KAAAtJ,GACA5C,KAAAsC,MAAA6D,cAAAvD,GAAAD,QAAA+F,IAGA,SAAAyD,EAAAC,EAAAC,GACA,OAAAD,EAAAvJ,KAAAwJ,EAAAxJ,MACA,EAEAuJ,EAAAvJ,KAAAwJ,EAAAxJ,KACA,EAEA,EAGA,MAAAyJ,EAAAP,EAAAQ,KAAAJ,GAGA,OAFAG,EAAA3J,QAAA+F,EAAA1I,MAEAiM,EAGAtL,YAAA8B,GACAA,EAAAE,QAAAM,IACAA,EAAAN,QAAA,CAAAC,EAAA4J,KACA5J,EAAAnB,MAAA+K,MAKA7L,yBACA,OAAAX,KAAAsC,MAAA4F,SAAA,OAAAlI,KAAAsC,MAAA4F,SACAlI,KAAAyM,kBAIA9L,uBACA,OAAAX,KAAAsC,MAAA4F,SAAA,OAAAlI,KAAAsC,MAAA4F,SACAlI,KAAA0M,WAGA,OAAA1M,KAAAsC,MAAA4F,SAAA,OAAAlI,KAAAsC,MAAA4F,UACAlI,KAAA2M,SACA3M,KAAAyM,mBAIA9L,oBAAA7B,GACA,MAAAyH,EAAAzH,EAAA8B,MACA9B,EAAA8B,MAAA9B,EAAA+B,OACA/B,EAAA+B,OAAA0F,EAGA5F,kBACAX,KAAAsC,MAAAI,MAAAC,QAAA3C,KAAA4M,qBACA5M,KAAAsC,MAAAyE,MAAApE,QAAA3C,KAAA4M,qBAGAjM,WAAA7B,GACA,MAAAoG,EAAApG,EAAAoG,EACApG,EAAAoG,EAAApG,EAAAwE,EACA8D,EAAA,WAAAtI,EAAAwE,EAAA,QAAA4B,GACApG,EAAAwE,EAAA4B,EACAkC,EAAA,OAAgBlC,EAAApG,EAAAoG,EAAA5B,EAAAxE,EAAAwE,IAGhB3C,SACAX,KAAAsC,MAAAI,MAAAC,QAAA3C,KAAA6M,YACA7M,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACAA,EAAAjE,OAAAiB,QAAA3C,KAAA6M,YACAlH,EAAAT,GACAlF,KAAA6M,WAAAlH,KAKAhF,QAAA+B,EAAA1C,KAAAsC,MAAAI,OACA,OAAAA,EAAAgD,OAAA,CAAAoH,EAAAlK,KACA,OAAAA,EAAAC,KAAAiK,EAAAlK,EAAAC,KAAAiK,IACKpC,KAGL/J,QAAA+B,EAAA1C,KAAAsC,MAAAI,OACA,OAAAA,EAAAgD,OAAA,CAAAoH,EAAAlK,KACA,OAAAA,EAAAC,KAAAiK,EAAAlK,EAAAC,KAAAiK,GACKpC,KAGL/J,WAAAsE,GACAjF,KAAA4K,UAAAlI,MAAAC,QAAAC,IACAA,EAAAC,MAAAoC,IAIAtE,iBACA,IAAAoM,EAAArC,IACAsC,EAAA,EACAC,EAAAvC,IACAwC,EAAA,EACA,MAAAC,EAAAnN,KAAAsC,MAAA6K,SAAA,EACAC,EAAApN,KAAAsC,MAAA8K,SAAA,EAEA,SAAAC,EAAAvO,GACA,MAAAoG,EAAApG,EAAAoG,GAAA,EACA5B,EAAAxE,EAAAwE,GAAA,EACAiD,EAAAzH,EAAA8B,OAAA,EACA0M,EAAAxO,EAAA+B,QAAA,EACAkM,EAAA5J,KAAAyB,IAAAmI,EAAA7H,EAAAqB,EAAA,GACAyG,EAAA7J,KAAAC,IAAA4J,EAAA9H,EAAAqB,EAAA,GACA0G,EAAA9J,KAAAyB,IAAAqI,EAAA3J,EAAAgK,EAAA,GACAJ,EAAA/J,KAAAC,IAAA8J,EAAA5J,EAAAgK,EAAA,GAGAtN,KAAAsC,MAAAI,MAAAC,QAAA0K,GAEArN,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACAA,EAAAT,GACAmI,EAAA1H,KAIAoH,GAAAI,EACAF,GAAAG,EAEApN,KAAAsC,MAAAI,MAAAC,QAAAC,IACAA,EAAAsC,GAAA6H,EACAnK,EAAAU,GAAA2J,IAGAjN,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACAA,EAAAjE,OAAAiB,QAAA4K,IACAA,EAAArI,GAAA6H,EACAQ,EAAAjK,GAAA2J,IAGAtH,EAAAT,IACAS,EAAAT,GAAA6H,GAGApH,EAAArC,IACAqC,EAAArC,GAAA2J,KAIAjN,KAAAsC,MAAA1B,MAAAoM,EAAAD,EAAAI,EACAnN,KAAAsC,MAAAzB,OAAAqM,EAAAD,EAAAG,EASAzM,OAAA6M,EAAAlJ,GACA,SAAA6H,EAAAC,EAAAC,GACA,OAAAD,EAAA9H,GAAA+H,EAAA/H,IACA,EAEA8H,EAAA9H,GAAA+H,EAAA/H,GACA,EAEA,EAGA,OAAAkJ,EAAAjB,KAAAJ,GAQAxL,eAAA6M,EAAAC,GACA,SAAAtB,EAAAC,EAAAC,GACA,OAAAoB,EAAArB,GAAAqB,EAAApB,IACA,EAEAoB,EAAArB,GAAAqB,EAAApB,GACA,EAEA,EAGA,OAAAmB,EAAAjB,KAAAJ,UCtlBAtK,EAKAlB,cACAX,KAAAkF,EAAA,EACAlF,KAAAsD,EAAA,GCPA,MAAAoK,GACAC,YAAA,GACAC,aAAA,GACAC,WAAA,GACAC,cAAA,GACAC,GAAA,EACAC,GAAA,EACAC,MAAA,OACArN,MAAA,EACAC,OAAA,SAGAqN,EACAvN,YAAAJ,EAAAiB,GAEAxB,KAAAO,KACAP,KAAAgC,WAAAR,GACAxB,KAAA4B,SAAA,IAAAC,EACA7B,KAAA8B,KAAA,IAAApB,EAGAC,WAAAa,MACAA,EAAA2M,QACA3M,EAAA2M,MAAAnO,KAAAO,IAGAxB,OAAAgD,OAAA/B,KAAA0N,EAAAlM,GAGAb,gBC3BA,MAAAyN,EAAAhM,IAAA,SACAiM,EAAA,WAEAhJ,EACA1E,aAAAsB,SACAA,GAAA,EAAAqM,WACAA,GAAA,EAAAC,SACAA,GAAA,EAAArG,QACAA,EAAA,KAAA3E,QACAA,EAAA,GAAAiL,QACAA,EAAA,GAAAlG,QACAA,EAAA,GAAA6E,QACAA,EAAA,GAAAC,QACAA,EAAA,QAEArO,OAAAgD,OAAA/B,MACAiC,WACAqM,aACAC,WACArG,UAAAD,cACA1E,UACAiL,UACAlG,UACA6E,UACAC,YAGApN,KAAAyO,UAEAzO,KAAA0O,WAEA,IAAA1O,KAAAuO,WACAvO,KAAA4J,UACA5J,KAAAiJ,YACAjJ,KAAAiJ,SAAAoF,OAGArO,KAAA2O,SAAA,EAGA3O,KAAArC,KAAA,KAGAqC,KAAA4O,MAGA5O,KAAA6O,SAGA7O,KAAA8O,OAGA9O,KAAA+O,QASApO,QAAAJ,EAAAiB,GACA,OAAAxB,KAAAyO,OAAAlO,IACAiB,GACAxB,KAAAyO,OAAAlO,GAAAyB,WAAAR,GAEAxB,KAAAyO,OAAAlO,KAGA6N,EAAA,gBAAA7N,EAAAiB,GAEAxB,KAAAyO,OAAAlO,GAAA,IAAA2N,EAAA3N,EAAAiB,IAEA,IAAAxB,KAAAuO,WACAvO,KAAA4J,OAAArJ,GAAA8N,EACArO,KAAAiJ,SAAA1I,MACAP,KAAAiJ,SAAAoF,GAAA9N,IAAA,GAGAP,KAAA4O,GAAArO,MACAP,KAAA6O,MAAAtO,MACAP,KAAA8O,IAAAvO,MACAP,KAAA+O,KAAAxO,MACAP,KAAAyO,OAAAlO,IAOAI,WAAAJ,GACA6N,EAAA,+BACApO,KAAAyO,OAAAlO,YAIAP,KAAAyO,OAAAlO,GAEAP,KAAAuO,kBACAvO,KAAA4J,OAAArJ,UACAP,KAAAiJ,SAAA1I,WAGAP,KAAA4O,GAAArO,UACAP,KAAA6O,MAAAtO,UACAP,KAAA8O,IAAAvO,UACAP,KAAA+O,KAAAxO,IASAI,QAAAW,EAAAC,EAAAC,GACA4M,EAAA,eAAA9M,EAAAC,EAAAC,GAEA,MAAAwN,EAAA3N,EAAA4N,WAAA3N,EAAAC,EAAAvB,KAAAiC,UAEA,GAAAjC,KAAA0O,OAAAM,GAIA,OAHAxN,GACAxB,KAAA0O,OAAAM,GAAAhN,WAAAR,GAEAxB,KAIA,MAAAkP,EAAAlP,KAAAmI,QAAA7G,GACA6N,EAAAnP,KAAAmI,QAAA5G,GAEAoE,EAAA,IAAAtE,EAAA2N,EAAAE,EAAAC,EAAA3N,GAMA,OAJAxB,KAAA0O,OAAAM,GAAArJ,EAEA3F,KAAA8O,IAAAxN,GAAA0N,GAAArJ,EACA3F,KAAA4O,GAAArN,GAAAyN,GAAArJ,EACA3F,KAOAW,WAAAJ,GAEA,GADA6N,EAAA,gCACApO,KAAA+G,MAAAxG,GACA,OAGA,MAAAoF,EAAA3F,KAAA0O,OAAAnO,UACAP,KAAA4O,GAAAjJ,EAAArE,aACAtB,KAAA8O,IAAAnJ,EAAApE,WACAvB,KAAA0O,OAAAnO,GAGAI,aAAAyO,EAAA9O,EAAA1B,GAIA,OAHAA,GAAAoB,KAAA2O,WACArO,EAAA2G,MAAAmI,EACApP,KAAAmI,QAAAvJ,EAAA0B,GACA1B,EAGA+B,QAAAJ,GACA,OAAAP,KAAAyO,OAAAlO,GAGAI,QAAA0O,EAAAC,GACA,OAAAtP,KAAA0O,OAAArN,EAAA4N,WAAAI,EAAAC,EAAAtP,KAAAiC,WAGAtB,YAAAJ,GAKA,GAJAA,IACAA,EAAA8N,IAGArO,KAAAuO,SAKK,OAAAhO,IAAA8N,EACLrO,KAAA0C,SANA,CACA,MAAA6M,EAAAvP,KAAAiJ,SAAA1I,GACA,GAAAgP,EACA,OAAAxQ,OAAA8G,KAAA0J,IAaA5O,gBAAAiC,GACA,GAAA5C,KAAA6O,MAAAjM,EAAArC,IACA,OAAAxB,OAAA8G,KAAA7F,KAAA6O,MAAAjM,EAAArC,KAQAI,cAAAiC,GACA,GAAA5C,KAAA+O,KAAAnM,EAAArC,IACA,OAAAxB,OAAA8G,KAAA7F,KAAA+O,KAAAnM,EAAArC,KAIAI,UAAAJ,EAAAiP,GACA,IAAAxP,KAAAuO,SACA,UAAAlD,MAAA,6CAGA,GAAAmE,EAEK,CAEL,QAAAC,EAAA7F,QAAiC6F,EAAWA,EAAAzP,KAAA4J,OAAA6F,GAC5C,GAAAA,IAAAlP,EACA,UAAA8K,MACA,WACAmE,EACA,iBACAjP,EACA,yBAKAP,KAAAmI,QAAAqH,QAfAA,EAAAnB,EAkBArO,KAAAmI,QAAA5H,UACAP,KAAAiJ,SAAAuG,GAAAjP,GACAP,KAAA4J,OAAArJ,GAAAiP,EACAxP,KAAAiJ,SAAAuG,GAAAjP,IAAA,EAQAI,UAAAW,EAAAC,GACA,MAAAkE,EAAAzF,KAAAyF,QAAAnE,EAAAC,GACA,GAAAkE,EACA,OAAAA,EAAAiK,OAAA1P,KAAAwK,SAAAlJ,EAAAC,IAIAZ,WAAAJ,GACA,WAAAP,KAAAwI,YAAAjI,GAAA6F,OAGAzF,WACAyN,EAAA,mBACApO,KAAAqG,OAAA,IAAAgB,EAAArH,MAOAW,QAAAJ,GACA,OAAAP,KAAAyO,OAAAlO,GAMAmC,YACA,OAAA3D,OAAA+E,OAAA9D,KAAAyO,QAMA1H,YACA,OAAAhI,OAAA+E,OAAA9D,KAAA0O,QAGA/D,cACA,OAAA3K,KAAA0C,MAAAsJ,OAAApJ,IACA,WAAA7D,OAAA8G,KAAA7F,KAAA4O,GAAAhM,EAAArC,KAAA6F,SASAzF,QAAAW,EAAAC,GAEA,IAAAoO,EAAA3P,KAAA4O,GAAAtN,EAAAf,IAEA,IAAAoP,EACA,OAGA,MAAA5I,EAAAhI,OAAA+E,OAAA6L,GACA,OAAApO,EAGAwF,EAAAiF,OAAArG,KAAArE,KAAAf,KAAAgB,EAAAhB,IAFAwG,EAUApG,SAAAW,EAAAC,GAEA,IAAAqO,EAAA5P,KAAA8O,IAAAxN,EAAAf,IAEA,IAAAqP,EACA,OAGA,MAAA7I,EAAAhI,OAAA+E,OAAA8L,GACA,OAAArO,EAGAwF,EAAAiF,OAAArG,KAAApE,GAAAhB,KAAAgB,EAAAhB,IAFAwG,EAQA+D,cACA,OAAA/L,OAAA8G,KAAA7F,KAAAyO,QAGA9N,uBAAA8B,EAAA9E,EAAAwH,GACA,MAAAC,EAAA,IAAAC,EAcA,OAZA5C,EAAAE,QAAAM,IACA,IAAA1B,EACA0B,EAAAN,QAAAC,IAEA,GADAwC,EAAA+C,QAAAxK,EAAAiF,EAAArC,QACAgB,EAAA,CACA,MAAAsO,EAAAzK,EAAA0K,QAAAnS,EAAA4D,EAAAhB,IAAA5C,EAAAiF,EAAArC,KACA6E,EAAA+B,QAAAxJ,EAAA4D,EAAAhB,OAAA5C,EAAAiF,EAAArC,QAAgEoB,MAAOiE,QAAAzC,KAAAC,IAAAgC,EAAA2K,IAAA5K,EAAAvC,EAAArB,GAAAsO,GAAA,MAEvEtO,EAAAqB,MAIAwC,EAGAzE,IAAAwE,EAAA7D,EAAAC,GACA,IACA0D,EADA+K,EAAA,EAIA,GADAA,GAAA1O,EAAAV,MAAA,EACAU,EAAAF,SACA,OAAAE,EAAAF,SAAA6G,eACA,QACAhD,GAAA3D,EAAAV,MAAA,EACA,MACA,QACAqE,EAAA3D,EAAAV,MAAA,EACA,MAcA,GAVAqE,IACA+K,GAAA7K,EAAAF,MAEAA,EAAA,EAEA+K,IAAA1O,EAAA2F,MAAAjH,KAAAwO,QAAAxO,KAAAsI,SAAA,EACA0H,IAAAzO,EAAA0F,MAAAjH,KAAAwO,QAAAxO,KAAAsI,SAAA,EAEA0H,GAAAzO,EAAAX,MAAA,EAEAW,EAAAH,SACA,OAAAG,EAAAH,SAAA6G,eACA,QACAhD,EAAA1D,EAAAX,MAAA,EACA,MACA,QACAqE,GAAA1D,EAAAX,MAAA,EACA,MASA,OALAqE,IACA+K,GAAA7K,EAAAF,MAEAA,EAAA,EAEA+K,SC/YAC,EACAtP,YAAAuP,GAIAlQ,KAAA4C,KAAAuN,SAAAC,gBAAA,6BAAAF,GAQAvP,OAAA0P,GAKA,OAJAA,aAAAJ,IACAI,EAAA,IAAAJ,EAAAI,IAEArQ,KAAA4C,KAAA0N,YAAAD,EAAAzN,MACAyN,EAGA1P,KAAA4P,EAAAlR,GAEA,OADAW,KAAA4C,KAAA4N,aAAAD,EAAAlR,GACAW,KAGAW,OAAA8P,GACA,MAAAC,EAAA1Q,KAAA4C,KAAA+N,cAAAF,GACA,OAAAC,EACA,IAAAT,EAAAS,GAGA,KAGA/P,UAAA8P,GACA,MAAAC,EAAA1Q,KAAA4C,KAAAgO,iBAAAH,GACA,OAAAC,EACAG,MAAAvP,KAAAoP,GAAArN,IAAAT,GAAA,IAAAqN,EAAArN,IAGA,KAGAjC,KAAAd,GACA,MAAAwQ,EAAAF,SAAAW,eAAAjR,GAEA,OADAG,KAAA4C,KAAA0N,YAAAD,GACArQ,KAOAW,SAAAjC,GAEA,OADAsB,KAAA4C,KAAAmO,UAAAC,IAAAtS,GACAsB,YCtDAiR,EAQAtQ,YAAAuQ,EAAAC,EAAA3P,GAEAxB,KAAAiO,MAAAjO,KAAAkR,GAAAC,EAAA3P,GAOAb,KAAAwQ,EAAA3P,GACA,WAAAyO,EAAA,QACAmB,KAAA,KAAA5P,EAAAuM,IACAqD,KAAA,KAAA5P,EAAAwM,IACAoD,KAAA,KAAAD,EAAAvQ,MAAA,GACAwQ,KAAA,KAAAD,EAAAtQ,OAAA,GACAuQ,KAAA,QAAAD,EAAAvQ,OACAwQ,KAAA,SAAAD,EAAAtQ,QACAuQ,KAAA,KAAA5P,EAAAuM,WCzBAsD,EACA1Q,YAAA2Q,GACAtR,KAAAuR,MAAA,IAAAtB,EAAA,KACAjQ,KAAAsR,YAEAtR,KAAAwR,YAGA7Q,YACAX,KAAAuR,MAAAE,OAAA,QAAAC,KAAA1R,KAAAsR,UAAAnD,cCNAwD,EAKAhR,YAAA2B,GACAtC,KAAAsC,QAGA3B,OAAAiR,GACA/N,QAAA1B,IAAA,YAAAyP,EAAA5R,KAAAsC,OAGAtC,KAAA6R,oBAAAD,EAAA,aACA5R,KAAA8R,iBACA9R,KAAA6R,oBAAAD,EAAA,cACA5R,KAAAsC,OAEAtC,KAAA+R,YAAA/R,KAAA6R,oBAAAD,EAAA,UAEA5R,KAAAsC,MAAA0P,WAEA,IAAAjF,EAAA,IACAE,EAAA,IACAD,GAAA,IACAE,GAAA,IAEAlN,KAAAsC,MAAAI,MAAAC,QAAAC,IACAmK,EAAA5J,KAAAyB,IAAAmI,EAAAnK,EAAAsC,EAAAtC,EAAAhC,MAAA,GACAqM,EAAA9J,KAAAyB,IAAAqI,EAAArK,EAAAU,EAAAV,EAAA/B,OAAA,GACAmM,EAAA7J,KAAAC,IAAA4J,EAAApK,EAAAsC,EAAAtC,EAAAhC,MAAA,GACAsM,EAAA/J,KAAAC,IAAA8J,EAAAtK,EAAAU,EAAAV,EAAA/B,OAAA,KAGAb,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACAA,EAAAwI,OAAAxI,EAAAT,GAAAS,EAAArC,IACAyJ,EAAA5J,KAAAyB,IAAAmI,EAAApH,EAAAT,EAAAS,EAAA/E,MAAA,GACAqM,EAAA9J,KAAAyB,IAAAqI,EAAAtH,EAAArC,EAAAqC,EAAA9E,OAAA,GACAmM,EAAA7J,KAAAC,IAAA4J,EAAArH,EAAAT,EAAAS,EAAA/E,MAAA,GACAsM,EAAA/J,KAAAC,IAAA8J,EAAAvH,EAAArC,EAAAqC,EAAA9E,OAAA,IAEA,MAAAa,EAAAiE,EAAAjE,OAAAuQ,MAAA,EAAAtM,EAAAjE,OAAA0E,OAAA,GACA,QAAA/H,EAAA,EAAqBA,EAAAqD,EAAA0E,OAAmB/H,IAAA,CACxC,MAAAkP,EAAA7L,EAAArD,GACA0O,EAAA5J,KAAAyB,IAAAmI,EAAAQ,EAAArI,GACA+H,EAAA9J,KAAAyB,IAAAqI,EAAAM,EAAAjK,GACA0J,EAAA7J,KAAAC,IAAA4J,EAAAO,EAAArI,GACAgI,EAAA/J,KAAAC,IAAA8J,EAAAK,EAAAjK,MAIAtD,KAAAsC,MAAAyK,OACA/M,KAAAsC,MAAA2K,OACAjN,KAAAsC,MAAA0K,OACAhN,KAAAsC,MAAA4K,OAEArJ,QAAA1B,IAAA,QAAAnC,KAAAsC,OAEAtC,KAAAkS,gBAQAvR,YAAAwR,GACAnS,KAAAsC,MAAAwI,QAAAkB,OAAAzL,IACA,OAAAP,KAAAsC,MAAA8P,WAAA7R,KAIAP,KAAAsC,MAAAI,MAAAC,QAAA0P,IACA,MAAAC,EAAAH,EAAAV,OAAA,KAAAc,SAAA,QAEAC,EAAAF,EAAAb,OAAA,KAAAc,SAAA,SACApE,EAAAqE,EAAAf,OACA,IAAAJ,GAAwBlD,MAAAkE,EAAAlE,QAAyBoD,OAEjDkB,EAAAtE,EAAAvL,KAAA8P,UAEAD,EAAA7R,OAAAyR,EAAA1E,YAAA0E,EAAAzE,aACA6E,EAAA5R,QAAAwR,EAAAxE,WAAAwE,EAAAvE,cAEA0E,EAAApB,KACA,YACA,cACAiB,EAAA1E,YAAA0E,EAAAzE,cAAA,EACA,KACAyE,EAAAxE,WAAAwE,EAAAvE,eAAA,EACA,KAKA,MAAAG,EAAAqE,EAAAb,OACA,IAAAR,EAAAoB,EAAApE,MAAAwE,EAAAJ,GAAApE,OAEA0E,EAAA1E,EAAArL,KAAA8P,UACAL,EAAAzR,MAAA+R,EAAA/R,MACAyR,EAAAxR,OAAA8R,EAAA9R,OACAyR,EAAAb,OAAAe,GACAH,EAAAO,SAAAN,IAaA3R,YAAAwR,IAOAxR,iBAAAwR,EAAAU,GACAV,EAAAW,UAAA,eAEA9S,KAAAsC,MAAAyE,MAAApE,QAAAgD,IACA,MAAAoN,EAAAZ,EAAAV,OAAA,KAAAc,SAAA,aAEAC,EAAAO,EAAAtB,OAAA,KAAAc,SAAA,SACApE,EAAAqE,EAAAf,OACA,IAAAJ,GAAwBlD,MAAAxI,EAAAwI,QAAoBoD,OAE5CkB,EAAAtE,EAAAvL,KAAA8P,UAEA/M,EAAA/E,MAAA+E,EAAA/E,OAAA6R,EAAA7R,MACA+E,EAAA9E,OAAA8E,EAAA9E,QAAA4R,EAAA5R,SAIAF,gBACAkD,QAAA1B,IACA,iBACAnC,KAAAsC,MAAAI,MACA,aACA1C,KAAAsC,MAAAyE,OAEA/G,KAAAsC,MAAAI,MAAAC,QAAA0P,IACAA,EAAAO,SAAAxB,KACA,YACA,cAAAiB,EAAAnN,GAAA,QAAAmN,EAAA/O,GAAA,UAUA3C,oBAAAhD,EAAAiB,GACA,OAAAjB,EAAAqV,OAAA,KAAApU,IAAAjB,EAAA8T,OAAA,KAAAc,SAAA3T,UCrKAqU,EACAtS,YAAAJ,EAAAiB,GACAxB,KAAAO,KACAP,KAAAwB,UACAxB,KAAA+G,SAGApG,QAAAuS,EAAA1R,GAEA,OADAxB,KAAA+G,MAAAmF,MAAqBiH,QAAAD,EAAA3S,GAAAiB,YACrB0R,SCDAE,EACAzS,YAAAa,GACA6R,aAAAC,MAAA,WACAtT,KAAAuT,YAGA5S,WAAAJ,EAAAiB,GACA,MAAA6O,EAAA,IAAA4C,EAAA1S,EAAAiB,GAEA,OADAxB,KAAAuT,SAAArH,KAAAmE,GACAA,EAGA1P,OAAA6S,GACA,MAAA5B,EAAA,IAAA3B,EAAA,OACA2B,EAAAhP,KAAArC,GAAA,IAAAiT,EAAAjT,GACAiT,EAAAlD,YAAAsB,EAAAhP,MACA,MAAA2O,EAAAK,EAAAH,OAAA,KAGAnP,EAAA,IAAA+C,GACAiJ,YAAA,EACAC,UAAA,EACArG,QAAA,KACAiF,QAAA,GACAC,QAAA,KAIA,UAAA/O,KAAA2B,KAAAuT,SAAA,CACA,MAAAlD,EAAArQ,KAAAuT,SAAAlV,GACAiE,EAAA6F,QAAAkI,EAAA9P,GAAA8P,EAAA7O,SAIA,UAAAoB,KAAAN,EAAAI,MACAE,EAAAmL,GAAAnL,EAAAoL,GAAA,EAIA,UAAA3P,KAAA2B,KAAAuT,SAAA,CACA,MAAAlD,EAAArQ,KAAAuT,SAAAlV,GACA,UAAAoV,KAAApD,EAAAtJ,MAAA,CACA,MAAApB,EAAA0K,EAAAtJ,MAAA0M,GAEAnR,EAAA6E,QAAAkJ,EAAA9P,GAAAoF,EAAAwN,QAAAxN,EAAAnE,UAIA,MAAAkS,EAAA,IAAA/B,EAAArP,GAEAoR,EAAA5T,OAAAyR,ICjDA,IAAAoC,GACA/U,KAAA,WACAgV,OACAC,OACAzE,KAAAgE,EACAU,UAAA,IAGAnT,OACA,OACAoT,aAAA,OAGAC,OACAC,iBAAA,SAAAC,EAAAC,GACAnU,KAAA6T,MAAA/T,OAAAE,KAAA+T,gBAGApT,UACAX,KAAA+T,aAAA5D,SAAAiE,eAAApU,KAAAQ,QC5BuH6T,EAAA,YCMvH,SAAAC,EACAC,EACAzU,EACAW,EACA+T,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBAC,EArBArT,EAAA,oBAAA+S,EACAA,EAAA/S,QACA+S,EAiDA,GA9CAzU,IACA0B,EAAA1B,SACA0B,EAAAf,kBACAe,EAAAsT,WAAA,GAIAN,IACAhT,EAAAuT,YAAA,GAIAL,IACAlT,EAAAwT,SAAA,UAAAN,GAIAC,GACAE,EAAA,SAAAI,GAEAA,EACAA,GACAjV,KAAAkV,QAAAlV,KAAAkV,OAAAC,YACAnV,KAAA4J,QAAA5J,KAAA4J,OAAAsL,QAAAlV,KAAA4J,OAAAsL,OAAAC,WAEAF,GAAA,qBAAAG,sBACAH,EAAAG,qBAGAX,GACAA,EAAAjW,KAAAwB,KAAAiV,GAGAA,KAAAI,uBACAJ,EAAAI,sBAAArE,IAAA2D,IAKAnT,EAAA8T,aAAAT,GACGJ,IACHI,EAAAD,EACA,WAAqBH,EAAAjW,KAAAwB,UAAAuV,MAAAC,SAAAC,aACrBhB,GAGAI,EACA,GAAArT,EAAAuT,WAAA,CAGAvT,EAAAkU,cAAAb,EAEA,IAAAc,EAAAnU,EAAA1B,OACA0B,EAAA1B,OAAA,SAAAwN,EAAA2H,GAEA,OADAJ,EAAArW,KAAAyW,GACAU,EAAArI,EAAA2H,QAEK,CAEL,IAAAW,EAAApU,EAAAqU,aACArU,EAAAqU,aAAAD,KACAlG,OAAAkG,EAAAf,IACAA,GAIA,OACAhX,QAAA0W,EACA/S,WClFA,IAAAsU,EAAAxB,EACAD,EACAvU,EACAW,GACA,EACA,KACA,KACA,MAIAsV,EAAAD,UChBA,MAAAE,GACAC,QAAAC,IACAA,EAAAJ,UAAAC,EAAAnX,KAAAmX,KAIAA,EAAAE,QAAAD,EAAAC,QAEA,IAAAE,GAAgBJ,WAAAK,UAAAhD,2CCXhB,SAAAiD,GAyBA,SAAAC,EAAAC,EAAAC,GAGA,IADA,IAAAC,EAAA,EACApY,EAAAkY,EAAAnQ,OAAA,EAAgC/H,GAAA,EAAQA,IAAA,CACxC,IAAAqY,EAAAH,EAAAlY,GACA,MAAAqY,EACAH,EAAAI,OAAAtY,EAAA,GACK,OAAAqY,GACLH,EAAAI,OAAAtY,EAAA,GACAoY,KACKA,IACLF,EAAAI,OAAAtY,EAAA,GACAoY,KAKA,GAAAD,EACA,KAAUC,IAAMA,EAChBF,EAAAK,QAAA,MAIA,OAAAL,EAKA,IAAAM,EACA,gEACAC,EAAA,SAAAC,GACA,OAAAF,EAAAG,KAAAD,GAAA9E,MAAA,IAuJA,SAAAjG,EAAA5H,EAAA6S,GACA,GAAA7S,EAAA4H,OAAA,OAAA5H,EAAA4H,OAAAiL,GAEA,IADA,IAAAvG,KACArS,EAAA,EAAmBA,EAAA+F,EAAAgC,OAAe/H,IAClC4Y,EAAA7S,EAAA/F,KAAA+F,IAAAsM,EAAAxE,KAAA9H,EAAA/F,IAEA,OAAAqS,EAxJA7S,EAAAqZ,QAAA,WAIA,IAHA,IAAAC,EAAA,GACAC,GAAA,EAEA/Y,EAAAgZ,UAAAjR,OAAA,EAAoC/H,IAAA,IAAA+Y,EAA8B/Y,IAAA,CAClE,IAAAiZ,EAAAjZ,GAAA,EAAAgZ,UAAAhZ,GAAAgY,EAAAkB,MAGA,qBAAAD,EACA,UAAAE,UAAA,6CACKF,IAILH,EAAAG,EAAA,IAAAH,EACAC,EAAA,MAAAE,EAAAG,OAAA,IAWA,OAJAN,EAAAb,EAAAtK,EAAAmL,EAAAO,MAAA,cAAA9X,GACA,QAAAA,KACGwX,GAAAO,KAAA,MAEHP,EAAA,QAAAD,GAAA,KAKAtZ,EAAA+J,UAAA,SAAA0P,GACA,IAAAM,EAAA/Z,EAAA+Z,WAAAN,GACAO,EAAA,MAAAC,EAAAR,GAAA,GAcA,OAXAA,EAAAhB,EAAAtK,EAAAsL,EAAAI,MAAA,cAAA9X,GACA,QAAAA,KACGgY,GAAAD,KAAA,KAEHL,GAAAM,IACAN,EAAA,KAEAA,GAAAO,IACAP,GAAA,MAGAM,EAAA,QAAAN,GAIAzZ,EAAA+Z,WAAA,SAAAN,GACA,YAAAA,EAAAG,OAAA,IAIA5Z,EAAA8Z,KAAA,WACA,IAAAI,EAAAlH,MAAAnR,UAAAuS,MAAAzT,KAAA6Y,UAAA,GACA,OAAAxZ,EAAA+J,UAAAoE,EAAA+L,EAAA,SAAAnY,EAAA4M,GACA,qBAAA5M,EACA,UAAA4X,UAAA,0CAEA,OAAA5X,IACG+X,KAAA,OAMH9Z,EAAAma,SAAA,SAAA1W,EAAAC,GAIA,SAAA0W,EAAAzK,GAEA,IADA,IAAA3C,EAAA,EACUA,EAAA2C,EAAApH,OAAoByE,IAC9B,QAAA2C,EAAA3C,GAAA,MAIA,IADA,IAAAqN,EAAA1K,EAAApH,OAAA,EACU8R,GAAA,EAAUA,IACpB,QAAA1K,EAAA0K,GAAA,MAGA,OAAArN,EAAAqN,KACA1K,EAAAyE,MAAApH,EAAAqN,EAAArN,EAAA,GAfAvJ,EAAAzD,EAAAqZ,QAAA5V,GAAAwW,OAAA,GACAvW,EAAA1D,EAAAqZ,QAAA3V,GAAAuW,OAAA,GAsBA,IALA,IAAAK,EAAAF,EAAA3W,EAAAoW,MAAA,MACAU,EAAAH,EAAA1W,EAAAmW,MAAA,MAEAtR,EAAAjD,KAAAyB,IAAAuT,EAAA/R,OAAAgS,EAAAhS,QACAiS,EAAAjS,EACA/H,EAAA,EAAiBA,EAAA+H,EAAY/H,IAC7B,GAAA8Z,EAAA9Z,KAAA+Z,EAAA/Z,GAAA,CACAga,EAAAha,EACA,MAIA,IAAAia,KACA,IAAAja,EAAAga,EAA+Bha,EAAA8Z,EAAA/R,OAAsB/H,IACrDia,EAAApM,KAAA,MAKA,OAFAoM,IAAA5I,OAAA0I,EAAAnG,MAAAoG,IAEAC,EAAAX,KAAA,MAGA9Z,EAAAkS,IAAA,IACAlS,EAAA0a,UAAA,IAEA1a,EAAA2a,QAAA,SAAAlB,GACA,IAAAmB,EAAA3B,EAAAQ,GACA3Z,EAAA8a,EAAA,GACAC,EAAAD,EAAA,GAEA,OAAA9a,GAAA+a,GAKAA,IAEAA,IAAAZ,OAAA,EAAAY,EAAAtS,OAAA,IAGAzI,EAAA+a,GARA,KAYA7a,EAAA8a,SAAA,SAAArB,EAAAsB,GACA,IAAA3B,EAAAH,EAAAQ,GAAA,GAKA,OAHAsB,GAAA3B,EAAAa,QAAA,EAAAc,EAAAxS,UAAAwS,IACA3B,IAAAa,OAAA,EAAAb,EAAA7Q,OAAAwS,EAAAxS,SAEA6Q,GAIApZ,EAAAgb,QAAA,SAAAvB,GACA,OAAAR,EAAAQ,GAAA,IAaA,IAAAQ,EAAA,WAAAA,QAAA,GACA,SAAAgB,EAAAjO,EAAAkO,GAAkC,OAAAD,EAAAhB,OAAAjN,EAAAkO,IAClC,SAAAD,EAAAjO,EAAAkO,GAEA,OADAlO,EAAA,IAAAA,EAAAiO,EAAA1S,OAAAyE,GACAiO,EAAAhB,OAAAjN,EAAAkO,mDC7NAlb,EAAAC,EAAAD,QAAAM,EAAA,OAAAA,EAAA,GAKAN,EAAAqO,MAAApO,EAAAO,EAAA,yKAAgM,2BCFhM,IAAA2a,EAAA7a,EAAA,QACA,kBAAA6a,QAAAlb,EAAAO,EAAA2a,EAAA,MACAA,EAAAC,SAAAnb,EAAAD,QAAAmb,EAAAC,QAEA,IAAAjI,EAAA7S,EAAA,QAAA+a,QACAlI,EAAA,WAAAgI,GAAA,GAA6CG,WAAA,EAAAvE,YAAA,gECR2TwE,EAAA,sBCIxW,IAAAvZ,EAAA,IACApB,EAAA,GAAAoB,EACAyN,EAAA,GAAA7O,EACAE,EAAA,GAAA2O,EACAhK,EAAA,OAAA3E,EAsCA,SAAA0a,EAAAP,GAEA,GADAA,EAAAQ,OAAAR,KACAA,EAAA1S,OAAA,MAGA,IAAAmT,EAAA,wHAAAvC,KACA8B,GAEA,GAAAS,EAAA,CAGA,IAAAja,EAAAka,WAAAD,EAAA,IACAnK,GAAAmK,EAAA,UAAAtR,cACA,OAAAmH,GACA,YACA,WACA,UACA,SACA,QACA,OAAA9P,EAAAgE,EACA,WACA,UACA,QACA,OAAAhE,EAAAX,EACA,YACA,WACA,UACA,SACA,QACA,OAAAW,EAAAgO,EACA,cACA,aACA,WACA,UACA,QACA,OAAAhO,EAAAb,EACA,cACA,aACA,WACA,UACA,QACA,OAAAa,EAAAO,EACA,mBACA,kBACA,YACA,WACA,SACA,OAAAP,EACA,QACA,UAYA,SAAAma,EAAAC,GACA,OAAAA,GAAA/a,EACAwE,KAAAwW,MAAAD,EAAA/a,GAAA,IAEA+a,GAAApM,EACAnK,KAAAwW,MAAAD,EAAApM,GAAA,IAEAoM,GAAAjb,EACA0E,KAAAwW,MAAAD,EAAAjb,GAAA,IAEAib,GAAA7Z,EACAsD,KAAAwW,MAAAD,EAAA7Z,GAAA,IAEA6Z,EAAA,KAWA,SAAAE,EAAAF,GACA,OAAAG,EAAAH,EAAA/a,EAAA,QACAkb,EAAAH,EAAApM,EAAA,SACAuM,EAAAH,EAAAjb,EAAA,WACAob,EAAAH,EAAA7Z,EAAA,WACA6Z,EAAA,MAOA,SAAAG,EAAAH,EAAApa,EAAAV,GACA,KAAA8a,EAAApa,GAGA,OAAAoa,EAAA,IAAApa,EACA6D,KAAAsD,MAAAiT,EAAApa,GAAA,IAAAV,EAEAuE,KAAAwD,KAAA+S,EAAApa,GAAA,IAAAV,EAAA,IA9HAd,EAAAD,QAAA,SAAAic,EAAAtY,GACAA,QACA,IAAA4N,SAAA0K,EACA,cAAA1K,GAAA0K,EAAA1T,OAAA,EACA,OAAAiT,EAAAS,GACG,cAAA1K,IAAA,IAAA2K,MAAAD,GACH,OAAAtY,EAAAwY,KAAAJ,EAAAE,GAAAL,EAAAK,GAEA,UAAAzO,MACA,wDACA4O,KAAAC,UAAAJ,2BChCA,wBAAA7b,OAAA,CACA,IAAAI,GACAA,EAAAJ,OAAAkS,SAAAgK,iBAAA9b,IAAA+b,IAAAb,MAAA,uBACApb,EAAAyB,EAAAvB,EAAA,yBC4CA,SAAAgc,EAAAC,EAAAC,GACA,IAAAvB,EAAAsB,EAAA,OACAE,EAAAF,EAAA,GACA,IAAAE,EACA,OAAAxB,EAGA,GAAAuB,GAAA,oBAAAE,KAAA,CACA,IAAAC,EAAAC,EAAAH,GACAI,EAAAJ,EAAA7P,QAAAtH,IAAA,SAAAwX,GACA,uBAAAL,EAAAM,WAAAD,EAAA,QAGA,OAAA7B,GAAAtJ,OAAAkL,GAAAlL,QAAAgL,IAAA/C,KAAA,MAGA,OAAAqB,GAAArB,KAAA,MAIA,SAAAgD,EAAAxB,GAEA,IAAA4B,EAAAN,KAAAO,SAAAC,mBAAAhB,KAAAC,UAAAf,MACAxX,EAAA,+DAAkEoZ,EAElE,aAAApZ,EAAA,MArEA7D,EAAAD,QAAA,SAAA0c,GACA,IAAAW,KAwCA,OArCAA,EAAAC,SAAA,WACA,OAAAnb,KAAAqD,IAAA,SAAAiX,GACA,IAAAtB,EAAAqB,EAAAC,EAAAC,GACA,OAAAD,EAAA,GACA,UAAAA,EAAA,OAAmCtB,EAAA,IAEnCA,IAEGrB,KAAA,KAIHuD,EAAA7c,EAAA,SAAAE,EAAA6c,GACA,kBAAA7c,IACAA,IAAA,KAAAA,EAAA,MAEA,IADA,IAAA8c,KACAhd,EAAA,EAAgBA,EAAA2B,KAAAoG,OAAiB/H,IAAA,CACjC,IAAAkC,EAAAP,KAAA3B,GAAA,GACA,kBAAAkC,IACA8a,EAAA9a,IAAA,GAEA,IAAAlC,EAAA,EAAYA,EAAAE,EAAA6H,OAAoB/H,IAAA,CAChC,IAAAic,EAAA/b,EAAAF,GAKA,kBAAAic,EAAA,IAAAe,EAAAf,EAAA,MACAc,IAAAd,EAAA,GACAA,EAAA,GAAAc,EACKA,IACLd,EAAA,OAAAA,EAAA,aAAAc,EAAA,KAEAF,EAAAhP,KAAAoO,MAIAY,0BC9CA,SAAA7E,GA2CA,SAAAiF,IAIA,6BAAArd,gBAAAoY,SAAA,aAAApY,OAAAoY,QAAAjH,QAKA,qBAAAmM,sBAAAC,YAAAD,UAAAC,UAAAvT,cAAAsR,MAAA,4BAMA,qBAAApJ,mBAAAsL,iBAAAtL,SAAAsL,gBAAAC,OAAAvL,SAAAsL,gBAAAC,MAAAC,kBAEA,qBAAA1d,eAAA4F,UAAA5F,OAAA4F,QAAA+X,SAAA3d,OAAA4F,QAAAgY,WAAA5d,OAAA4F,QAAAiY,QAGA,qBAAAP,qBAAAC,WAAAD,UAAAC,UAAAvT,cAAAsR,MAAA,mBAAAwC,SAAAC,OAAAC,GAAA,SAEA,qBAAAV,qBAAAC,WAAAD,UAAAC,UAAAvT,cAAAsR,MAAA,uBAsBA,SAAA2C,EAAAC,GACA,IAAAb,EAAAtb,KAAAsb,UASA,GAPAa,EAAA,IAAAb,EAAA,SACAtb,KAAAoc,WACAd,EAAA,WACAa,EAAA,IACAb,EAAA,WACA,IAAAzd,EAAAwe,SAAArc,KAAAsc,MAEAhB,EAAA,CAEA,IAAA5c,EAAA,UAAAsB,KAAAuc,MACAJ,EAAAxF,OAAA,IAAAjY,EAAA,kBAKA,IAAA8N,EAAA,EACAgQ,EAAA,EACAL,EAAA,GAAAM,QAAA,uBAAAlD,GACA,OAAAA,IACA/M,IACA,OAAA+M,IAGAiD,EAAAhQ,MAIA2P,EAAAxF,OAAA6F,EAAA,EAAA9d,IAUA,SAAAyD,IAGA,wBAAA0B,SACAA,QAAA1B,KACAua,SAAAhd,UAAAid,MAAAne,KAAAqF,QAAA1B,IAAA0B,QAAAwT,WAUA,SAAAuF,EAAAC,GACA,IACA,MAAAA,EACAhf,EAAAif,QAAAC,WAAA,SAEAlf,EAAAif,QAAAxJ,MAAAuJ,EAEG,MAAAG,KAUH,SAAAC,IACA,IAAA7d,EACA,IACAA,EAAAvB,EAAAif,QAAAxJ,MACG,MAAA0J,IAOH,OAJA5d,GAAA,qBAAAiX,GAAA,QAAAA,IACAjX,EAAAL,QAAAme,SAAA,aAAAC,SAAA,MAAAC,OAGAhe,EAoBA,SAAAie,IACA,IACA,OAAApf,OAAAoV,aACG,MAAA2J,KA3LHnf,EAAAC,EAAAD,QAAAM,EAAA,QACAN,EAAAsE,MACAtE,EAAAqe,aACAre,EAAA+e,OACA/e,EAAAof,OACApf,EAAAyd,YACAzd,EAAAif,QAAA,oBAAAQ,QACA,oBAAAA,OAAAR,QACAQ,OAAAR,QAAAS,MACAF,IAMAxf,EAAA2f,QACA,sEACA,sEACA,sEACA,sEACA,sEACA,sEACA,sEACA,sEACA,sEACA,sEACA,6DAwCA3f,EAAA4f,WAAAC,EAAA,SAAAC,GACA,IACA,OAAA1D,KAAAC,UAAAyD,GACG,MAAAC,GACH,qCAAAA,EAAAC,UAqGAhgB,EAAAigB,OAAAb,kDCjLApf,EAAAkgB,SAAA,SAAAtQ,GACAuQ,WAAAvQ,EAAA,IAGA5P,EAAAogB,SAAApgB,EAAAqgB,KACArgB,EAAAsgB,SAAAtgB,EAAAugB,MAAA,UACAvgB,EAAAwgB,IAAA,EACAxgB,EAAAygB,SAAA,EACAzgB,EAAA0gB,OACA1gB,EAAA2gB,QAEA3gB,EAAA4gB,QAAA,SAAA7f,GACA,UAAAyM,MAAA,8CAGA,WACA,IACAiM,EADAC,EAAA,IAEA1Z,EAAA0Z,IAAA,WAA+B,OAAAA,GAC/B1Z,EAAA6gB,MAAA,SAAAhG,GACApB,MAAAnZ,EAAA,SACAoZ,EAAAD,EAAAJ,QAAAwB,EAAAnB,IANA,GAUA1Z,EAAA8gB,KAAA9gB,EAAA+gB,KACA/gB,EAAAghB,MAAAhhB,EAAAihB,OACAjhB,EAAAkhB,OAAAlhB,EAAAmhB,YACAnhB,EAAAohB,WAAA,aACAphB,EAAAqhB,+CCzBA,SAAAC,EAAA3P,EAAA0L,GAGA,IAFA,IAAAkE,KACAC,KACAhhB,EAAA,EAAiBA,EAAA6c,EAAA9U,OAAiB/H,IAAA,CAClC,IAAAic,EAAAY,EAAA7c,GACAkC,EAAA+Z,EAAA,GACAgF,EAAAhF,EAAA,GACAiF,EAAAjF,EAAA,GACAnB,EAAAmB,EAAA,GACAkF,GACAjf,GAAAiP,EAAA,IAAAnR,EACAihB,MACAC,QACApG,aAEAkG,EAAA9e,GAGA8e,EAAA9e,GAAAgW,MAAArK,KAAAsT,GAFAJ,EAAAlT,KAAAmT,EAAA9e,IAAmCA,KAAAgW,OAAAiJ,KAKnC,OAAAJ,SCzBAjhB,EAAAQ,EAAA8gB,EAAA,4BAAAC,IAQA,IAAAC,EAAA,qBAAAxP,SAEA,wBAAAiN,eACAuC,EACA,UAAAtU,MACA,2JAkBA,IAAAuU,KAQAC,EAAAF,IAAAxP,SAAA0P,MAAA1P,SAAA2P,qBAAA,YACAC,EAAA,KACAC,EAAA,EACAC,GAAA,EACAC,EAAA,aACA1e,EAAA,KACA2e,EAAA,kBAIAC,EAAA,qBAAA7E,WAAA,eAAA8E,KAAA9E,UAAAC,UAAAvT,eAEA,SAAAyX,EAAAlQ,EAAA0L,EAAAoF,EAAAC,GACAN,EAAAK,EAEA9e,EAAA+e,MAEA,IAAAnB,EAAAD,EAAA3P,EAAA0L,GAGA,OAFAsF,EAAApB,GAEA,SAAAqB,GAEA,IADA,IAAAC,KACAriB,EAAA,EAAmBA,EAAA+gB,EAAAhZ,OAAmB/H,IAAA,CACtC,IAAAic,EAAA8E,EAAA/gB,GACAsiB,EAAAf,EAAAtF,EAAA/Z,IACAogB,EAAAC,OACAF,EAAAxU,KAAAyU,GAEAF,GACArB,EAAAD,EAAA3P,EAAAiR,GACAD,EAAApB,IAEAA,KAEA,IAAA/gB,EAAA,EAAmBA,EAAAqiB,EAAAta,OAAsB/H,IAAA,CACzCsiB,EAAAD,EAAAriB,GACA,OAAAsiB,EAAAC,KAAA,CACA,QAAAlD,EAAA,EAAuBA,EAAAiD,EAAApK,MAAAnQ,OAA2BsX,IAClDiD,EAAApK,MAAAmH,YAEAkC,EAAAe,EAAApgB,OAMA,SAAAigB,EAAApB,GACA,QAAA/gB,EAAA,EAAiBA,EAAA+gB,EAAAhZ,OAAmB/H,IAAA,CACpC,IAAAic,EAAA8E,EAAA/gB,GACAsiB,EAAAf,EAAAtF,EAAA/Z,IACA,GAAAogB,EAAA,CACAA,EAAAC,OACA,QAAAlD,EAAA,EAAqBA,EAAAiD,EAAApK,MAAAnQ,OAA2BsX,IAChDiD,EAAApK,MAAAmH,GAAApD,EAAA/D,MAAAmH,IAEA,KAAYA,EAAApD,EAAA/D,MAAAnQ,OAAuBsX,IACnCiD,EAAApK,MAAArK,KAAA2U,EAAAvG,EAAA/D,MAAAmH,KAEAiD,EAAApK,MAAAnQ,OAAAkU,EAAA/D,MAAAnQ,SACAua,EAAApK,MAAAnQ,OAAAkU,EAAA/D,MAAAnQ,YAEK,CACL,IAAAmQ,KACA,IAAAmH,EAAA,EAAqBA,EAAApD,EAAA/D,MAAAnQ,OAAuBsX,IAC5CnH,EAAArK,KAAA2U,EAAAvG,EAAA/D,MAAAmH,KAEAkC,EAAAtF,EAAA/Z,KAA8BA,GAAA+Z,EAAA/Z,GAAAqgB,KAAA,EAAArK,WAK9B,SAAAuK,IACA,IAAAC,EAAA5Q,SAAA6Q,cAAA,SAGA,OAFAD,EAAA3R,KAAA,WACAyQ,EAAAvP,YAAAyQ,GACAA,EAGA,SAAAF,EAAAI,GACA,IAAAC,EAAAC,EACAJ,EAAA5Q,SAAAQ,cAAA,SAAAwP,EAAA,MAAAc,EAAA1gB,GAAA,MAEA,GAAAwgB,EAAA,CACA,GAAAd,EAGA,OAAAC,EAOAa,EAAAK,WAAAC,YAAAN,GAIA,GAAAX,EAAA,CAEA,IAAAkB,EAAAtB,IACAe,EAAAhB,MAAAe,KACAI,EAAAK,EAAAC,KAAA,KAAAT,EAAAO,GAAA,GACAH,EAAAI,EAAAC,KAAA,KAAAT,EAAAO,GAAA,QAGAP,EAAAD,IACAI,EAAAO,EAAAD,KAAA,KAAAT,GACAI,EAAA,WACAJ,EAAAK,WAAAC,YAAAN,IAMA,OAFAG,EAAAD,GAEA,SAAAS,GACA,GAAAA,EAAA,CACA,GAAAA,EAAApC,MAAA2B,EAAA3B,KACAoC,EAAAnC,QAAA0B,EAAA1B,OACAmC,EAAAvI,YAAA8H,EAAA9H,UACA,OAEA+H,EAAAD,EAAAS,QAEAP,KAKA,IAAAQ,EAAA,WACA,IAAAC,KAEA,gBAAApV,EAAAqV,GAEA,OADAD,EAAApV,GAAAqV,EACAD,EAAA5V,OAAA8V,SAAAnK,KAAA,OALA,GASA,SAAA4J,EAAAR,EAAAvU,EAAA2U,EAAAF,GACA,IAAA3B,EAAA6B,EAAA,GAAAF,EAAA3B,IAEA,GAAAyB,EAAAgB,WACAhB,EAAAgB,WAAAC,QAAAL,EAAAnV,EAAA8S,OACG,CACH,IAAA2C,EAAA9R,SAAAW,eAAAwO,GACA4C,EAAAnB,EAAAmB,WACAA,EAAA1V,IAAAuU,EAAAM,YAAAa,EAAA1V,IACA0V,EAAA9b,OACA2a,EAAAoB,aAAAF,EAAAC,EAAA1V,IAEAuU,EAAAzQ,YAAA2R,IAKA,SAAAR,EAAAV,EAAAE,GACA,IAAA3B,EAAA2B,EAAA3B,IACAC,EAAA0B,EAAA1B,MACApG,EAAA8H,EAAA9H,UAiBA,GAfAoG,GACAwB,EAAAvQ,aAAA,QAAA+O,GAEA/d,EAAA4gB,OACArB,EAAAvQ,aAAA2P,EAAAc,EAAA1gB,IAGA4Y,IAGAmG,GAAA,mBAAAnG,EAAAxO,QAAA,SAEA2U,GAAA,uDAAyD7E,KAAAO,SAAAC,mBAAAhB,KAAAC,UAAAf,MAAA,OAGzD4H,EAAAgB,WACAhB,EAAAgB,WAAAC,QAAA1C,MACG,CACH,MAAAyB,EAAAsB,WACAtB,EAAAM,YAAAN,EAAAsB,YAEAtB,EAAAzQ,YAAAH,SAAAW,eAAAwO,4BCjLA,SAAAgD,EAAAlG,GACA,IAAA/d,EAAAkkB,EAAA,EAEA,IAAAlkB,KAAA+d,EACAmG,MAAA,GAAAA,EAAAnG,EAAAoG,WAAAnkB,GACAkkB,GAAA,EAGA,OAAA1kB,EAAA2f,OAAAra,KAAAsf,IAAAF,GAAA1kB,EAAA2f,OAAApX,QAWA,SAAAsc,EAAAtG,GAEA,IAAAuG,EAEA,SAAArP,IAEA,GAAAA,EAAAsP,QAAA,CAEA,IAAAC,EAAAvP,EAGAwP,GAAA,IAAAC,KACArJ,EAAAoJ,GAAAH,GAAAG,GACAD,EAAAvG,KAAA5C,EACAmJ,EAAAG,KAAAL,EACAE,EAAAC,OACAH,EAAAG,EAIA,IADA,IAAA3G,EAAA,IAAAtL,MAAAwG,UAAAjR,QACA/H,EAAA,EAAmBA,EAAA8d,EAAA/V,OAAiB/H,IACpC8d,EAAA9d,GAAAgZ,UAAAhZ,GAGA8d,EAAA,GAAAte,EAAAolB,OAAA9G,EAAA,IAEA,kBAAAA,EAAA,IAEAA,EAAAvF,QAAA,MAIA,IAAApK,EAAA,EACA2P,EAAA,GAAAA,EAAA,GAAAM,QAAA,yBAAAlD,EAAA2J,GAEA,UAAA3J,EAAA,OAAAA,EACA/M,IACA,IAAA2W,EAAAtlB,EAAA4f,WAAAyF,GACA,uBAAAC,EAAA,CACA,IAAArJ,EAAAqC,EAAA3P,GACA+M,EAAA4J,EAAA3kB,KAAAqkB,EAAA/I,GAGAqC,EAAAxF,OAAAnK,EAAA,GACAA,IAEA,OAAA+M,IAIA1b,EAAAqe,WAAA1d,KAAAqkB,EAAA1G,GAEA,IAAAiH,EAAA9P,EAAAnR,KAAAtE,EAAAsE,KAAA0B,QAAA1B,IAAAqf,KAAA3d,SACAuf,EAAAzG,MAAAkG,EAAA1G,IAgBA,OAbA7I,EAAA8I,YACA9I,EAAAsP,QAAA/kB,EAAA+kB,QAAAxG,GACA9I,EAAAgI,UAAAzd,EAAAyd,YACAhI,EAAAiJ,MAAA+F,EAAAlG,GACA9I,EAAA+P,UAGA,oBAAAxlB,EAAAylB,MACAzlB,EAAAylB,KAAAhQ,GAGAzV,EAAA0lB,UAAArX,KAAAoH,GAEAA,EAGA,SAAA+P,IACA,IAAA7W,EAAA3O,EAAA0lB,UAAAC,QAAAxjB,MACA,WAAAwM,IACA3O,EAAA0lB,UAAA5M,OAAAnK,EAAA,IACA,GAcA,SAAAsR,EAAAjB,GAMA,IAAAxe,EALAR,EAAA+e,KAAAC,GAEAhf,EAAA4lB,SACA5lB,EAAA6lB,SAGA,IAAAhM,GAAA,kBAAAmF,IAAA,IAAAnF,MAAA,UACAqB,EAAArB,EAAAtR,OAEA,IAAA/H,EAAA,EAAaA,EAAA0a,EAAS1a,IACtBqZ,EAAArZ,KACAwe,EAAAnF,EAAArZ,GAAAoe,QAAA,aACA,MAAAI,EAAA,GACAhf,EAAA6lB,MAAAxX,KAAA,IAAA8P,OAAA,IAAAa,EAAA/E,OAAA,SAEAja,EAAA4lB,MAAAvX,KAAA,IAAA8P,OAAA,IAAAa,EAAA,OAIA,IAAAxe,EAAA,EAAaA,EAAAR,EAAA0lB,UAAAnd,OAA8B/H,IAAA,CAC3C,IAAAslB,EAAA9lB,EAAA0lB,UAAAllB,GACAslB,EAAAf,QAAA/kB,EAAA+kB,QAAAe,EAAAvH,YAUA,SAAAwH,IACA/lB,EAAAigB,OAAA,IAWA,SAAA8E,EAAAhkB,GACA,SAAAA,IAAAwH,OAAA,GACA,SAEA,IAAA/H,EAAA0a,EACA,IAAA1a,EAAA,EAAA0a,EAAAlb,EAAA6lB,MAAAtd,OAAyC/H,EAAA0a,EAAS1a,IAClD,GAAAR,EAAA6lB,MAAArlB,GAAAgiB,KAAAzhB,GACA,SAGA,IAAAP,EAAA,EAAA0a,EAAAlb,EAAA4lB,MAAArd,OAAyC/H,EAAA0a,EAAS1a,IAClD,GAAAR,EAAA4lB,MAAAplB,GAAAgiB,KAAAzhB,GACA,SAGA,SAWA,SAAAqkB,EAAAnJ,GACA,OAAAA,aAAAzO,MAAAyO,EAAA+J,OAAA/J,EAAA+D,QACA/D,EAvNAjc,EAAAC,EAAAD,QAAA6kB,EAAApP,MAAAoP,EAAA,WAAAA,EACA7kB,EAAAolB,SACAplB,EAAA+lB,UACA/lB,EAAAigB,SACAjgB,EAAA+kB,UACA/kB,EAAAwe,SAAAle,EAAA,QAKAN,EAAA0lB,aAMA1lB,EAAA4lB,SACA5lB,EAAA6lB,SAQA7lB,EAAA4f","file":"vue-flowy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-flowy\"] = factory();\n\telse\n\t\troot[\"vue-flowy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"+xUi\");\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flowyChart\",attrs:{\"id\":_vm._uid}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class Size {\n  constructor() {\n    this.width = 0\n    this.height = 0\n  }\n}","import Position from \"./layout/Position\";\nimport Size from \"./layout/Size\";\n\nconst DEFAULT_EDGE_NAME = '\\x00'\nconst EDGE_KEY_DELIM = '\\x01'\n\nconst defaults = {\n  minLen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labelOffset: 10,\n  labelPos: 'r'\n}\n\nexport default class Edge {\n  constructor(id, from, to, options) {\n    this.id = id\n    this.from = from\n    this.to = to\n    this.order = 0\n    this.points = []\n    this.data = {}\n    this.position = new Position()\n    this.size = new Size()\n    Object.assign(this, defaults)\n    this.setOptions(options)\n  }\n\n  static generateId(from, to, directed = false) {\n    if (!directed && from > to) {\n      const tmp = from\n      from = to\n      to = tmp\n    }\n    return from + EDGE_KEY_DELIM + to + EDGE_KEY_DELIM + DEFAULT_EDGE_NAME\n  }\n\n  setOptions(options) {\n    Object.assign(this, options)\n  }\n}","import Graph from \"../../Graph\";\nimport debug from 'debug'\n\nconst log = debug('layering')\n\nexport default class Layering {\n  /**\n   * \n   * @param {Graph} graph \n   */\n  constructor(graph) {\n    this.graph = graph\n    this.matrix = this._buildLayerMatrix()\n  }\n\n  _buildLayerMatrix() {\n    const layering = []\n    this.graph.nodes.forEach(node => {\n      if (!layering[node.rank]) {\n        layering[node.rank] = []\n      }\n      layering[node.rank][node.order] = node\n    })\n\n    return layering\n  }\n\n  calculatePositions() {\n    this._calculateYPositions()\n    this._calculateXPositions()\n  }\n\n  _calculateYPositions() {\n    let prevY = 0\n    this.matrix.forEach(layer => {\n      const maxHeight = Math.max(\n        ...layer.map(node => {\n          return node.height\n        })\n      )\n      layer.forEach(node => {\n        log('assigning y', node.id, prevY, maxHeight / 2, prevY + maxHeight / 2)\n        node.position.y = prevY + maxHeight / 2\n      })\n      prevY += maxHeight + this.graph.rankSep\n    })\n  }\n\n  _calculateXPositions() {\n    const xPositions = {}\n    let adjustedLayering\n    const verticals = ['u', 'd']\n    const horizontals = ['l', 'r']\n    verticals.forEach(vert => {\n      console.log('calculating with', vert)\n      adjustedLayering = vert === 'u' ? this.matrix : Object.values(this.matrix).reverse()\n\n      horizontals.forEach(horiz => {\n        if (horiz === 'r') {\n          adjustedLayering = adjustedLayering.map(inner => Object.values(inner).reverse())\n        }\n        \n        const align = this._verticalAlignment(adjustedLayering, vert, horiz)\n        let xs = this._horizontalCompaction(adjustedLayering, align, horiz)\n        log(vert + horiz, xs)\n        if (horiz === 'r') {\n          for (const key in xs) {\n            xs[key] = -xs[key]\n          }\n        }\n        xPositions[vert + horiz] = xs\n      })\n    })\n\n    log('xPositions finish', xPositions)\n\n    const smallestWidthAlignment = this._findSmallestWidthAlignment(xPositions)\n    this._alignCoordinates(xPositions, smallestWidthAlignment)\n    return\n  }\n\n  _alignCoordinates(xPositions, smallestWidthAlignment) {\n\n    const alignToVals = Object.values(smallestWidthAlignment)\n    const alignToMin = Math.min(...alignToVals)\n    const alignToMax = math.max(...alignToVals)\n\n    const verticals = ['u', 'd']\n    const horizontals = ['l', 'r']\n    verticals.forEach(vert => {\n      horizontals.forEach(horiz => {\n        const alignment = vert + horiz\n        const xs = xPositions[alignment]\n        if (xs === smallestWidthAlignment) {\n          return\n        }\n        const xsVals = Object.values(xs)\n        const delta = horiz === 'l' ? alignToMin - Math.min(...xsVals) : alignToMax - Math.max(...xsVals)\n\n        if (delta) {\n          for (const i in xs) {\n            xPositions[alignment] = xs[i] + delta\n          }\n        }\n      })\n    })\n  }\n\n  _findSmallestWidthAlignment(xPositions) {\n    const min = Infinity\n    Object.values(xPositions).forEach(x => {\n      const min = 0\n      const max = 0\n      return max - min\n    })\n  }\n\n  _horizontalCompaction(layering, align, reverseSep) {\n    log('horizontalCompaction', layering, align, reverseSep)\n    const xs = {}\n    const blockGraph = Graph.buildBlockGraph(layering, align.root, reverseSep)\n\n    const visited = {}\n    function pass1 (node) {\n      if (visited[node.id]) {\n        return\n      }\n      visited[node.id] = true\n      xs[node.id] = blockGraph.inEdges(node).reduce((max, edge) => {\n        pass1(edge.from)\n        log('pass1', blockGraph, edge)\n        return Math.max(max, xs[edge.from] + edge.data.unknown)\n      }, 0)\n    }\n    blockGraph.nodes.forEach(pass1)\n\n    Object.keys(align.align).forEach(nodeId => {\n      xs[nodeId] = xs[align.root[nodeId]]\n    })\n\n    return xs\n  }\n\n  _verticalAlignment(layering, vert, horiz) {\n    const root = {}\n    const align = {}\n    const pos = {}\n\n    layering.forEach(layer => {\n      layer.forEach((node, order) => {\n        console.log('VA node', node)\n        root[node.id] = node\n        align[node.id] = node\n        pos[node.id] = order\n      })\n    })\n\n    layering.forEach(layer => {\n      let prevIdx = -1\n      layer.forEach(node => {\n        let ws = (vert === 'u') ? this.graph.getPredecessors(node) : this.graph.getSuccessors(node)\n        if (!ws.length) {\n          return\n        }\n        ws = this.graph.layout.sortByFunction(ws, (w) => pos[w])\n        const mp = (ws.length - 1) / 2\n        for (let i = Math.floor(mp), il = Math.ceil(mp); i <= il; i++) {\n          const w = ws[i]\n          if (align[node.id].id === node.id && prevIdx < pos[w]) {\n            align[w] = node\n            align[node.id] = root[node.id] = root[w]\n            prevIdx = pos[w]\n          }          \n        }\n      })\n    })\n\n    return {root, align}\n  }\n  \n}","import Graph from \"../../Graph\";\nimport debug from 'debug'\nimport Edge from \"../Edge\";\n\nconst log = debug('normalizer')\n\nexport default class Normalizer {\n  /**\n   * \n   * @param {Graph} graph \n   */\n  constructor(graph) {\n    this.graph = graph\n  }\n\n  normalize() {\n    this.graph.dummyChains = []\n    this.graph.edges.forEach(this._normalizeEdge, this)\n  }\n\n  /**\n   * \n   * @param {Edge} edge \n   */\n  _normalizeEdge(edge) {\n    if (edge.to.rank === edge.from.rank + 1) {\n      return\n    }\n\n    log('not returning for', edge)\n\n    for (let i = edge.from.rank; i < edge.to.rank; i++) {\n      edge.points = []\n      let dummy = this.graph.addDummyNode('edge', {rank: edge.from.rank}, '_d')\n      this.graph.setEdge(edge.from.id, dummy, {weight: edge.weight}, name)\n    }\n  }\n}","import Graph from '../Graph'\nimport GraphNode from './Node'\nimport Edge from './Edge'\nimport debug from 'debug'\nimport Position from './layout/Position';\nimport Layering from './layout/Layering';\nimport Normalizer from './layout/Normalizer';\n\nconst ldb = debug('layout')\n\nexport default class Layout {\n  /**\n   *\n   * @param {Graph} graph\n   */\n  constructor(graph) {\n    /** @type {Graph} */\n    this.graph = graph\n    this.runLayout()\n    ldb('new layout for graph', graph)\n  }\n\n  runLayout() {\n    this.makeSpaceForEdgeLabels()\n    this.createNestingGraph()\n    this.rank()\n    this.cleanupNestingGraph()\n    this.normalizeRanks()\n\n    this.normalizer = new Normalizer(this.graph)\n    this.normalizer.normalize()\n\n    this.order()\n    this.adjustCoordinateSystem()\n\n    this.layering = new Layering(this.graph)\n    this.layering.calculatePositions()\n    this.undoCoordinateSystem()\n    this.translateGraph()\n  }\n\n  makeSpaceForEdgeLabels() {\n    this.graph.rankSep /= 2\n    ldb(this.graph)\n    this.graph.edges.forEach(edge => {\n      ldb('making space for edge', edge)\n      edge.minLen *= 2\n\n      if (edge.labelPos.toLowerCase() === 'c') {\n        return\n      }\n\n      if (this.graph.rankDir === 'tb' || this.graph.rankDir === 'bt') {\n        edge.size.width += edge.labelOffset\n      } else {\n        edge.size.height += edge.labelOffset\n      }\n    })\n  }\n\n  createNestingGraph() {\n    ldb('creating nesting graph')\n    this.graph.root = this.graph.setNode('_root', { dummy: 'root' })\n    const depths = this.treeDepths()\n    ldb('depths', depths)\n    const height = Math.max(...Object.values(depths)) - 1\n    const nodeSep = 2 * height + 1\n\n    // multiply minLen by nodeSep to align nodes on non-border ranks\n    this.graph.edges.forEach(edge => {\n      edge.minLen *= nodeSep\n    })\n\n    // calculate a weight that is sufficient to keep subgraphs vertically compact\n    const weight = this.graph.edges.reduce(\n      (prevVal, edge) => prevVal + edge.weight,\n      0\n    )\n\n    // create border nodes and link them up\n    this.graph.getChildren().forEach(child => {\n      ldb('calling dfs with', this.graph.root, nodeSep, weight, height, depths, child)\n      this.dfs(this.graph.root, nodeSep, weight, height, depths, child)\n    })\n\n    this.graph.nodeRankFactor = nodeSep\n  }\n\n  cleanupNestingGraph() {\n    this.graph.removeNode(this.graph.root.id)\n    this.graph.root = null\n    this.graph.edges.forEach(edge => {\n      if (edge.nestingEdge) {\n        this.graph.removeEdge(edge.id)\n      }\n    })\n  }\n\n  normalizeRanks() {\n    const minRank = this.minRank()\n    this.graph.nodes.forEach(node => node.rank -= minRank)\n  }\n\n  treeDepths() {\n    const depths = {}\n    const layout = this\n\n    function dfs(nodeId, depth = 1) {\n      const children = layout.graph.getChildren(nodeId)\n      ldb('children of', nodeId, 'are', children, '. depth:', depth)\n      if (children && children.length) {\n        children.forEach(childId => {\n          ldb('child', childId)\n          dfs(childId, depth + 1)\n        })\n      }\n      depths[nodeId] = depth\n    }\n    this.graph.getChildren().forEach(childId => {\n      dfs(childId)\n    })\n    return depths\n  }\n\n  /**\n   *\n   * @param {GraphNode} root\n   * @param {*} nodeSep\n   * @param {*} weight\n   * @param {*} height\n   * @param {*} depths\n   * @param {GraphNode} node\n   */\n  dfs(root, nodeSep, weight, height, depths, nodeId) {\n    const children = this.graph.getChildren(nodeId)\n    ldb('DFS: children of', nodeId, children)\n    if (!children.length) {\n      if (nodeId !== root.id) {\n        this.graph.setEdge(root.id, nodeId, { weight: 0, minLen: nodeSep })\n      }\n      return\n    }\n\n    const top = this.addBorderNode('_bt')\n    const bottom = this.addBorderNode('_bb')\n\n    this.graph.setParent(top, nodeId)\n    this.graph.borderTop = top\n    this.graph.setParent(bottom, nodeId)\n    this.graph.borderBottom = bottom\n\n    const dfs = this.dfs\n\n    children.forEach(child => {\n      this.dfs(root, nodeSep, weight, height, depths, child)\n\n      const childTop = child.borderTop ? child.borderTop : child\n      const childBottom = child.borderBottom ? child.borderBottom : child\n      const thisWeight = child.borderTop ? weight : 2 * weight\n      const minLen = childTop !== childBottom ? 1 : height - depths[nodeId] + 1\n\n      this.graph.setEdge(top, childTop, {\n        weight: thisWeight,\n        minLen: minLen,\n        nestingEdge: true\n      })\n\n      this.graph.setEdge(childBottom, bottom, {\n        weight: thisWeight,\n        minLen: minLen,\n        nestingEdge: true\n      })\n    })\n\n    if (!this.graph.parent(nodeId)) {\n      this.graph.setEdge(root, top, {\n        weight: 0,\n        minLen: height + depths[nodeId]\n      })\n    }\n  }\n\n  addBorderNode(prefix, rank, order) {\n    const node = {\n      width: 0,\n      height: 0\n    }\n    if (rank && order) {\n      node.rank = rank\n      node.order = order\n    }\n    return this.addDummyNode('border', node, prefix)\n  }\n\n  rank() {\n    switch (this.graph.ranker) {\n      case 'network-simplex':\n        this.networkSimplexRanker()\n        break\n      case 'tight-tree':\n        this.tightTreeRanker()\n        break\n      case 'longest-path':\n        this.longestPathRanker()\n        break\n      default:\n        this.networkSimplexRanker()\n        break\n    }\n  }\n\n  position() {\n    const position = new Position(graph)\n    this.positionY()\n    // this.positionX()\n  }\n\n  positionX() {\n    const layering = this.buildLayerMatrix()\n\n    // const xss = {}\n    // let adjustedLayering\n    // ['u', 'd'].forEach(vert => {\n    //   adjustedLayering = vert === 'u' ? layering : Object.values(layering).reverse()\n    //   ['l', 'r'].forEach(horiz => {\n    //     if (horiz === 'r') {\n    //       adjustedLayering = adjustedLayering.map(inner => Object.values(inner).reverse())\n    //     }\n\n    //     const align = this.verticalAlignment(adjustedLayering)\n\n    //     xss[vert + horiz] = xs\n    //   })\n    // })\n  }\n\n  positionY() {\n    let prevY = 0\n    this.layering.forEach(layer => {\n      const maxHeight = Math.max(\n        layer.map(node => {\n          return node.height\n        })\n      )\n      layer.forEach(node => {\n        ldb('assigning y', node.id, prevY, maxHeight / 2, prevY + maxHeight / 2)\n        node.y = prevY + maxHeight / 2\n      })\n      prevY += maxHeight + rankSep\n    })\n  }\n\n  balance(xss, align) {\n    return\n  }\n\n  networkSimplexRanker() {\n    this.longestPath()\n    this.feasibleTree()\n  }\n\n  longestPath() {\n    const layout = this\n    const visited = {}\n\n    function _longestPath(node) {\n      if (visited[node.id]) {\n        return node.rank\n      }\n      visited[node.id] = true\n\n      const min = Math.min(...layout.graph.outEdges(node).map(outEdge => {\n          return _longestPath(outEdge.to) - outEdge.minLen\n      }))\n      const rank = min === Infinity ? 0 : min\n\n      return (node.rank = rank)\n    }\n\n    this.graph.sources.forEach(_longestPath)\n  }\n\n  feasibleTree() {\n    this.treeGraph = new Graph({ directed: false })\n\n    const start = this.graph.nodeIds[0]\n    const size = this.graph.nodeIds.length\n    this.treeGraph.setNode(start)\n    ldb('start is', start, 'size is', size)\n\n    let edge\n    let delta\n    let doneTimes = 0\n    while (this.tightTree() < size) {\n      edge = this.findMinSlackEdge()\n      delta = this.treeGraph.hasNode(edge.from.id)\n        ? this.slack(edge)\n        : -this.slack(edge)\n      this.shiftRanks(delta)\n      doneTimes++\n      if (doneTimes > 200) {\n        throw new Error('too many loops, breaking now!')\n      }\n    }\n  }\n\n  /**\n   * Finds a maximal tree of tight edges and returns the number of nodes in the tree\n   */\n  tightTree() {\n    const layout = this\n    function dfs(node) {\n      ldb('nodeEdges', layout.graph.nodeEdges(node))\n      layout.graph.nodeEdges(node).forEach(edge => {\n        ldb('nodeEdge for', node.id, edge)\n        const to = node.id === edge.from.id ? edge.to : edge.from\n        ldb('not hasNode', !layout.treeGraph.hasNode(to.id), 'not slack', !layout.slack(edge))\n        if (!layout.treeGraph.hasNode(to.id) && !layout.slack(edge)) {\n          ldb('adding node to tighttree', to)\n          layout.treeGraph.setNode(to.id)\n          layout.treeGraph.setEdge(node.id, to.id)\n          dfs(to)\n        }\n      })\n    }\n\n    this.treeGraph.nodes.forEach(dfs)\n    ldb('tightTree size is', this.treeGraph.nodeIds.length)\n    return this.treeGraph.nodeIds.length\n  }\n\n  findMinSlackEdge() {\n    let minSlackEdge\n    let minSlack = Infinity\n\n    ldb('finding min slack edge')\n\n    this.graph.edges.forEach(edge => {\n      if (\n        this.treeGraph.hasNode(edge.from.id) !==\n        this.treeGraph.hasNode(edge.to.id)\n      ) {\n        const slack = this.slack(edge)\n        if (slack < minSlack) {\n          minSlackEdge = edge\n          minSlack = slack\n        }\n      }\n    })\n\n    return minSlackEdge\n  }\n\n  /**\n   * Returns the amount of slack for the given edge. The slack is defined as the difference\n   * between the length of the edge and its minimum length\n   * @param {Edge} edge\n   */\n  slack(edge) {\n    ldb(\n      'calculating slack of',\n      edge,\n      edge.to.rank,\n      edge.from.rank,\n      edge.minLen\n    )\n    return edge.to.rank - edge.from.rank - edge.minLen\n  }\n\n  order() {\n    const maxRank = this.maxRank()\n    const layering = this.initOrder()\n    ldb('LAYERING', layering)\n    \n    this.assignOrder(layering)\n    // ldb('order', layering, this.graph.nodes)\n    // ldb('STOPPED HERE, code further!')\n    // const downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges')\n    // const upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges')\n\n    // let layering = initOrder(g)\n    // assignOrder(g, layering)\n\n    // let bestCC = Number.POSITIVE_INFINITY\n    // let best\n\n    // for (let i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    //   sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2)\n\n    //   layering = util.buildLayerMatrix(g)\n    //   const cc = crossCount(g, layering)\n    //   if (cc < bestCC) {\n    //     lastBest = 0\n    //     best = _.cloneDeep(layering)\n    //     bestCC = cc\n    //   }\n    // }\n\n    // assignOrder(g, best)\n  }\n\n  buildLayerGraphs(ranks, relationship) {\n    return ranks.map(rank => this.buildLayerGraph(rank, relationship))\n  }\n\n  initOrder() {\n    const visited = {}\n    const simpleNodes = this.graph.nodes.filter(node => !this.graph.getChildren(node.id).length)\n    const maxRank = this.maxRank(simpleNodes)\n    const layers = []\n\n    function dfs (node) {\n      if (visited[node.id]) {\n        return\n      }\n      visited[node.id] = true\n      if (!layers[node.rank]) {\n        layers[node.rank] = []\n      }\n      layers[node.rank].push(node)\n      this.graph.getSuccessors(node).forEach(dfs)\n    }\n\n    function compare(a, b) {\n      if (a.rank < b.rank) {\n        return -1\n      }\n      if (a.rank > b.rank) {\n        return 1\n      }\n      return 0\n    }\n\n    const orderedNodeIds = simpleNodes.sort(compare)\n    orderedNodeIds.forEach(dfs, this)\n\n    return layers\n  }\n\n  assignOrder(layering) {\n    layering.forEach(layer => {\n      layer.forEach((node, index) => {\n        node.order = index\n      })\n    })\n  }\n\n  adjustCoordinateSystem() {\n    if (this.graph.rankDir === 'lr' || this.graph.rankDir === 'rl') {\n      this.swapWidthHeight()\n    }\n  }\n\n  undoCoordinateSystem() {\n    if (this.graph.rankDir === 'bt' || this.graph.rankDir === 'rl') {\n      this.reverseY()\n    }\n\n    if (this.graph.rankDir === 'lr' || this.graph.rankDir === 'rl') {\n      this.swapXY()\n      this.swapWidthHeight()\n    }\n  }\n\n  _swapWidthHeightOne(o) {\n    const w = o.width\n    o.width = o.height\n    o.height = w\n  }\n\n  swapWidthHeight() {\n    this.graph.nodes.forEach(this._swapWidthHeightOne)\n    this.graph.edges.forEach(this._swapWidthHeightOne)\n  }\n\n  _swapXYOne(o) {\n    const x = o.x\n    o.x = o.y\n    ldb('y before', o.y, 'after', x)\n    o.y = x\n    ldb('now', {x: o.x, y: o.y})\n  }\n\n  swapXY() {\n    this.graph.nodes.forEach(this._swapXYOne)\n    this.graph.edges.forEach(edge => {\n      edge.points.forEach(this._swapXYOne)\n      if (edge.x) {\n        this._swapXYOne(edge)\n      }\n    })\n  }\n\n  maxRank(nodes = this.graph.nodes) {\n    return nodes.reduce((prevV, node) => {\n      return node.rank > prevV ? node.rank : prevV\n    }, -Infinity)\n  }\n\n  minRank(nodes = this.graph.nodes) {\n    return nodes.reduce((prevV, node) => {\n      return node.rank < prevV ? node.rank : prevV\n    }, Infinity)\n  }\n\n  shiftRanks(delta) {\n    this.treeGraph.nodes.forEach(node => {\n      node.rank += delta\n    })\n  }\n\n  translateGraph() {\n    let minX = Infinity\n    let maxX = 0\n    let minY = Infinity\n    let maxY = 0\n    const marginX = this.graph.marginX || 0\n    const marginY = this.graph.marginY || 0\n\n    function getExtremes(o) {\n      const x = o.x || 0\n      const y = o.y || 0\n      const w = o.width || 0\n      const h = o.height || 0\n      minX = Math.min(minX, x - w / 2)\n      maxX = Math.max(maxX, x + w / 2)\n      minY = Math.min(minY, y - h / 2)\n      maxY = Math.max(maxY, y + h / 2)\n    }\n\n    this.graph.nodes.forEach(getExtremes)\n\n    this.graph.edges.forEach(edge => {\n      if (edge.x) {\n        getExtremes(edge)\n      }\n    })\n\n    minX -= marginX\n    minY -= marginY\n\n    this.graph.nodes.forEach(node => {\n      node.x -= minX\n      node.y -= minY\n    })\n\n    this.graph.edges.forEach(edge => {\n      edge.points.forEach(point => {\n        point.x -= minX\n        point.y -= minY\n      })\n\n      if (edge.x) {\n        edge.x -= minX\n      }\n\n      if (edge.y) {\n        edge.y -= minY\n      }\n    })\n\n    this.graph.width = maxX - minX + marginX\n    this.graph.height = maxY - minY + marginY\n  }\n\n\n  /**\n   * \n   * @param {[{}]} arr \n   * @param {string} key\n   */\n  sortBy(arr, key) {\n    function compare(a, b) {\n      if (a[key] < b[key]) {\n        return -1\n      }\n      if (a[key] > b[key]) {\n        return 1\n      }\n      return 0\n    }\n\n    return arr.sort(compare)\n  }\n\n  /**\n   * \n   * @param {[{}]} arr \n   * @param {any} fn Function for comparison\n   */\n  sortByFunction(arr, fn) {\n    function compare(a, b) {\n      if (fn(a) < fn(b)) {\n        return -1\n      }\n      if (fn(a) > fn(b)) {\n        return 1\n      }\n      return 0\n    }\n\n    return arr.sort(compare)\n  }\n}\n","import Graph from \"../../Graph\";\nimport Layout from \"../Layout\";\n\nexport default class Position {\n  /**\n   * \n   * @param {Graph} graph \n   */\n  constructor() {\n    this.x = 0\n    this.y = 0\n  }\n}","import Size from \"./layout/Size\";\nimport Position from \"./layout/Position\";\n\nconst defaults = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n  width: 0,\n  height: 0\n}\n\nexport default class GraphNode {\n  constructor(id, options) {\n    /** @type {string} */\n    this.id = id\n    this.setOptions(options)\n    this.position = new Position()\n    this.size = new Size()\n  }\n\n  setOptions(options = {}) {\n    if (!options.label) {\n      options.label = this.id\n    }\n\n    Object.assign(this, defaults, options)\n  }\n\n  setDefaults() {}\n}\n","import GraphNode from './graph/Node'\nimport Layout from './graph/Layout'\nimport Edge from './graph/Edge'\nimport debug from 'debug'\n\nconst gdb = debug('graph')\nconst GRAPH_NODE = '\\x00'\n\nexport default class Graph {\n  constructor({\n    directed = true,\n    multiGraph = false,\n    compound = false,\n    rankDir = 'tb',\n    rankSep = 50,\n    edgeSep = 20,\n    nodeSep = 50,\n    marginX = 20,\n    marginY = 20\n  } = {}) {\n    Object.assign(this, {\n      directed,\n      multiGraph,\n      compound,\n      rankDir: rankDir.toLowerCase(),\n      rankSep,\n      edgeSep,\n      nodeSep,\n      marginX,\n      marginY\n    })\n    /** @type {{id: GraphNode}} */\n    this._nodes = {}\n    /** @type {{id: Edge}} */\n    this._edges = {}\n\n    if (this.compound === true) {\n      this.parent = {}\n      this.children = {}\n      this.children[GRAPH_NODE] = {}\n    }\n\n    this.randomId = 1\n\n    /** @type {GraphNode} */\n    this.root = null\n\n    // v -> edgeObj\n    this.in = {}\n\n    // u -> v -> Number\n    this.preds = {}\n\n    // v -> edgeObj\n    this.out = {}\n\n    // v -> w -> Number\n    this.sucs = {}\n  }\n\n  /**\n   *\n   * @param {string} id\n   * @param {{}} options\n   * @returns {GraphNode} node\n   */\n  setNode(id, options) {\n    if (this._nodes[id]) {\n      if (options) {\n        this._nodes[id].setOptions(options)\n      }\n      return this._nodes[id]\n    }\n\n    gdb('creating node', id, options)\n\n    this._nodes[id] = new GraphNode(id, options)\n\n    if (this.compound === true) {\n      this.parent[id] = GRAPH_NODE\n      this.children[id] = {}\n      this.children[GRAPH_NODE][id] = true\n    }\n\n    this.in[id] = {}\n    this.preds[id] = {}\n    this.out[id] = {}\n    this.sucs[id] = {}\n    return this._nodes[id]\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  removeNode(id) {\n    gdb('TODO: removing not finished')\n    if (!this._nodes[id]) {\n      return\n    }\n\n    delete this._nodes[id]\n\n    if (this.compound) {\n      delete this.parent[id]\n      delete this.children[id]\n    }\n\n    delete this.in[id]\n    delete this.preds[id]\n    delete this.out[id]\n    delete this.sucs[id]\n  }\n\n  /**\n   *\n   * @param {string} from\n   * @param {string} to\n   * @param {{}} options\n   */\n  setEdge(from, to, options) {\n    gdb('setting edge', from, to, options)\n\n    const edgeId = Edge.generateId(from, to, this.directed)\n\n    if (this._edges[edgeId]) {\n      if (options) {\n        this._edges[edgeId].setOptions(options)\n      }\n      return this\n    }\n\n    // first ensure the nodes exist\n    const fromNode = this.setNode(from)\n    const toNode = this.setNode(to)\n\n    const edge = new Edge(edgeId, fromNode, toNode, options)\n\n    this._edges[edgeId] = edge\n\n    this.out[from][edgeId] = edge\n    this.in[to][edgeId] = edge\n    return this\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  removeEdge(id) {\n    gdb('TODO: removing not finished')\n    if (!this.edges[id]) {\n      return\n    }\n    /** @type {Edge} */\n    const edge = this._edges[id]\n    delete this.in[edge.from]\n    delete this.out[edge.to]\n    delete this._edges[id]\n  }\n\n  addDummyNode(type, attrs, name) {\n    name = name + this.randomId++\n    attrs.dummy = type\n    this.setNode(name, attrs)\n    return name\n  }\n\n  getNode(id) {\n    return this._nodes[id]\n  }\n\n  getEdge(fromId, toId) {\n    return this._edges[Edge.generateId(fromId, toId, this.directed)]\n  }\n\n  getChildren(id) {\n    if (!id) {\n      id = GRAPH_NODE\n    }\n\n    if (this.compound) {\n      const childArray = this.children[id]\n      if (childArray) {\n        return Object.keys(childArray)\n      }\n    } else if (id === GRAPH_NODE) {\n      return this.nodes\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * \n   * @param {GraphNode} node \n   */\n  getPredecessors(node) {\n    if (this.preds[node.id]) {\n      return Object.keys(this.preds[node.id])\n    }\n  }\n\n  /**\n   * \n   * @param {GraphNode} node \n   */\n  getSuccessors(node) {\n    if (this.sucs[node.id]) {\n      return Object.keys(this.sucs[node.id])\n    }\n  }\n\n  setParent(id, parentId) {\n    if (!this.compound) {\n      throw new Error('Cannot set parent in a non-compound graph')\n    }\n\n    if (!parentId) {\n      parentId = GRAPH_NODE\n    } else {\n      // Coerce parent to string\n      for (let ancestor = parent; !ancestor; ancestor = this.parent(ancestor)) {\n        if (ancestor === id) {\n          throw new Error(\n            'Setting ' +\n              parentId +\n              ' as parent of ' +\n              id +\n              ' would create a cycle'\n          )\n        }\n      }\n  \n      this.setNode(parentId)\n    }\n  \n    this.setNode(id)\n    delete this.children[parentId][id]\n    this.parent[id] = parentId\n    this.children[parentId][id] = true\n  }\n\n  /**\n   *\n   * @param {GraphNode} from\n   * @param {GraphNode} to\n   */\n  nodeEdges(from, to) {\n    const inEdges = this.inEdges(from, to)\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(from, to))\n    }\n  }\n\n  isSubgraph(id) {\n    return this.getChildren(id).length !== 0\n  }\n\n  doLayout() {\n    gdb('layouting graph')\n    this.layout = new Layout(this)\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  hasNode(id) {\n    return this._nodes[id]\n  }\n\n  /**\n   * @returns {Array<{label: string}>} all nodes of the graph\n   */\n  get nodes() {\n    return Object.values(this._nodes)\n  }\n\n  /**\n   * @returns {Array<{label: string}>} all edges of the graph\n   */\n  get edges() {\n    return Object.values(this._edges)\n  }\n\n  get sources() {\n    return this.nodes.filter(node => {\n      return Object.keys(this.in[node.id]).length === 0\n    })\n  }\n\n  /**\n   *\n   * @param {GraphNode} from\n   * @param {GraphNode} to\n   */\n  inEdges(from, to) {\n    // gdb('ins', this.in)\n    let inFrom = this.in[from.id]\n    // gdb('in from', from, 'to', to, inFrom)\n    if (!inFrom) {\n      return\n    }\n\n    const edges = Object.values(inFrom)\n    if (!to) {\n      return edges\n    }\n    return edges.filter(edge => edge.from.id === to.id)\n  }\n\n  /**\n   *\n   * @param {GraphNode} from\n   * @param {GraphNode} to\n   */\n  outEdges(from, to) {\n    // gdb('outs', this.out)\n    let outFrom = this.out[from.id]\n    // gdb('out from', from, 'to', to, outFrom)\n    if (!outFrom) {\n      return\n    }\n\n    const edges = Object.values(outFrom)\n    if (!to) {\n      return edges\n    }\n    return edges.filter(edge => edge.to.id === to.id)\n  }\n\n  /**\n   * @returns {Array<string>} array of all node IDs\n   */\n  get nodeIds() {\n    return Object.keys(this._nodes)\n  }\n\n  static buildBlockGraph(layering, root, reverseSep) {\n    const blockGraph = new Graph()\n    \n    layering.forEach(layer => {\n      let to\n      layer.forEach(node => {\n        blockGraph.setNode(root[node.id].id)\n        if (to) {\n          const prevMax = blockGraph.getEdge(root[to.id], root[node.id])\n          blockGraph.setEdge(root[to.id].id, root[node.id].id, {data: {unknown: Math.max(blockGraph.sep(reverseSep, node, to), prevMax || 0)}})\n        }\n        to = node\n      })\n    })\n\n    return blockGraph\n  }\n\n  sep(reverseSep, from, to) {\n    let sum = 0\n    let delta\n\n    sum += from.width / 2\n    if (from.labelPos) {\n      switch (from.labelPos.toLowerCase()) {\n        case 'l':\n          delta = -from.width / 2\n          break\n        case 'r':\n          delta = from.width / 2\n          break\n      }\n    }\n\n    if (delta) {\n      sum += reverseSep ? delta : -delta\n    }\n    delta = 0\n\n    sum += (from.dummy ? this.edgeSep : this.nodeSep) / 2\n    sum += (to.dummy ? this.edgeSep : this.nodeSep) / 2\n\n    sum += to.width / 2\n\n    if (to.labelPos) {\n      switch (to.labelPos.toLowerCase()) {\n        case 'l':\n          delta = to.width / 2\n          break\n        case 'r':\n          delta = -to.width / 2\n          break\n      }\n    }\n\n    if (delta) {\n      sum += reverseSep ? delta : -delta\n    }\n    delta = 0\n\n    return sum\n  }\n}\n","export default class GraphSvg {\n  constructor(tag) {\n    /**\n     * @type {HTMLElement}\n     */\n    this.node = document.createElementNS('http://www.w3.org/2000/svg', tag)\n  }\n\n  /**\n   *\n   * @param {string|GraphSvg} tag\n   * @returns {GraphSvg}\n   */\n  append(el) {\n    if (!(el instanceof GraphSvg)) {\n      el = new GraphSvg(el)\n    }\n    this.node.appendChild(el.node)\n    return el\n  }\n\n  attr(attribute, value) {\n    this.node.setAttribute(attribute, value)\n    return this\n  }\n\n  select(selector) {\n    const res = this.node.querySelector(selector)\n    if (res) {\n      return new GraphSvg(res)\n    }\n\n    return null\n  }\n\n  selectAll(selector) {\n    const res = this.node.querySelectorAll(selector)\n    if (res) {\n      return Array.from(res).map(node => new GraphSvg(node))\n    }\n\n    return null\n  }\n\n  text(s) {\n    const el = document.createTextNode(s)\n    this.node.appendChild(el)\n    return this\n  }\n\n  /**\n   *\n   * @param {string} c\n   */\n  addClass(c) {\n    this.node.classList.add(c)\n    return this\n  }\n}\n","import GraphSvg from \"../graph/Svg\";\n\nexport default class Shape {\n\n  /**\n   * \n   * @param {string} shapeType \n   * @param {Object} bbox \n   * @param {Object} options \n   */\n  constructor(shapeType, bbox, options) {\n    /** @type {GraphSvg} */\n    this.shape = this[shapeType](bbox, options)\n  }\n  /**\n   * \n   * @param {Object} bbox \n   * @param {Object} options \n   */\n  rect(bbox, options) {\n    return new GraphSvg('rect')\n      .attr('rx', options.rx)\n      .attr('ry', options.ry)\n      .attr('x', -bbox.width / 2)\n      .attr('y', -bbox.height / 2)\n      .attr('width', bbox.width)\n      .attr('height', bbox.height)\n      .attr('rx', options.rx)\n  }\n}","import GraphSvg from \"./Svg\";\n\nexport default class GraphLabel {\n  constructor(labelData) {\n    this.group = new GraphSvg('g')\n    this.labelData = labelData\n\n    this.textLabel()\n  }\n\n  textLabel() {\n    const text = this.group.append('text').text(this.labelData.label)\n  }\n}","import Graph from './Graph'\nimport Shape from './graph/Shape'\nimport GraphSvg from './graph/Svg'\nimport GraphLabel from './graph/Label'\n\nexport default class Renderer {\n  /**\n   *\n   * @param {Graph} graph\n   */\n  constructor(graph) {\n    this.graph = graph\n  }\n\n  render(svg) {\n    console.log('rendering', svg, this.graph)\n    // TODO: remove all children of svg\n\n    const edgePathsGroup = this.createOrSelectGroup(svg, 'edgePaths')\n    const edgeLabels = this.createEdgeLabels(\n      this.createOrSelectGroup(svg, 'edgeLabels'),\n      this.graph\n    )\n    this.createNodes(this.createOrSelectGroup(svg, 'nodes'))\n\n    this.graph.doLayout()\n\n    let minX = 1000\n    let minY = 1000\n    let maxX = -1000\n    let maxY = -1000\n\n    this.graph.nodes.forEach(node => {\n      minX = Math.min(minX, node.x - node.width / 2)\n      minY = Math.min(minY, node.y - node.height / 2)\n      maxX = Math.max(maxX, node.x + node.width / 2)\n      maxY = Math.max(maxY, node.y + node.height / 2)\n    })\n\n    this.graph.edges.forEach(edge => {\n      if (edge.label && edge.x && edge.y) {\n        minX = Math.min(minX, edge.x - edge.width / 2)\n        minY = Math.min(minY, edge.y - edge.height / 2)\n        maxX = Math.max(maxX, edge.x + edge.width / 2)\n        maxY = Math.max(maxY, edge.y + edge.height / 2)\n      }\n      const points = edge.points.slice(1, edge.points.length - 1) // intersetion points don't matter\n      for (let i = 0; i < points.length; i++) {\n        const point = points[i]\n        minX = Math.min(minX, point.x)\n        minY = Math.min(minY, point.y)\n        maxX = Math.max(maxX, point.x)\n        maxY = Math.max(maxY, point.y)\n      }\n    })\n\n    this.graph.minX = minX\n    this.graph.minY = minY\n    this.graph.maxX = maxX\n    this.graph.maxY = maxY\n\n    console.log('GRAPH', this.graph)\n\n    this.positionNodes()\n  }\n\n  /**\n   *\n   * @param {GraphSvg} selection\n   * @param {Graph} graph\n   */\n  createNodes(selection) {\n    const simpleNodes = this.graph.nodeIds.filter(id => {\n      return !this.graph.isSubgraph(id)\n    })\n\n    // we have to append all simpleNodes to the graph now\n    this.graph.nodes.forEach(graphNode => {\n      const nodeGroup = selection.append('g').addClass('node')\n\n      const labelGroup = nodeGroup.append('g').addClass('label')\n      const label = labelGroup.append(\n        new GraphLabel({ label: graphNode.label }).group\n      )\n      const labelBBox = label.node.getBBox()\n\n      labelBBox.width += graphNode.paddingLeft + graphNode.paddingRight\n      labelBBox.height += graphNode.paddingTop + graphNode.paddingBottom\n\n      labelGroup.attr(\n        'transform',\n        'translate(' +\n          (graphNode.paddingLeft - graphNode.paddingRight) / 2 +\n          ',' +\n          (graphNode.paddingTop - graphNode.paddingBottom) / 2 +\n          ')'\n      )\n\n      // nodeGroup.node.style.opacity = 0\n\n      const shape = nodeGroup.append(\n        new Shape(graphNode.shape, labelBBox, graphNode).shape\n      )\n      const shapeBBox = shape.node.getBBox()\n      graphNode.width = shapeBBox.width\n      graphNode.height = shapeBBox.height\n      nodeGroup.append(labelGroup)\n      graphNode.svgGroup = nodeGroup\n    })\n    // let svgNodes = selection.querySelectorAll('g.node')\n    // svgNodes.forEach((svgNode) => {\n\n    //   svgNode.classList.add('update')\n    // })\n\n    // for (const node of nodes) {\n    //   const shape = shapes[node.shape]\n    // }\n  }\n\n  createLabel(selection) {}\n\n  /**\n   *\n   * @param {GraphSvg} selection\n   * @param {Graph} g\n   */\n  createEdgeLabels(selection, g) {\n    let svgEdgeLabels = selection.selectAll('g.edgeLabel')\n\n    this.graph.edges.forEach(edge => {\n      const edgeLabelGroup = selection.append('g').addClass('edgeLabel')\n\n      const labelGroup = edgeLabelGroup.append('g').addClass('label')\n      const label = labelGroup.append(\n        new GraphLabel({ label: edge.label }).group\n      )\n      const labelBBox = label.node.getBBox()\n\n      edge.width = edge.width || labelBBox.width\n      edge.height = edge.height || labelBBox.height\n    })\n  }\n\n  positionNodes() {\n    console.log(\n      'position nodes',\n      this.graph.nodes,\n      'with edges',\n      this.graph.edges\n    )\n    this.graph.nodes.forEach(graphNode => {\n      graphNode.svgGroup.attr(\n        'transform',\n        'translate(' + (graphNode.x || 0) + ',' + (graphNode.y || 0) + ')'\n      )\n    })\n  }\n\n  /**\n   *\n   * @param {GraphSvg} root\n   * @param {string} name\n   */\n  createOrSelectGroup(root, name) {\n    return root.select('g.' + name) || root.append('g').addClass(name)\n  }\n}\n","export default class FlowElement {\n  constructor(id, options) {\n    this.id = id\n    this.options = options\n    this.edges = []\n  }\n\n  leadsTo(destinationElement, options) {\n    this.edges.push({ otherId: destinationElement.id, options })\n    return destinationElement\n  }\n}\n","// import {} from \"d3\"\n// import {Graph} from \"graphlibrary\"\n// import dagreD3 from \"dagre-d3-renderer\"\nimport Graph from './Graph'\nimport Renderer from './Renderer'\nimport FlowElement from './FlowElement'\nimport GraphSvg from './graph/Svg';\n\nexport default class FlowChart {\n  constructor(options) {\n    localStorage.debug = 'layering'\n    this.elements = []\n  }\n\n  addElement(id, options) {\n    const el = new FlowElement(id, options)\n    this.elements.push(el)\n    return el\n  }\n\n  render(element) {\n    const svg = new GraphSvg('svg')\n    svg.node.id = 'f' + element.id\n    element.appendChild(svg.node)\n    const group = svg.append('g')\n\n    // Create the input graph\n    const graph = new Graph({\n      multiGraph: true,\n      compound: true,\n      rankDir: 'LR',\n      marginX: 20,\n      marginY: 20\n    })\n\n    // first create all nodes\n    for (const i in this.elements) {\n      const el = this.elements[i]\n      graph.setNode(el.id, el.options)\n    }\n\n    // now apply some styles to all nodes\n    for (const node of graph.nodes) {\n      node.rx = node.ry = 5\n    }\n\n    // now create all edges\n    for (const i in this.elements) {\n      const el = this.elements[i]\n      for (const k in el.edges) {\n        const edge = el.edges[k]\n\n        graph.setEdge(el.id, edge.otherId, edge.options)\n      }\n    }\n\n    const renderer = new Renderer(graph)\n\n    renderer.render(group)\n\n    // const svgElement = document.getElementById('f' + element.id)\n    // const groupElement = svgElement.querySelector('g')\n    // svgElement.style.width = groupElement.getBoundingClientRect().width + 40\n    // svgElement.style.height = groupElement.getBoundingClientRect().height + 40\n  }\n}\n","<template>\n  <div \n    :id=\"_uid\" \n    class=\"flowyChart\"/>\n</template>\n\n<script>\nimport FlowChart from './FlowChart'\n\nexport default {\n  name: 'VueFlowy',\n  props: {\n    chart: {\n      type: FlowChart,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chartElement: null\n    }\n  },\n  watch: {\n    'chart.elements': function(newVal, oldVal) {\n      this.chart.render(this.chartElement)\n    }\n  },\n  mounted() {\n    this.chartElement = document.getElementById(this._uid)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.flowyChart {\n  svg {\n    display: block;\n    margin: 0 auto;\n  }\n\n  .node rect {\n    stroke: #999;\n    fill: #fff;\n    stroke-width: 1.5px;\n  }\n\n  .edgePath path {\n    stroke: #333;\n    stroke-width: 1.5px;\n  }\n}\n</style>\n","import mod from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=script&lang=js\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./VueFlowy.vue?vue&type=template&id=6244c0f8\"\nimport script from \"./VueFlowy.vue?vue&type=script&lang=js\"\nexport * from \"./VueFlowy.vue?vue&type=script&lang=js\"\nimport style0 from \"./VueFlowy.vue?vue&type=style&index=0&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import VueFlowy from './VueFlowy.vue'\nimport FlowChart from './FlowChart.js'\n\nconst plugin = {\n  install: Vue => {\n    Vue.component(VueFlowy.name, VueFlowy)\n  }\n}\n\nVueFlowy.install = plugin.install\n\nexport default { VueFlowy, FlowChart }\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".flowyChart svg{display:block;margin:0 auto}.flowyChart .node rect{stroke:#999;fill:#fff;stroke-width:1.5px}.flowyChart .edgePath path{stroke:#333;stroke-width:1.5px}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"407dd04a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","import mod from \"-!../node_modules/vue-style-loader/index.js??ref--8-oneOf-2-0!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\"; export default mod; export * from \"-!../node_modules/vue-style-loader/index.js??ref--8-oneOf-2-0!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\"","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  let i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"],"sourceRoot":""}