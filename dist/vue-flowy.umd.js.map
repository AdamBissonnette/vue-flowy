{"version":3,"sources":["webpack://vue-flowy/webpack/universalModuleDefinition","webpack://vue-flowy/webpack/bootstrap","webpack://vue-flowy/./src/VueFlowy.vue?33d2","webpack://vue-flowy/./src/graph/Node.js","webpack://vue-flowy/./src/graph/Edge.js","webpack://vue-flowy/./src/graph/Layout.js","webpack://vue-flowy/./src/Graph.js","webpack://vue-flowy/./src/graph/Svg.js","webpack://vue-flowy/./src/graph/Shape.js","webpack://vue-flowy/./src/graph/Label.js","webpack://vue-flowy/./src/Renderer.js","webpack://vue-flowy/./src/FlowElement.js","webpack://vue-flowy/./src/FlowChart.js","webpack://vue-flowy/src/VueFlowy.vue","webpack://vue-flowy/./src/VueFlowy.vue?d097","webpack://vue-flowy/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://vue-flowy/./src/VueFlowy.vue","webpack://vue-flowy/./src/main.js","webpack://vue-flowy/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js","webpack://vue-flowy/./node_modules/path-browserify/index.js","webpack://vue-flowy/./src/VueFlowy.vue?f414","webpack://vue-flowy/./node_modules/ms/index.js","webpack://vue-flowy/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://vue-flowy/./node_modules/debug/src/browser.js","webpack://vue-flowy/./node_modules/node-libs-browser/mock/process.js","webpack://vue-flowy/./node_modules/debug/src/debug.js","webpack://vue-flowy/./src/VueFlowy.vue?2514"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;ACnEA,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,gCAAgC,eAAe;AACzJ;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AC5BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;AClCA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,EAAE;AACf,aAAa,EAAE;AACf,aAAa,EAAE;AACf,aAAa,EAAE;AACf,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAgC,kBAAkB;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oCAAoC,cAAc;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;AC/bA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gBAAgB,eAAe;AAC/B;AACA,gBAAgB,UAAU;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,UAAU;AACzB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,gBAAgB;AAChB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,gBAAgB;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO,cAAc,EAAE;AACtC;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO,cAAc,EAAE;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;;;AC/SA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;;AC1DA;;AAEA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;AC/BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,C;;ACbA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,8BAAwB,yBAAyB;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAAwB,oBAAoB;AAC5C;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;;ACvKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,0CAA0C;AAC/D;AACA;AACA;;;ACXA,YAAY;AACZ,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9BuH,0GAAoB,C;;;;;ACA3I;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AC5FkC;AAClC;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8D;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0CAAgB;;;ACXhB;AACA;+EACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/NmW,6aAAoB,C;;;;;;;ACAvX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvJA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;ACxLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B,4BAA4B;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACzMA,uC","file":"vue-flowy.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-flowy\"] = factory();\n\telse\n\t\troot[\"vue-flowy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"+xUi\");\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flowyChart\",attrs:{\"id\":_vm._uid}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const defaults = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n  width: 0,\n  height: 0\n}\n\nexport default class GraphNode {\n  constructor(id, options) {\n    /** @type {string} */\n    this.id = id\n    this.setOptions(options)\n  }\n\n  setOptions(options = {}) {\n    if (!options.label) {\n      options.label = this.id\n    }\n\n    Object.assign(this, defaults, options)\n  }\n\n  setDefaults() {}\n}\n","const DEFAULT_EDGE_NAME = '\\x00'\nconst EDGE_KEY_DELIM = '\\x01'\n\nconst defaults = {\n  minLen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labelOffset: 10,\n  labelPos: 'r'\n}\n\nexport default class Edge {\n  constructor(id, from, to, options) {\n    this.id = id\n    this.from = from\n    this.to = to\n    this.order = 0\n    this.points = []\n    this.setOptions(options)\n  }\n\n  static generateId(from, to, directed = false) {\n    if (!directed && from > to) {\n      const tmp = from\n      from = to\n      to = tmp\n    }\n    return from + EDGE_KEY_DELIM + to + EDGE_KEY_DELIM + DEFAULT_EDGE_NAME\n  }\n\n  setOptions(options) {\n    Object.assign(this, defaults, options)\n  }\n}","import Graph from '../Graph'\nimport GraphNode from './Node'\nimport Edge from './Edge'\nimport debug from 'debug'\n\nconst ldb = debug('layout')\n\nexport default class Layout {\n  /**\n   *\n   * @param {Graph} graph\n   */\n  constructor(graph) {\n    /** @type {Graph} */\n    this.graph = graph\n    this.runLayout()\n    ldb('new layout for graph', graph)\n  }\n\n  runLayout() {\n    this.makeSpaceForEdgeLabels()\n    this.createNestingGraph()\n    this.rank()\n    this.cleanupNestingGraph()\n    this.order()\n    this.position()\n    this.translateGraph()\n  }\n\n  makeSpaceForEdgeLabels() {\n    this.graph.rankSep /= 2\n    console.log(this.graph)\n    this.graph.edges.forEach(edge => {\n      console.log('making space for edge', edge)\n      edge.minLen *= 2\n\n      if (edge.labelPos.toLowerCase() === 'c') {\n        return\n      }\n\n      if (this.graph.rankDir === 'TB' || this.graph.rankDir === 'BT') {\n        edge.width += edge.labelOffset\n      } else {\n        edge.height += edge.labelOffset\n      }\n    })\n  }\n\n  createNestingGraph() {\n    console.log('creating nesting graph')\n    this.graph.root = this.graph.setNode('_root', { dummy: 'root' })\n    const depths = this.treeDepths()\n    console.log('depths', depths)\n    const height = Math.max(...Object.values(depths)) - 1\n    const nodeSep = 2 * height + 1\n\n    // multiply minLen by nodeSep to align nodes on non-border ranks\n    this.graph.edges.forEach(edge => {\n      edge.minLen *= nodeSep\n    })\n\n    // calculate a weight that is sufficient to keep subgraphs vertically compact\n    const weight = this.graph.edges.reduce(\n      (prevVal, edge) => prevVal + edge.weight,\n      0\n    )\n\n    // create border nodes and link them up\n    this.graph.getChildren().forEach(child => {\n      console.log('calling dfs with', this.graph.root, nodeSep, weight, height, depths, child)\n      this.dfs(this.graph.root, nodeSep, weight, height, depths, child)\n    })\n\n    this.graph.nodeRankFactor = nodeSep\n  }\n\n  cleanupNestingGraph() {\n    this.graph.removeNode(this.graph.root.id)\n    this.graph.root = null\n    this.graph.edges.forEach(edge => {\n      if (edge.nestingEdge) {\n        this.graph.removeEdge(edge.id)\n      }\n    })\n  }\n\n  treeDepths() {\n    const depths = {}\n    const layout = this\n\n    function dfs(nodeId, depth = 1) {\n      const children = layout.graph.getChildren(nodeId)\n      console.log('children of', nodeId, 'are', children, '. depth:', depth)\n      if (children && children.length) {\n        children.forEach(childId => {\n          console.log('child', childId)\n          dfs(childId, depth + 1)\n        })\n      }\n      depths[nodeId] = depth\n    }\n    this.graph.getChildren().forEach(childId => {\n      dfs(childId)\n    })\n    return depths\n  }\n\n  /**\n   *\n   * @param {GraphNode} root\n   * @param {*} nodeSep\n   * @param {*} weight\n   * @param {*} height\n   * @param {*} depths\n   * @param {GraphNode} node\n   */\n  dfs(root, nodeSep, weight, height, depths, nodeId) {\n    const children = this.graph.getChildren(nodeId)\n    console.log('DFS: children of', nodeId, children)\n    if (!children.length) {\n      if (nodeId !== root.id) {\n        this.graph.setEdge(root.id, nodeId, { weight: 0, minLen: nodeSep })\n      }\n      return\n    }\n\n    const top = this.addBorderNode('_bt')\n    const bottom = this.addBorderNode('_bb')\n\n    this.graph.setParent(top, nodeId)\n    this.graph.borderTop = top\n    this.graph.setParent(bottom, nodeId)\n    this.graph.borderBottom = bottom\n\n    const dfs = this.dfs\n\n    children.forEach(child => {\n      this.dfs(root, nodeSep, weight, height, depths, child)\n\n      const childTop = child.borderTop ? child.borderTop : child\n      const childBottom = child.borderBottom ? child.borderBottom : child\n      const thisWeight = child.borderTop ? weight : 2 * weight\n      const minLen = childTop !== childBottom ? 1 : height - depths[nodeId] + 1\n\n      this.graph.setEdge(top, childTop, {\n        weight: thisWeight,\n        minLen: minLen,\n        nestingEdge: true\n      })\n\n      this.graph.setEdge(childBottom, bottom, {\n        weight: thisWeight,\n        minLen: minLen,\n        nestingEdge: true\n      })\n    })\n\n    if (!this.graph.parent(nodeId)) {\n      this.graph.setEdge(root, top, {\n        weight: 0,\n        minLen: height + depths[nodeId]\n      })\n    }\n  }\n\n  addBorderNode(prefix, rank, order) {\n    const node = {\n      width: 0,\n      height: 0\n    }\n    if (rank && order) {\n      node.rank = rank\n      node.order = order\n    }\n    return this.addDummyNode('border', node, prefix)\n  }\n\n  addDummyNode(type, attrs, name) {\n    attrs.dummy = type\n    this.graph.setNode(name, attrs)\n    return name\n  }\n\n  rank() {\n    switch (this.graph.ranker) {\n      case 'network-simplex':\n        this.networkSimplexRanker()\n        break\n      case 'tight-tree':\n        this.tightTreeRanker()\n        break\n      case 'longest-path':\n        this.longestPathRanker()\n        break\n      default:\n        this.networkSimplexRanker()\n        break\n    }\n  }\n\n  position() {\n    this.positionY()\n  }\n\n  positionX() {\n    const layering = this.buildLayerMatrix()\n  }\n\n  positionY() {\n    const layering = this.buildLayerMatrix()\n    console.log('layering', layering)\n    const rankSep = this.graph.rankSep\n    let prevY = 0\n    layering.forEach(layer => {\n      const maxHeight = Math.max(\n        layer.map(node => {\n          return node.height\n        })\n      )\n      console.log('maxHeight of nodes layer', maxHeight)\n      layer.forEach(node => {\n        node.y = prevY + maxHeight / 2\n      })\n      prevY += maxHeight + rankSep\n    })\n  }\n\n  buildLayerMatrix() {\n    const layering = []\n    this.graph.nodes.forEach(node => {\n      console.log('creating layer with node', node, node.rank)\n      if (node.rank) {\n        if (!layering[node.rank]) {\n          layering[node.rank] = []\n        }\n        layering[node.rank][node.order] = node\n      }\n    })\n\n    return layering\n  }\n\n  networkSimplexRanker() {\n    this.longestPath()\n    this.feasibleTree()\n  }\n\n  longestPath() {\n    const layout = this\n    const visited = {}\n\n    function _longestPath(node) {\n      if (visited[node.id]) {\n        return node.rank\n      }\n      visited[node.id] = true\n\n      const min = Math.min(...layout.graph.outEdges(node).map(outEdge => {\n          return _longestPath(outEdge.to) - outEdge.minLen\n      }))\n      const rank = min === Infinity ? 0 : min\n\n      return (node.rank = rank)\n    }\n\n    this.graph.sources.forEach(_longestPath)\n  }\n\n  feasibleTree() {\n    this.treeGraph = new Graph({ directed: false })\n\n    const start = this.graph.nodeIds[0]\n    const size = this.graph.nodeIds.length\n    this.treeGraph.setNode(start)\n    console.log('start is', start, 'size is', size)\n\n    let edge\n    let delta\n    let doneTimes = 0\n    while (this.tightTree() < size) {\n      edge = this.findMinSlackEdge()\n      delta = this.treeGraph.hasNode(edge.from.id)\n        ? this.slack(edge)\n        : -this.slack(edge)\n      this.shiftRanks(delta)\n      doneTimes++\n      if (doneTimes > 200) {\n        throw new Error('too many loops, breaking now!')\n      }\n    }\n  }\n\n  /**\n   * Finds a maximal tree of tight edges and returns the number of nodes in the tree\n   */\n  tightTree() {\n    const layout = this\n    function dfs(node) {\n      console.log('nodeEdges', layout.graph.nodeEdges(node))\n      layout.graph.nodeEdges(node).forEach(edge => {\n        console.log('nodeEdge for', node.id, edge)\n        const to = node.id === edge.from.id ? edge.to : edge.from\n        console.log('not hasNode', !layout.treeGraph.hasNode(to.id), 'not slack', !layout.slack(edge))\n        if (!layout.treeGraph.hasNode(to.id) && !layout.slack(edge)) {\n          console.log('adding node to tighttree', to)\n          layout.treeGraph.setNode(to.id)\n          layout.treeGraph.setEdge(node.id, to.id)\n          dfs(to)\n        }\n      })\n    }\n\n    this.treeGraph.nodes.forEach(dfs)\n    console.log('tightTree size is', this.treeGraph.nodeIds.length)\n    return this.treeGraph.nodeIds.length\n  }\n\n  findMinSlackEdge() {\n    let minSlackEdge\n    let minSlack = Infinity\n\n    console.log('finding min slack edge')\n\n    this.graph.edges.forEach(edge => {\n      if (\n        this.treeGraph.hasNode(edge.from.id) !==\n        this.treeGraph.hasNode(edge.to.id)\n      ) {\n        const slack = this.slack(edge)\n        if (slack < minSlack) {\n          minSlackEdge = edge\n          minSlack = slack\n        }\n      }\n    })\n\n    return minSlackEdge\n  }\n\n  /**\n   * Returns the amount of slack for the given edge. The slack is defined as the difference\n   * between the length of the edge and its minimum length\n   * @param {Edge} edge\n   */\n  slack(edge) {\n    console.log(\n      'calculating slack of',\n      edge,\n      edge.to.rank,\n      edge.from.rank,\n      edge.minLen\n    )\n    return edge.to.rank - edge.from.rank - edge.minLen\n  }\n\n  order() {\n    const maxRank = this.maxRank()\n    console.log('STOPPED HERE, code further!')\n    // const downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges')\n    // const upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges')\n\n    // let layering = initOrder(g)\n    // assignOrder(g, layering)\n\n    // let bestCC = Number.POSITIVE_INFINITY\n    // let best\n\n    // for (let i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    //   sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2)\n\n    //   layering = util.buildLayerMatrix(g)\n    //   const cc = crossCount(g, layering)\n    //   if (cc < bestCC) {\n    //     lastBest = 0\n    //     best = _.cloneDeep(layering)\n    //     bestCC = cc\n    //   }\n    // }\n\n    // assignOrder(g, best)\n  }\n\n  maxRank() {\n    this.graph.nodes.reduce((prevV, node) => {\n      return node.rank > prevV ? node.rank : prevV\n    }, -Infinity)\n  }\n\n  shiftRanks(delta) {\n    this.treeGraph.nodes.forEach(node => {\n      node.rank += delta\n    })\n  }\n\n  translateGraph() {\n    let minX = Infinity\n    let maxX = 0\n    let minY = Infinity\n    let maxY = 0\n    const marginX = this.graph.marginX || 0\n    const marginY = this.graph.marginY || 0\n\n    function getExtremes(o) {\n      const x = o.x\n      const y = o.y\n      const w = o.width\n      const h = o.height\n      minX = Math.min(minX, x - w / 2)\n      maxX = Math.max(maxX, x + w / 2)\n      minY = Math.min(minY, y - h / 2)\n      maxY = Math.max(maxY, y + h / 2)\n    }\n\n    this.graph.nodes.forEach(getExtremes)\n\n    this.graph.edges.forEach(edge => {\n      if (edge.x) {\n        getExtremes(edge)\n      }\n    })\n\n    minX -= marginX\n    minY -= marginY\n\n    this.graph.nodes.forEach(node => {\n      node.x -= minX\n      node.y -= minY\n    })\n\n    this.graph.edges.forEach(edge => {\n      edge.points.forEach(point => {\n        point.x -= minX\n        point.y -= minY\n      })\n\n      if (edge.x) {\n        edge.x -= minX\n      }\n\n      if (edge.y) {\n        edge.y -= minY\n      }\n    })\n\n    this.graph.width = maxX - minX + marginX\n    this.graph.height = maxY - minY + marginY\n  }\n}\n","import GraphNode from './graph/Node'\nimport Layout from './graph/Layout'\nimport Edge from './graph/Edge'\n\nconst GRAPH_NODE = '\\x00'\n\nexport default class Graph {\n  constructor({\n    directed = true,\n    multiGraph = false,\n    compound = false,\n    rankDir = 'TB',\n    rankSep = 50,\n    edgeSep = 20,\n    nodeSep = 50,\n    marginX = 20,\n    marginY = 20\n  }) {\n    Object.assign(this, {\n      directed,\n      multiGraph,\n      compound,\n      rankDir,\n      rankSep,\n      edgeSep,\n      nodeSep,\n      marginX,\n      marginY\n    })\n    /** @type {{id: GraphNode}} */\n    this._nodes = {}\n    /** @type {{id: Edge}} */\n    this._edges = {}\n\n    if (this.compound === true) {\n      this.parent = {}\n      this.children = {}\n      this.children[GRAPH_NODE] = {}\n    }\n\n    /** @type {GraphNode} */\n    this.root = null\n\n    // v -> edgeObj\n    this.in = {}\n\n    // u -> v -> Number\n    this.preds = {}\n\n    // v -> edgeObj\n    this.out = {}\n\n    // v -> w -> Number\n    this.sucs = {}\n  }\n\n  /**\n   *\n   * @param {string} id\n   * @param {{}} options\n   * @returns {GraphNode} node\n   */\n  setNode(id, options) {\n    if (this._nodes[id]) {\n      if (options) {\n        this._nodes[id].setOptions(options)\n      }\n      return this._nodes[id]\n    }\n\n    console.log('creating node', id, options)\n\n    this._nodes[id] = new GraphNode(id, options)\n\n    if (this.compound === true) {\n      this.parent[id] = GRAPH_NODE\n      this.children[id] = {}\n      this.children[GRAPH_NODE][id] = true\n    }\n\n    this.in[id] = {}\n    this.preds[id] = {}\n    this.out[id] = {}\n    this.sucs[id] = {}\n    return this._nodes[id]\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  removeNode(id) {\n    console.log('TODO: removing not finished')\n    if (!this._nodes[id]) {\n      return\n    }\n\n    delete this._nodes[id]\n\n    if (this.compound) {\n      delete this.parent[id]\n      delete this.children[id]\n    }\n\n    delete this.in[id]\n    delete this.preds[id]\n    delete this.out[id]\n    delete this.sucs[id]\n  }\n\n  /**\n   *\n   * @param {string} from\n   * @param {string} to\n   * @param {{}} options\n   */\n  setEdge(from, to, options) {\n    console.log('setting edge', from, to, options)\n\n    const edgeId = Edge.generateId(from, to, this.directed)\n\n    if (this._edges[edgeId]) {\n      if (options) {\n        this._edges[edgeId].setOptions(options)\n      }\n      return this\n    }\n\n    // first ensure the nodes exist\n    const fromNode = this.setNode(from)\n    const toNode = this.setNode(to)\n\n    const edge = new Edge(edgeId, fromNode, toNode, options)\n\n    this._edges[edgeId] = edge\n\n    this.out[from][edgeId] = edge\n    this.in[to][edgeId] = edge\n    return this\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  removeEdge(id) {\n    console.log('TODO: removing not finished')\n    if (!this.edges[id]) {\n      return\n    }\n    /** @type {Edge} */\n    const edge = this._edges[id]\n    delete this.in[edge.from]\n    delete this.out[edge.to]\n    delete this._edges[id]\n  }\n\n  getNode(id) {\n    return this._nodes[id]\n  }\n\n  getChildren(id) {\n    if (!id) {\n      id = GRAPH_NODE\n    }\n\n    if (this.compound) {\n      const childArray = this.children[id]\n      if (childArray) {\n        return Object.keys(childArray)\n      }\n    } else if (id === GRAPH_NODE) {\n      return this.nodes\n    } else {\n      return []\n    }\n  }\n\n  setParent(id, parentId) {\n    if (!this.compound) {\n      throw new Error('Cannot set parent in a non-compound graph')\n    }\n\n    if (!parentId) {\n      parentId = GRAPH_NODE\n    } else {\n      // Coerce parent to string\n      for (let ancestor = parent; !ancestor; ancestor = this.parent(ancestor)) {\n        if (ancestor === id) {\n          throw new Error(\n            'Setting ' +\n              parentId +\n              ' as parent of ' +\n              id +\n              ' would create a cycle'\n          )\n        }\n      }\n  \n      this.setNode(parentId)\n    }\n  \n    this.setNode(id)\n    delete this.children[parentId][id]\n    this.parent[id] = parentId\n    this.children[parentId][id] = true\n  }\n\n  /**\n   *\n   * @param {GraphNode} from\n   * @param {GraphNode} to\n   */\n  nodeEdges(from, to) {\n    const inEdges = this.inEdges(from, to)\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(from, to))\n    }\n  }\n\n  isSubgraph(id) {\n    return this.getChildren(id).length !== 0\n  }\n\n  layout() {\n    console.log('layouting graph')\n    const layoutGraph = new Layout(this)\n  }\n\n  /**\n   *\n   * @param {string} id\n   */\n  hasNode(id) {\n    return this._nodes[id]\n  }\n\n  /**\n   * @returns {Array<{label: string}>} all nodes of the graph\n   */\n  get nodes() {\n    return Object.values(this._nodes)\n  }\n\n  /**\n   * @returns {Array<{label: string}>} all edges of the graph\n   */\n  get edges() {\n    return Object.values(this._edges)\n  }\n\n  get sources() {\n    return this.nodes.filter(node => {\n      return Object.keys(this.in[node.id]).length === 0\n    })\n  }\n\n  /**\n   *\n   * @param {GraphNode} from\n   * @param {GraphNode} to\n   */\n  inEdges(from, to) {\n    // console.log('ins', this.in)\n    let inFrom = this.in[from.id]\n    // console.log('in from', from, 'to', to, inFrom)\n    if (!inFrom) {\n      return\n    }\n\n    const edges = Object.values(inFrom)\n    if (!to) {\n      return edges\n    }\n    return edges.filter(edge => edge.from.id === to.id)\n  }\n\n  /**\n   *\n   * @param {GraphNode} from\n   * @param {GraphNode} to\n   */\n  outEdges(from, to) {\n    // console.log('outs', this.out)\n    let outFrom = this.out[from.id]\n    // console.log('out from', from, 'to', to, outFrom)\n    if (!outFrom) {\n      return\n    }\n\n    const edges = Object.values(outFrom)\n    if (!to) {\n      return edges\n    }\n    return edges.filter(edge => edge.to.id === to.id)\n  }\n\n  /**\n   * @returns {Array<string>} array of all node IDs\n   */\n  get nodeIds() {\n    return Object.keys(this._nodes)\n  }\n}\n","export default class GraphSvg {\n  constructor(tag) {\n    /**\n     * @type {HTMLElement}\n     */\n    this.node = document.createElementNS('http://www.w3.org/2000/svg', tag)\n  }\n\n  /**\n   *\n   * @param {string|GraphSvg} tag\n   * @returns {GraphSvg}\n   */\n  append(el) {\n    if (!(el instanceof GraphSvg)) {\n      el = new GraphSvg(el)\n    }\n    this.node.appendChild(el.node)\n    return el\n  }\n\n  attr(attribute, value) {\n    this.node.setAttribute(attribute, value)\n    return this\n  }\n\n  select(selector) {\n    const res = this.node.querySelector(selector)\n    if (res) {\n      return new GraphSvg(res)\n    }\n\n    return null\n  }\n\n  selectAll(selector) {\n    const res = this.node.querySelectorAll(selector)\n    if (res) {\n      return Array.from(res).map(node => new GraphSvg(node))\n    }\n\n    return null\n  }\n\n  text(s) {\n    const el = document.createTextNode(s)\n    this.node.appendChild(el)\n    return this\n  }\n\n  /**\n   *\n   * @param {string} c\n   */\n  addClass(c) {\n    this.node.classList.add(c)\n    return this\n  }\n}\n","import GraphSvg from \"../graph/Svg\";\n\nexport default class Shape {\n\n  /**\n   * \n   * @param {string} shapeType \n   * @param {Object} bbox \n   * @param {Object} options \n   */\n  constructor(shapeType, bbox, options) {\n    /** @type {GraphSvg} */\n    this.shape = this[shapeType](bbox, options)\n    console.log('inside bbox', this.shape.node.getBBox())\n  }\n  /**\n   * \n   * @param {Object} bbox \n   * @param {Object} options \n   */\n  rect(bbox, options) {\n    console.log('bbox', bbox)\n    return new GraphSvg('rect')\n      .attr('rx', options.rx)\n      .attr('ry', options.ry)\n      .attr('x', -bbox.width / 2)\n      .attr('y', -bbox.height / 2)\n      .attr('width', bbox.width)\n      .attr('height', bbox.height)\n      .attr('rx', options.rx)\n  }\n}","import GraphSvg from \"./Svg\";\n\nexport default class GraphLabel {\n  constructor(labelData) {\n    this.group = new GraphSvg('g')\n    this.labelData = labelData\n\n    this.textLabel()\n  }\n\n  textLabel() {\n    const text = this.group.append('text').text(this.labelData.label)\n  }\n}","import Graph from './Graph'\nimport Shape from './graph/Shape'\nimport GraphSvg from './graph/Svg'\nimport GraphLabel from './graph/Label'\n\nexport default class Renderer {\n  /**\n   *\n   * @param {Graph} graph\n   */\n  constructor(graph) {\n    this.graph = graph\n  }\n\n  render(svg) {\n    console.log('rendering', svg, this.graph)\n    // TODO: remove all children of svg\n\n    const edgePathsGroup = this.createOrSelectGroup(svg, 'edgePaths')\n    const edgeLabels = this.createEdgeLabels(\n      this.createOrSelectGroup(svg, 'edgeLabels'),\n      this.graph\n    )\n    this.createNodes(this.createOrSelectGroup(svg, 'nodes'))\n\n    this.graph.layout()\n\n    let minX = 1000\n    let minY = 1000\n    let maxX = -1000\n    let maxY = -1000\n\n    this.graph.nodes.forEach(node => {\n      minX = Math.min(minX, node.x - node.width / 2)\n      minY = Math.min(minY, node.y - node.height / 2)\n      maxX = Math.max(maxX, node.x + node.width / 2)\n      maxY = Math.max(maxY, node.y + node.height / 2)\n    })\n\n    this.graph.edges.forEach(edge => {\n      if (edge.label && edge.x && edge.y) {\n        minX = Math.min(minX, edge.x - edge.width / 2)\n        minY = Math.min(minY, edge.y - edge.height / 2)\n        maxX = Math.max(maxX, edge.x + edge.width / 2)\n        maxY = Math.max(maxY, edge.y + edge.height / 2)\n      }\n      const points = edge.points.slice(1, edge.points.length - 1) // intersetion points don't matter\n      for (let i = 0; i < points.length; i++) {\n        const point = points[i]\n        minX = Math.min(minX, point.x)\n        minY = Math.min(minY, point.y)\n        maxX = Math.max(maxX, point.x)\n        maxY = Math.max(maxY, point.y)\n      }\n    })\n\n    this.graph.minX = minX\n    this.graph.minY = minY\n    this.graph.maxX = maxX\n    this.graph.maxY = maxY\n\n    console.log('GRAPH', this.graph)\n\n    this.positionNodes()\n  }\n\n  /**\n   *\n   * @param {GraphSvg} selection\n   * @param {Graph} graph\n   */\n  createNodes(selection) {\n    const simpleNodes = this.graph.nodeIds.filter(id => {\n      return !this.graph.isSubgraph(id)\n    })\n\n    // we have to append all simpleNodes to the graph now\n    this.graph.nodes.forEach(graphNode => {\n      const nodeGroup = selection.append('g').addClass('node')\n\n      const labelGroup = nodeGroup.append('g').addClass('label')\n      const label = labelGroup.append(\n        new GraphLabel({ label: graphNode.label }).group\n      )\n      const labelBBox = label.node.getBBox()\n\n      labelBBox.width += graphNode.paddingLeft + graphNode.paddingRight\n      labelBBox.height += graphNode.paddingTop + graphNode.paddingBottom\n\n      labelGroup.attr(\n        'transform',\n        'translate(' +\n          (graphNode.paddingLeft - graphNode.paddingRight) / 2 +\n          ',' +\n          (graphNode.paddingTop - graphNode.paddingBottom) / 2 +\n          ')'\n      )\n\n      // nodeGroup.node.style.opacity = 0\n\n      const shape = nodeGroup.append(\n        new Shape(graphNode.shape, labelBBox, graphNode).shape\n      )\n      const shapeBBox = shape.node.getBBox()\n      graphNode.width = shapeBBox.width\n      graphNode.height = shapeBBox.height\n      nodeGroup.append(labelGroup)\n      graphNode.svgGroup = nodeGroup\n    })\n    // let svgNodes = selection.querySelectorAll('g.node')\n    // svgNodes.forEach((svgNode) => {\n\n    //   svgNode.classList.add('update')\n    // })\n\n    // for (const node of nodes) {\n    //   const shape = shapes[node.shape]\n    // }\n  }\n\n  createLabel(selection) {}\n\n  /**\n   *\n   * @param {GraphSvg} selection\n   * @param {Graph} g\n   */\n  createEdgeLabels(selection, g) {\n    let svgEdgeLabels = selection.selectAll('g.edgeLabel')\n\n    this.graph.edges.forEach(edge => {\n      const edgeLabelGroup = selection.append('g').addClass('edgeLabel')\n\n      const labelGroup = edgeLabelGroup.append('g').addClass('label')\n      const label = labelGroup.append(\n        new GraphLabel({ label: edge.label }).group\n      )\n      const labelBBox = label.node.getBBox()\n\n      edge.width = edge.width || labelBBox.width\n      edge.height = edge.height || labelBBox.height\n    })\n  }\n\n  positionNodes() {\n    console.log(\n      'position nodes',\n      this.graph.nodes,\n      'with edges',\n      this.graph.edges\n    )\n    this.graph.nodes.forEach(graphNode => {\n      graphNode.svgGroup.attr(\n        'transform',\n        'translate(' + (graphNode.x || 0) + ',' + (graphNode.y || 0) + ')'\n      )\n    })\n  }\n\n  /**\n   *\n   * @param {GraphSvg} root\n   * @param {string} name\n   */\n  createOrSelectGroup(root, name) {\n    return root.select('g.' + name) || root.append('g').addClass(name)\n  }\n}\n","export default class FlowElement {\n  constructor(id, options) {\n    this.id = id\n    this.options = options\n    this.edges = []\n  }\n\n  leadsTo(destinationElement, options) {\n    this.edges.push({ otherId: destinationElement.id, options })\n    return destinationElement\n  }\n}\n","// import {} from \"d3\"\n// import {Graph} from \"graphlibrary\"\n// import dagreD3 from \"dagre-d3-renderer\"\nimport Graph from './Graph'\nimport Renderer from './Renderer'\nimport FlowElement from './FlowElement'\nimport GraphSvg from './graph/Svg';\n\nexport default class FlowChart {\n  constructor(options) {\n    this.elements = []\n  }\n\n  addElement(id, options) {\n    const el = new FlowElement(id, options)\n    this.elements.push(el)\n    return el\n  }\n\n  render(element) {\n    const svg = new GraphSvg('svg')\n    svg.node.id = 'f' + element.id\n    element.appendChild(svg.node)\n    const group = svg.append('g')\n\n    // Create the input graph\n    const graph = new Graph({\n      multiGraph: true,\n      compound: true,\n      rankDir: 'LR',\n      marginX: 20,\n      marginY: 20\n    })\n\n    // first create all nodes\n    for (const i in this.elements) {\n      const el = this.elements[i]\n      graph.setNode(el.id, el.options)\n    }\n\n    // now apply some styles to all nodes\n    for (const node of graph.nodes) {\n      node.rx = node.ry = 5\n    }\n\n    // now create all edges\n    for (const i in this.elements) {\n      const el = this.elements[i]\n      for (const k in el.edges) {\n        const edge = el.edges[k]\n\n        graph.setEdge(el.id, edge.otherId, edge.options)\n      }\n    }\n\n    const renderer = new Renderer(graph)\n\n    renderer.render(group)\n\n    // const svgElement = document.getElementById('f' + element.id)\n    // const groupElement = svgElement.querySelector('g')\n    // svgElement.style.width = groupElement.getBoundingClientRect().width + 40\n    // svgElement.style.height = groupElement.getBoundingClientRect().height + 40\n  }\n}\n","<template>\n  <div \n    :id=\"_uid\" \n    class=\"flowyChart\"/>\n</template>\n\n<script>\nimport FlowChart from './FlowChart'\n\nexport default {\n  name: 'VueFlowy',\n  props: {\n    chart: {\n      type: FlowChart,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chartElement: null\n    }\n  },\n  watch: {\n    'chart.elements': function(newVal, oldVal) {\n      this.chart.render(this.chartElement)\n    }\n  },\n  mounted() {\n    this.chartElement = document.getElementById(this._uid)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.flowyChart {\n  svg {\n    display: block;\n    margin: 0 auto;\n  }\n\n  .node rect {\n    stroke: #999;\n    fill: #fff;\n    stroke-width: 1.5px;\n  }\n\n  .edgePath path {\n    stroke: #333;\n    stroke-width: 1.5px;\n  }\n}\n</style>\n","import mod from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=script&lang=js\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./VueFlowy.vue?vue&type=template&id=6244c0f8\"\nimport script from \"./VueFlowy.vue?vue&type=script&lang=js\"\nexport * from \"./VueFlowy.vue?vue&type=script&lang=js\"\nimport style0 from \"./VueFlowy.vue?vue&type=style&index=0&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import VueFlowy from './VueFlowy.vue'\nimport FlowChart from './FlowChart.js'\n\nconst plugin = {\n  install: Vue => {\n    Vue.component(VueFlowy.name, VueFlowy)\n  }\n}\n\nVueFlowy.install = plugin.install\n\nexport default { VueFlowy, FlowChart }\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--8-oneOf-2-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-2-2!../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueFlowy.vue?vue&type=style&index=0&lang=scss\"","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  let i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}